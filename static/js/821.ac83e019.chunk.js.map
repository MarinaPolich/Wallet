{"version":3,"file":"static/js/821.ac83e019.chunk.js","mappings":"4NAGaA,EAAMC,EAAAA,GAAAA,IAAH,8WAULC,EAAAA,EAAAA,OAIAA,EAAAA,EAAAA,QAMAA,EAAAA,EAAAA,SAKEC,EAAQF,EAAAA,GAAAA,GAAH,kMAYLG,EAASH,EAAAA,GAAAA,EAAH,2K,UClCNI,EAAU,WACrB,IAAMC,GAAcC,EAAAA,EAAAA,IAAYC,EAAAA,IAC1BC,GAAoBF,EAAAA,EAAAA,IAAYG,EAAAA,IACtC,GAA8BC,EAAAA,EAAAA,UAASL,GAAvC,eAAOM,EAAP,KAAgBC,EAAhB,KAOA,OANAC,EAAAA,EAAAA,YAAU,WACJL,GACFI,EAAWJ,EAEd,GAAE,CAACA,KAGF,UAACT,EAAD,YACE,SAACG,EAAD,4BACA,UAACC,EAAD,qBAAiBQ,EAAQG,QAAQ,QAGtC,C,2QCnBYC,GAAUf,GAAAA,GAAAA,QAAH,6OACTC,GAAAA,EAAAA,OAIAA,GAAAA,EAAAA,SAQEe,GAAchB,GAAAA,GAAAA,MAAH,gHAIbC,GAAAA,EAAAA,SAKEgB,GAAQjB,GAAAA,GAAAA,MAAH,qJASLkB,GAAWlB,GAAAA,GAAAA,GAAH,yNAaRmB,GAAUnB,GAAAA,GAAAA,GAAH,4NAaPoB,GAAQpB,GAAAA,GAAAA,MAAH,gHAOLqB,GAAWrB,GAAAA,GAAAA,GAAH,yLAQRsB,GAAStB,GAAAA,GAAAA,GAAH,yLAQNuB,GAAOvB,GAAAA,GAAAA,GAAH,mOASN,SAAAwB,GAAK,OACZA,EAAMC,OAAS,sBAAwB,oBAD3B,IAIHC,GAAY1B,GAAAA,GAAAA,GAAH,kNAUT2B,GAAO3B,GAAAA,GAAAA,GAAH,oOAKX,SAAAwB,GAAK,OAAKA,EAAMC,OAAS,sBAAwB,oBAA5C,IAQEG,GAAW5B,GAAAA,GAAAA,GAAH,0UAkBR6B,GAAW7B,GAAAA,GAAAA,KAAH,gHAOR8B,GAAU9B,GAAAA,GAAAA,KAAH,wCACT,SAAAwB,GAAK,OACZA,EAAMC,OAAS,sBAAwB,oBAD3B,IAIHM,GAAkB/B,GAAAA,GAAAA,IAAH,6GAOfgC,GAAkBhC,GAAAA,GAAAA,OAAH,weASjBC,GAAAA,EAAAA,OAWAA,GAAAA,EAAAA,SAQEgC,GAAajC,GAAAA,GAAAA,KAAH,2DAIVkC,GAAKlC,GAAAA,GAAAA,GAAH,mPAIJC,GAAAA,EAAAA,QAKH8B,IAOKI,GAAcnC,GAAAA,GAAAA,GAAH,mU,uDCxMXoC,GAAYpC,GAAAA,GAAAA,GAAH,wNAaTqC,GAAcrC,GAAAA,GAAAA,OAAH,iK,uDCXXsC,GAAYtC,GAAAA,GAAAA,EAAH,wCAITuC,IAAYvC,EAAAA,GAAAA,IAAOwC,GAAAA,GAAPxC,CAAH,mFAEXC,GAAAA,EAAAA,QAKEwC,GAAYzC,GAAAA,GAAAA,IAAH,6NAWT0C,GAAc1C,GAAAA,GAAAA,MAAH,iOAcX2C,GAAe3C,GAAAA,GAAAA,MAAH,8NAmBZ4C,GAAW5C,GAAAA,GAAAA,IAAH,0MAUR6C,GAAO7C,GAAAA,GAAAA,IAAH,gVAgBJ8C,IAAmB9C,EAAAA,GAAAA,IAAO+C,GAAAA,GAAP/C,CAAH,uGAGb0C,IAKHM,IAAoBhD,EAAAA,GAAAA,IAAO+C,GAAAA,GAAP/C,CAAH,0QAItB2C,GAGAC,GAAcC,IAQTI,IAAYjD,EAAAA,GAAAA,IAAOkD,GAAAA,EAAPlD,CAAH,+FAoCTmD,GAAMnD,GAAAA,GAAAA,IAAH,2PAYHoD,GAAYpD,GAAAA,GAAAA,OAAH,+aAiBXC,GAAAA,EAAAA,QAKEoD,GAAerD,GAAAA,GAAAA,OAAH,2YAcdC,GAAAA,EAAAA,QAKEqD,GAAgBtD,GAAAA,GAAAA,IAAH,gDAIbuD,GAAWvD,GAAAA,GAAAA,MAAH,kJAKVC,GAAAA,EAAAA,QAMEuD,GAAUxD,GAAAA,GAAAA,IAAH,oMAUPyD,GAAazD,GAAAA,GAAAA,IAAH,+JAKZC,GAAAA,EAAAA,QAQEyD,IAAc1D,EAAAA,GAAAA,IAAO+C,GAAAA,GAAP/C,CAAH,8bAiBbC,GAAAA,EAAAA,QAME0D,IAAY3D,EAAAA,GAAAA,IAAO4D,KAAP5D,CAAH,wQASXC,GAAAA,EAAAA,QAME4D,IAAe7D,EAAAA,GAAAA,IAAO+C,GAAAA,GAAP/C,CAAH,6aAiBdC,GAAAA,EAAAA,Q,2CChSE6D,IAAiB9D,EAAAA,GAAAA,IAAO+D,GAAAA,GAAP/D,CAAH,kNAMhBC,GAAAA,EAAAA,Q,WCNE+D,GAAc,SAAC,GAAD,IACvBC,EADuB,EACvBA,QACAC,EAFuB,EAEvBA,MACAC,EAHuB,EAGvBA,KAHuB,OAKvB,UAACL,GAAD,CACIM,KAAMF,EAAME,KACZC,MAAOJ,EAAUA,EAAQK,MAAK,SAAAC,GAAM,OAAIA,EAAOF,QAAUH,EAAMG,KAA3B,IAAoC,GACxEG,SAAU,SAACD,GAAD,OAAYJ,EAAKM,cAAcP,EAAME,KAAMG,EAAOF,MAAlD,EACVJ,QAASA,EACTS,YAAY,oBACZC,OAAQ,CACJC,QAAS,SAACC,EAAYC,GAAb,gBAAC,WACHD,GADE,IAELE,QAAS,OACTC,OAAQ,0BACRC,UAAW,OACXC,WAAY,OACZC,YAAa,QANR,IAZM,E,iBC8BrBC,GACK,UADLA,GAEI,SAGJC,GAAgB,CACpBC,gBAAiBC,OAASC,OAAO,cACjCC,KAAML,GACNM,WAAY,GACZC,OAAQ,GACRC,QAAS,IAGLC,GAASC,GAAAA,KAAaC,MAAM,CAChCN,KAAMK,GAAAA,KAAaE,WACnBL,OAAQG,GAAAA,KAAaE,SAAS,gBAC9BV,gBAAiBQ,GAAAA,KAEdE,WACAC,SAAQ,kBAAM,IAAIC,IAAV,IACXR,WAAYI,GAAAA,KAAaE,SAAS,mBAClCJ,QAASE,GAAAA,OAKLK,GAAY,SAAC,GAAc,IAAZ/B,EAAW,EAAXA,KACnB,OACE,UAAC,MAAD,CACEA,KAAMA,EACNgC,OAAQ,SAAAC,GAAO,OAAI,UAAC/D,GAAD,UAAY+D,GAAhB,GAGpB,EAEYC,GAAY,SAAC,GAAwE,IAAtEC,EAAqE,EAArEA,WAAYC,EAAyD,EAAzDA,WAAYC,EAA6C,EAA7CA,cAA6C,IAA9BC,QAAAA,OAA8B,MAApBrB,GAAoB,EACzFsB,GAAiBrG,EAAAA,EAAAA,KAAY,SAAAwE,GAAK,OAAIA,EAAM8B,WAAWC,KAArB,IAClCC,GAAaC,EAAAA,EAAAA,cAAY,SAACC,GAAD,cAAYL,QAAZ,IAAYA,OAAZ,EAAYA,EACvCK,QAAO,qBAAGvB,OAAoBuB,CAAvB,IACRC,KAAI,gBAAG7C,EAAH,EAAGA,KAAH,MAAmB,CAAEC,MAArB,EAAS6C,GAAuBC,MAAO/C,EAAvC,GAFwB,GAG7B,CAACuC,IAOH,OACE,UAAC,MAAD,CACEtB,cAAeqB,EACfU,iBAAkBvB,GAClBwB,SARiB,SAACC,EAAD,GAAqC,EAA1BC,WAA0B,cACxDD,EAAO3B,OAAS2B,EAAO7B,OAASL,IAAyBoC,KAAKC,IAAIH,EAAO3B,QAAU6B,KAAKC,IAAIH,EAAO3B,QACnGc,EAAca,EACf,EAEC,SAKG,SAAA9F,GACC,IAAMkG,EAAe,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACtBnG,EAAMiD,cAAckD,EAAOvD,KAAMuD,EAAOtD,OACpCsD,EAAOtD,QAAUe,GACnB5D,EAAMiD,cAAc,aAAcqC,EAAWa,EAAOtD,OAAO4C,KAAI,SAAAW,GAAC,OAAIA,EAAEvD,KAAN,IAAaC,MAAK,SAAAsD,GAAC,OAAIA,CAAJ,KAGnFpG,EAAMiD,cAAc,aAAciC,EAAQhB,WAE7C,EAMD,OACE,WAACnD,GAAD,YACE,WAACE,GAAD,YACE,UAACK,GAAD,CACEoE,GAAG,SACHzB,KAAK,QACLoC,QAASrG,EAAM8F,OAAO7B,OAASL,GAC/BZ,SAAUkD,EACVtD,KAAK,OACLC,MAAOe,MAET,UAACpC,GAAD,CACEkE,GAAG,UACHzB,KAAK,QACLoC,QAASrG,EAAM8F,OAAO7B,OAASL,GAC/BZ,SAAUkD,EACVtD,KAAK,OACLC,MAAOe,MAET,UAAC1C,GAAD,CAAaoF,QAAQ,SAArB,sBACA,UAAClF,GAAD,WACE,UAACC,GAAD,WACE,UAACI,GAAD,CACE8E,IAAKvG,EAAM8F,OAAO7B,OAASL,GAAuB4C,GAAAA,GAAQC,GAAAA,GAC1DC,MAAO,GACPC,OAAQ,GACRC,MAAM,gBAIZ,UAACzF,GAAD,CAAcmF,QAAQ,UAAtB,wBAGDtG,EAAM8F,OAAO7B,OAASL,KACvB,6BACE,UAAC,MAAD,CAAO8B,GAAG,aAAa9C,KAAK,aAAaiE,UAAWrE,GAAaC,QAAS6C,EAAWtF,EAAM8F,OAAO7B,SAClG,UAACU,GAAD,CAAW/B,KAAK,mBAMlB,WAACX,GAAD,YACE,mBAAOqE,QAAQ,YACf,UAACpE,GAAD,CAAawD,GAAG,SAASzB,KAAK,SAASrB,KAAK,SAASM,YAAY,UACjE,UAACyB,GAAD,CAAW/B,KAAK,YAChB,WAACd,GAAD,YACE,UAACK,GAAD,CACEuD,GAAG,kBACHzB,KAAK,OACLrB,KAAK,kBACLkE,SAAU/C,KAAO/D,EAAM8F,OAAOhC,iBAAiBiD,SAC/C/D,SAxDW,SAACH,GACpB,IAAMmE,EAAOjD,KAAOlB,GAAOmB,OAAO,cAClChE,EAAMiD,cAAc,kBAAmB+D,EACxC,EAsDSC,WAAW,gBAEb,UAACtC,GAAD,CAAW/B,KAAK,qBAChB,UAACb,GAAD,CAAUuE,QAAQ,kBAAlB,UACE,UAACtE,GAAD,CACE0E,MAAM,KACNC,OAAO,KACPO,QAAQ,YACRC,KAAK,OACLC,MAAM,6BALR,UAOE,kBACEC,EAAE,uMACFF,KAAK,uBAMf,mBAAOb,QAAQ,aACf,2BACE,UAACjE,GAAD,CAAc4B,KAAK,OAAOrB,KAAK,UAAUM,YAAY,eAEvD,WAACvB,GAAD,YACE,UAACC,GAAD,CAAWqC,KAAK,SAAhB,SAA0Be,KAC1B,UAACnD,GAAD,CAAcoC,KAAK,SAASqD,QAASvC,EAArC,yBAMP,GAGN,E,WC1LYwC,GAAW/I,GAAAA,GAAAA,IAAH,yTAcRgJ,GAAehJ,GAAAA,GAAAA,IAAH,uMAOdC,GAAAA,EAAAA,QClBLgJ,GAAYC,SAASC,cAAc,eAC5BC,GAAQ,SAAC,GAA8B,IAA5B7C,EAA2B,EAA3BA,WAAY8C,EAAe,EAAfA,UAGhCxI,EAAAA,EAAAA,YAAU,WACN,IAAMyI,EAAgB,SAAAC,GACH,WAAXA,EAAEC,MACFjD,GAEP,EAGD,OAFAkD,OAAOC,iBAAiB,UAAWJ,GAE5B,WACHG,OAAOE,oBAAoB,UAAWL,EACzC,CACJ,GAAE,CAAC/C,IASJ,OAAOqD,EAAAA,GAAAA,eACH,UAACb,GAAD,CAAUD,QAPc,SAAAS,GACpBA,EAAEM,gBAAkBN,EAAE5B,QACtBpB,GAEP,EAGG,UACI,UAACyC,GAAD,UACKK,MAGTJ,GAEP,EChCYa,GAAuB,SAAC,GAAqC,IAAnCvD,EAAkC,EAAlCA,WAAYwD,EAAsB,EAAtBA,gBAC3CC,GAAWC,EAAAA,EAAAA,MAOjB,OACE,WAACb,GAAD,YACE,UAAChH,GAAD,gCAEA,UAACkE,GAAD,CACEC,WAAYA,EACZC,WAAW,SACXE,SAAO,oBACFqD,GADE,IAELpE,OAAQ6B,KAAKC,IAAIsC,EAAgBpE,UAEnCc,cAhBgB,SAAAa,GACpB0C,GAASE,EAAAA,GAAAA,GAAqB5C,IAC9Bf,GACD,KAgBG,UAAClE,GAAD,CAAayG,QAASvC,EAAtB,UACE,kBACE4D,QAAQ,MACRvB,MAAM,6BACNV,MAAM,KACNC,OAAO,KACPO,QAAQ,YALV,WAOE,kBACEC,KAAK,OACLyB,eAAe,QACfC,cAAc,OACdC,iBAAiB,IACjBC,YAAY,SACZC,OAAO,OACP3B,EAAE,gCAEJ,kBACEF,KAAK,OACLyB,eAAe,QACfC,cAAc,OACdC,iBAAiB,IACjBC,YAAY,SACZC,OAAO,OACP3B,EAAE,uCAMb,ECpBc,SAAS4B,KACtB,OAAkD/J,EAAAA,EAAAA,UAAS,IAA3D,eAAOgK,EAAP,KAA0BC,EAA1B,KAEA,GAAsCjK,EAAAA,EAAAA,WAAS,GAA/C,eAAOkK,EAAP,KAAoBC,EAApB,KAMMC,EAAY,SAAAC,GAChBJ,EAAqBI,GACrBF,GAAe,EAChB,EAEKG,GAAe1K,EAAAA,EAAAA,IAAY2K,GAAAA,IAC3BC,GAAqB,OAAIF,GAAcG,UAEvCvE,GAAatG,EAAAA,EAAAA,IAAY8K,GAAAA,IAEzBC,EAAqB,SAAAnE,GACzB,IAAMoE,EAAW1E,EAAWtC,MAAK,SAAAiH,GAAI,OAAIrE,IAAOqE,EAAKrE,EAAhB,IAErC,cAAOoE,QAAP,IAAOA,OAAP,EAAOA,EAAUlH,IAClB,EACK4F,GAAWC,EAAAA,EAAAA,OAEjBpJ,EAAAA,EAAAA,YAAU,WACRmJ,GAASwB,EAAAA,GAAAA,MACV,GAAE,CAACxB,IAEJ,IAAMyB,EAAoB,SAAAV,GACxBf,GAAS0B,EAAAA,GAAAA,IAAuBX,GACjC,EAED,OACE,WAAChK,GAAD,YACE,UAAC,KAAD,WACE,WAACC,GAAD,YACE,UAACC,GAAD,WACE,4BACE,UAACC,GAAD,oBACA,UAACA,GAAD,oBACA,UAACA,GAAD,wBACA,UAACA,GAAD,uBACA,UAACC,GAAD,mBACA,UAACA,GAAD,4BAGJ,UAACC,GAAD,UACG8J,EAAmBjE,KAAI,SAAAsE,GAAI,OAC1B,WAACrJ,GAAD,YACE,UAACb,GAAD,UACGkE,KAAOgG,EAAKjG,iBAAiBE,OAAO,eAEvC,UAAClE,GAAD,UAAuB,WAAdiK,EAAK9F,KAAoB,IAAM,OACxC,UAACpE,GAAD,UAAWgK,EAAmBE,EAAK7F,eACnC,UAACrE,GAAD,UAAWkK,EAAK3F,WAChB,UAACrE,GAAD,CAAME,OAAsB,WAAd8J,EAAK9F,KAAnB,SACG8F,EAAK5F,OAAO7E,QAAQ,MAEvB,WAACY,GAAD,YACE,WAACO,GAAD,WAAasJ,EAAKI,aAAa7K,QAAQ,GAAvC,QACA,WAACiB,GAAD,YACE,UAACC,GAAD,CAAiB8G,QAAS,kBAAMgC,EAAUS,EAAKrE,GAArB,EAA1B,UACE,UAAC,MAAD,CAAgB0E,KAAM,GAAIC,MAAM,eAElC,UAAC7J,GAAD,CACEyD,KAAK,SACLqD,QAAS,kBAAM2C,EAAkBF,EAAKrE,GAA7B,EAFX,UAIE,UAAC,MAAD,CAAiB0E,KAAM,GAAIC,MAAM,sBApBhCN,EAAKrE,GADY,YA8BlC,UAAC4E,GAAA,EAAD,UACGZ,EAAmBjE,KAAI,SAAAsE,GAAI,OAC1B,WAAC5J,GAAD,CAAoBF,OAAsB,WAAd8J,EAAK9F,KAAjC,WACE,WAAC7D,GAAD,mBAEE,UAACC,GAAD,UACG0D,KAAOgG,EAAKjG,iBAAiBE,OAAO,kBAGzC,WAAC5D,GAAD,oBACO,UAACC,GAAD,UAAyB,WAAd0J,EAAK9F,KAAoB,IAAM,UAEjD,WAAC7D,GAAD,sBACW,KACT,UAACC,GAAD,UAAWwJ,EAAmBE,EAAK7F,kBAErC,WAAC9D,GAAD,uBACU,UAACC,GAAD,UAAW0J,EAAK3F,cAE1B,WAAChE,GAAD,iBACM,KACJ,UAACE,GAAD,CAASL,OAAsB,WAAd8J,EAAK9F,KAAtB,SACG8F,EAAK5F,OAAO7E,QAAQ,SAGzB,WAACc,GAAD,uBACU,UAACC,GAAD,UAAW0J,EAAKI,aAAa7K,QAAQ,SAE/C,WAACqB,GAAD,YACE,UAACH,GAAD,CAAiB8G,QAAS,kBAAMgC,EAAUS,EAAKrE,GAArB,EAA1B,UACE,UAAC,MAAD,CAAgB0E,KAAM,GAAIC,MAAM,eAElC,UAAC7J,GAAD,CACEyD,KAAK,SACLqD,QAAS,kBAAM2C,EAAkBF,EAAKrE,GAA7B,EAFX,UAIE,UAAC,MAAD,CAAiB0E,KAAM,GAAIC,MAAM,mBAlC5BN,EAAKrE,GADU,MA0C7B0D,IACC,UAACd,GAAD,CACEvD,WAvHW,WACjBsE,GAAe,EAChB,EAsHOd,gBAAiBiB,EAAa1G,MAC5B,SAAAiH,GAAI,OAAIA,EAAKrE,KAAOwD,CAAhB,QAMf,CCjKM,I,YAAMtI,GAAYpC,GAAAA,GAAAA,GAAH,0RAUXC,GAAAA,EAAAA,QAQEoC,GAAcrC,GAAAA,GAAAA,OAAH,yMAQbC,GAAAA,EAAAA,QCzBE8L,GAAsB,SAAC,GAAoB,IAAlBxF,EAAiB,EAAjBA,WAC9ByD,GAAWC,EAAAA,EAAAA,MAMjB,OAAO,WAACb,GAAD,YACL,UAAC,GAAD,+BAEA,UAAC9C,GAAD,CAAWC,WAAYA,EAAYC,WAAW,MAAMC,cAPhC,SAACa,GACpB0C,GAASgC,EAAAA,GAAAA,IAAoB1E,IAC7Bf,GACF,KAMC,UAAC,GAAD,CAAauC,QAASvC,EAAtB,UACE,kBACE4D,QAAQ,MACRvB,MAAM,6BACNV,MAAM,KACNC,OAAO,KACPO,QAAQ,YALV,WAOE,kBACEC,KAAK,OACLyB,eAAe,QACfC,cAAc,OACdC,iBAAiB,IACjBC,YAAY,SACZC,OAAO,OACP3B,EAAE,gCAEJ,kBACEF,KAAK,OACLyB,eAAe,QACfC,cAAc,OACdC,iBAAiB,IACjBC,YAAY,SACZC,OAAO,OACP3B,EAAE,uCAKX,E,WC/CYoD,GAASjM,GAAAA,EAAAA,OAAH,2TAYRC,GAAAA,EAAAA,SAKEiM,GAAUlM,GAAAA,EAAAA,KAAH,iGAMPiD,IAAYjD,EAAAA,GAAAA,GAAOkD,GAAAA,EAAPlD,CAAH,mFCrBTmM,GAAwB,WACnC,OAAsCzL,EAAAA,EAAAA,WAAS,GAA/C,eAAOkK,EAAP,KAAoBC,EAApB,KAEMuB,EAAc,WAClBvB,GAAe,SAAAD,GAAW,OAAKA,CAAL,GAC3B,EACD,OACE,mCACE,UAACqB,GAAD,CAAQxG,KAAK,SAASqD,QAASsD,EAA/B,UACE,UAACF,GAAD,WACE,UAAC,GAAD,CAAWnE,IAAKC,GAAAA,GAAOE,MAAO,GAAIC,OAAQ,GAAIC,MAAM,cAGvDwC,IAAe,UAACmB,GAAD,CAAqBxF,WAAY6F,MAItD,E,WCrBYC,GAASrM,GAAAA,GAAAA,IAAH,kDCgBnB,GAZgB,WACd,OACE,WAACqM,GAAD,YACE,UAACP,GAAA,EAAD,WACE,UAAC1L,GAAA,EAAD,OAEF,UAACqK,GAAD,KACA,UAAC0B,GAAD,MAGL,C,wGChBM,IAAMlB,EAAuB,SAACnG,GAAD,OAAaA,EAAMwH,QAAQtB,YAA3B,EACvBI,EAAqB,SAACtG,GAAD,OAAYA,EAAM8B,WAAWC,KAA7B,EACrBpG,EAAmC,SAACqE,GAAD,uBAAaA,EAAMwH,QAAQtB,aAAalG,EAAMwH,QAAQtB,aAAauB,OAAS,UAA5E,aAAa,EAAmEZ,YAAhF,C","sources":["components/Balance/Balance.styled.js","components/Balance/Balance.jsx","components/Table/Table.styled.js","components/EditTransactionModal/EditTransactionModal.styled.js","components/FormModal/FormModal.styled.js","components/SelectField/SelectField.styled.js","components/SelectField/SelectField.jsx","components/FormModal/FormModal.jsx","components/Modal/Modal.styled.js","components/Modal/Modal.jsx","components/EditTransactionModal/EditTransactionModal.jsx","components/Table/Table.jsx","components/ModalAddTransaction/ModalAddTransaction.styled.js","components/ModalAddTransaction/ModalAddTransaction.jsx","components/ButtonAddTransaction/ButtonAddTransaction.styled.js","components/ButtonAddTransaction/ButtonAddTransaction.jsx","components/HomeTab/HomeTab.styled.js","components/HomeTab/HomeTab.jsx","redux/selectors.js"],"sourcesContent":["import styled from 'styled-components';\nimport { device } from 'stylesheet/breakpoints';\n\nexport const Box = styled.div`\n  width: 280px;\n  padding: 8px 32px;\n  border-radius: 30px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 32px;\n\n  background-color: var(--white);\n\n  @media ${device.tablet} {\n    width: 336px;\n  }\n\n  @media ${device.tabDesk} {\n    padding-left: 40px;\n    padding-right: 40px;\n    margin: 0;\n  }\n\n  @media ${device.desktop} {\n    width: 395px;\n  }\n`;\n\nexport const Title = styled.h2`\n  font-family: 'Circe';\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 1.3;\n  text-transform: uppercase;\n\n  margin-bottom: 11px;\n\n  color: var(--gray-3);\n`;\n\nexport const Amount = styled.p`\n  font-family: 'Poppins-Regular';\n  font-weight: 400;\n  font-size: 30px;\n  line-height: 1.5;\n  align-items: center;\n\n  color: var(--black);\n`;\n","import { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { getUserBalance } from 'redux/auth/auth-selector';\nimport { getBalanceByTransactionsSelector } from 'redux/selectors';\nimport { Box, Title, Amount } from './Balance.styled';\n\nexport const Balance = () => {\n  const userBalance = useSelector(getUserBalance);\n  const afterTransactions = useSelector(getBalanceByTransactionsSelector);\n  const [balance, setBalance] = useState(userBalance);\n  useEffect(() => {\n    if (afterTransactions) {\n      setBalance(afterTransactions);\n    }\n  }, [afterTransactions]);\n\n  return (\n    <Box>\n      <Title>Your balance</Title>\n      <Amount>&#8372; {balance.toFixed(2)}</Amount>\n    </Box>\n  );\n};\n","import styled from 'styled-components';\nimport { device } from 'stylesheet/breakpoints';\n\nexport const Section = styled.section`\n  @media ${device.tablet} {\n    max-height: calc(100vh - 340px);\n    overflow-y: auto;\n  }\n  @media ${device.desktop} {\n    padding-top: 46px;\n    padding-left: 69px;\n    max-height: calc(100vh - 130px);\n    overflow-y: auto;\n  }\n`;\n\nexport const StyledTable = styled.table`\n  width: 688px; // 704\n  border-spacing: 0;\n\n  @media ${device.desktop} {\n    width: 715px;\n  }\n`;\n\nexport const THead = styled.thead`\n  font-family: 'Circe';\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 1.5;\n\n  background-color: var(--white);\n`;\n\nexport const StyledTh = styled.th`\n  padding-top: 16px;\n  padding-bottom: 16px;\n  padding-left: 20px;\n\n  text-align: left;\n\n  &:first-child {\n    border-top-left-radius: 30px;\n    border-bottom-left-radius: 30px;\n  }\n`;\n\nexport const ThRight = styled.th`\n  padding-top: 16px;\n  padding-bottom: 16px;\n  padding-right: 20px;\n\n  text-align: right;\n\n  &:last-child {\n    border-top-right-radius: 30px;\n    border-bottom-right-radius: 30px;\n  }\n`;\n\nexport const Tbody = styled.tbody`\n  font-family: 'Circe';\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 1.5;\n`;\n\nexport const StyledTd = styled.td`\n  padding-top: 16px;\n  padding-bottom: 16px;\n  padding-left: 20px;\n  border-bottom: 1px solid #dcdcdf;\n  box-shadow: 0px 1px 0px rgba(255, 255, 255, 0.6);\n`;\n\nexport const TypeTd = styled.td`\n  padding-top: 16px;\n  padding-bottom: 16px;\n  border-bottom: 1px solid #dcdcdf;\n  box-shadow: 0px 1px 0px rgba(255, 255, 255, 0.6);\n  text-align: center;\n`;\n\nexport const TSum = styled.td`\n  padding-top: 16px;\n  padding-right: 20px;\n  padding-bottom: 16px;\n  border-bottom: 1px solid #dcdcdf;\n  box-shadow: 0px 1px 0px rgba(255, 255, 255, 0.6);\n\n  text-align: right;\n\n  color: ${props =>\n    props.income ? 'var(--btn-bg-color)' : 'var(--error-color)'};\n`;\n\nexport const BalanceTd = styled.td`\n  padding-top: 16px;\n  padding-right: 20px;\n  padding-bottom: 16px;\n  border-bottom: 1px solid #dcdcdf;\n  box-shadow: 0px 1px 0px rgba(255, 255, 255, 0.6);\n\n  text-align: right;\n`;\n\nexport const List = styled.ul`\n  width: 280px;\n  background-color: var(--white);\n  border-radius: 10px;\n  border-left: 5px solid\n    ${props => (props.income ? 'var(--btn-bg-color)' : 'var(--error-color)')};\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 8px;\n\n  list-style: none;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  padding-top: 12px;\n  padding-left: 20px;\n  padding-bottom: 8px;\n  padding-right: 20px;\n\n  font-family: 'Circe';\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 1.5;\n\n  &:not(:last-child) {\n    border-bottom: 1px solid #dcdcdf;\n  }\n`;\n\nexport const ListText = styled.span`\n  font-family: 'Circe';\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 1.5;\n`;\n\nexport const ListSum = styled.span`\n  color: ${props =>\n    props.income ? 'var(--btn-bg-color)' : 'var(--error-color)'};\n`;\n\nexport const ActionContainer = styled.div`\n  opacity: 0;\n  position: absolute;\n  right: 0;\n  transition: all 250ms linear;\n`;\n\nexport const StyledDelButton = styled.button`\n  display: inline-flex;\n  align-items: center;\n  border: none;\n  background-color: transparent;\n\n  cursor: pointer;\n  transition: background-color 250ms linear;\n\n  @media ${device.mobile} {\n    &:not(:last-child) {\n      margin-right: 50px;\n    }\n  }\n\n  &:hover,\n  :focus {\n    background-color: var(--gray-5);\n  }\n\n  @media ${device.tabDesk} {\n    margin-right: 0;\n    padding: 14px 20px;\n    background-color: var(--bg-color);\n    transform: translateY(-70%);\n  }\n`;\n\nexport const StyledSpan = styled.span`\n  background-color: transparent;\n`;\n\nexport const TR = styled.tr`\n  position: relative;\n  transition: all 250ms linear;\n\n  @media ${device.tabDesk} {\n    &:hover,\n    &:focus,\n    &:active {\n      background-color: rgba(0, 0, 0, 0.15);\n      ${ActionContainer} {\n        opacity: 1;\n      }\n    }\n  }\n`;\n\nexport const ListItemBtn = styled.li`\n  display: flex;\n  justify-content: center;\n  padding-top: 12px;\n  padding-left: 20px;\n  padding-bottom: 8px;\n  padding-right: 20px;\n\n  font-family: 'Circe';\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 1.5;\n\n  &:not(:last-child) {\n    border-bottom: 1px solid #dcdcdf;\n  }\n`;\n","import styled from 'styled-components';\n\n// const colorActiveLable = 'green';\n\nexport const ModalHead = styled.h1`\n  margin-top: 20px;\n  margin-bottom: 40px;\n  font-family: 'Poppins Regular';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 30px;\n  line-height: 1.5;\n\n  color: var(--black);\n`;\n\n\nexport const ButtonClose = styled.button`\n  position: absolute;\n  top: 0;\n  right: 0;\n  cursor: pointer;\n  background-color: var(--white);\n  border: none;\n  margin: 20px;\n`;\n","import styled from 'styled-components';\nimport { Form, Field } from 'formik';\nimport DatePicker from 'react-datepicker';\nimport SVG from 'react-inlinesvg';\nimport { device } from 'stylesheet/breakpoints';\n\nexport const ErrorText = styled.p`\n  color: red;\n`;\n\nexport const ModalForm = styled(Form)`\n  display: block;\n  @media ${device.mobile} {\n    width: 280px;\n  }\n`;\n\nexport const Operation = styled.div`\n  display: flex;\n  justify-content: center;\n  text-align: center;\n  align-items: center;\n  font-family: 'CirceBold', sans-serif;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 1.5;\n`;\n\nexport const LabelIncome = styled.label`\n  margin-right: 20px;\n  position: relative;\n  cursor: pointer;\n  color: var(--gray-5);\n  transition: 500ms;\n  text-align: right;\n\n  &:hover,\n  :active {\n    color: var(--btn-bg-color);\n  }\n`;\n\nexport const LabelExpense = styled.label`\n  color: var(--gray-5);\n  margin-left: 20px;\n  text-align: right;\n  position: relative;\n  cursor: pointer;\n  text-align: left;\n\n  &:hover,\n  :active {\n    color: var(--error-color);\n  }\n`;\n\n// border: 1px solid #e0e0e0;\n//   width: 80px;\n//   height: 40px;\n//   border-radius: 30px;\n\nexport const ToggleRb = styled.div`\n  position: relative;\n  height: 40px;\n  width: 80px;\n  background-color: var(--white);\n  border: 1px solid var(--gray-5);\n  border-radius: 30px;\n  transition: all 500ms;\n`;\n\nexport const Plus = styled.div`\n  position: absolute;\n  width: 44px;\n  height: 44px;\n  background-color: var(--btn-bg-color);\n  box-shadow: 0px 6px 15px rgba(36, 204, 167, 0.5);\n  top: -3px;\n  left: 0;\n  border-radius: 50%;\n  transition: all 500ms;\n  z-index: 4;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const RadioFieldIncome = styled(Field)`\n  display: none;\n\n  &:checked ~ ${LabelIncome} {\n    color: var(--btn-bg-color);\n  }\n`;\n\nexport const RadioFieldExpense = styled(Field)`\n  display: none;\n\n  &:checked {\n    ~ ${LabelExpense} {\n      color: var(--error-color);\n    }\n    ~ ${ToggleRb} > ${Plus} {\n      left: 40px;\n      background-color: var(--error-color);\n      box-shadow: 0px 6px 15px rgba(255, 101, 150, 0.5);\n    }\n  }\n`;\n\nexport const CloseIcon = styled(SVG)`\n  left: 20%;\n  width: 20px;\n  height: 20px;\n  fill: var(--white);\n`;\n\n// Toggle Changes\n\n// export const Marker = styled.div`\n//   position: relative;\n//   background-color: #e0e0e0;\n//   width: 16px;\n//   height: 16px;\n//   border-radius: 50%;\n//   z-index: 2;\n//   pointer-events: none;\n//   transform: translateX(1px);\n//   transition: transform 250ms linear;\n// `;\n\n// export const RadioButton = styled.div`\n//   display: flex;\n//   justify-content: space-around;\n//   text-align: center;\n//   align-items: center;\n//   border-radius: 30px;\n//   width: 80px;\n//   height: 40px;\n//   border: 1px solid #e0e0e0;\n// `;\n\n// BUTTON\n\n\n\nexport const Btn = styled.div`\n  display: block;\n  /* font-family: 'Circe', sans-serif;\n  font-style: normal;\n  font-weight: 400;\n  font-size: 18px;\n  line-height: 1.5;\n  text-align: center;\n  letter-spacing: 0.3em;\n  text-transform: uppercase; */\n`;\n\nexport const ButtonAdd = styled.button`\n  width: 300px;\n  height: 50px;\n  background-color: var(--btn-bg-color);\n  color: var(--white);\n  border: none;\n  border-radius: 20px;\n  margin-bottom: 20px;\n  cursor: pointer;\n  transition: 1000ms;\n\n  &:hover {\n    background-color: var(--white);\n    color: var(--btn-bg-color);\n    transition: 1000ms;\n    border: 1px solid var(--btn-bg-color);\n  }\n  @media ${device.mobile} {\n    width: 280px;\n  }\n`;\n\nexport const ButtonCancel = styled.button`\n  width: 300px;\n  height: 50px;\n  background-color: var(--white);\n  border: 1px solid var(--active-bg-color);\n  border-radius: 20px;\n  color: var(--active-bg-color);\n  cursor: pointer;\n  transition: 1000ms;\n  &:hover {\n    background-color: var(--active-bg-color);\n    color: var(--white);\n    transition: 1000ms;\n  }\n  @media ${device.mobile} {\n    width: 280px;\n  }\n`;\n\nexport const DateContainer = styled.div`\n  position: relative;\n`;\n\nexport const IconDate = styled.label`\n  position: absolute;\n  top: 60%;\n  left: 80%;\n  cursor: pointer;\n  @media ${device.mobile} {\n    left: 95%;\n    top: 20%;\n  }\n`;\n\nexport const SvgDate = styled.svg`\n  transition: 500ms;\n  transform: scale(1);\n  :hover {\n    box-shadow: 0px 0px 23px -3px rgba(0, 0, 0, 0.75);\n    transition: 500ms;\n    transform: scale(1.1);\n  }\n`;\n\nexport const AmountDate = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  @media ${device.mobile} {\n    display: block;\n  }\n`;\n// Field\n\n\n\nexport const AmountField = styled(Field)`\n  position: relative;\n  padding: 8px;\n  margin-top: 40px;\n  text-align: center;\n  border: 1px solid var(--gray-5);\n  border-top: none;\n  border-left: none;\n  border-right: none;\n  outline: none;\n  &::placeholder {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    text-align: center;\n    padding-bottom: 8px;\n  }\n  @media ${device.mobile} {\n    width: 280px;\n    margin-bottom: 30px;\n  }\n`;\n\nexport const DateField = styled(DatePicker)`\n  outline: none;\n  padding: 8px;\n  margin-left: 35px;\n  margin-top: 40px;\n  border: 1px solid var(--gray-5);\n  border-top: none;\n  border-left: none;\n  border-right: none;\n  @media ${device.mobile} {\n    width: 280px;\n    margin-top: 0;\n  }\n`;\n\nexport const CommentField = styled(Field)`\n  outline: none;\n  padding: 8px;\n  margin-top: 40px;\n  margin-bottom: 40px;\n  border: 1px solid var(--gray-5);\n  border-top: none;\n  border-left: none;\n  border-right: none;\n  width: 400px;\n\n  font-weight: 400;\n  font-size: 18px;\n  line-height: 27px;\n  &::placeholder {\n    color: var(--gray-4);\n  }\n  @media ${device.mobile} {\n    width: 280px;\n    margin-top: 30px;\n    margin-bottom: 30px;\n  }\n`;","import Select from 'react-select';\nimport styled from 'styled-components';\nimport { device } from 'stylesheet/breakpoints';\n\nexport const SelectFieldBox = styled(Select)`\n  display: block;\n  outline: none;\n  margin-top: 40px;\n  margin-left: 50px;\n  margin-right: 50px;\n  @media ${device.mobile} {\n    width: 280px;\n    margin-left: 0;\n    margin-right: 0;\n  }\n`;","\nimport React from 'react';\nimport { SelectFieldBox } from './SelectField.styled';\n\nexport const SelectField = ({\n    options,\n    field,\n    form,\n}) => (\n    <SelectFieldBox\n        name={field.name}\n        value={options ? options.find(option => option.value === field.value) : ''}\n        onChange={(option) => form.setFieldValue(field.name, option.value)}\n        options={options}\n        placeholder='Select a category'\n        styles={{\n            control: (baseStyles, state) => ({\n                ...baseStyles,\n                outline: 'none',\n                border: '1px solid var(--gray-5)',\n                borderTop: 'none',\n                borderLeft: 'none',\n                borderRight: 'none',\n            }),\n        }}\n    />\n)","import { useCallback } from 'react';\nimport {\n  AmountDate,\n  AmountField,\n  Btn,\n  ButtonAdd,\n  ButtonCancel,\n  CommentField,\n  DateContainer,\n  DateField,\n  IconDate,\n  LabelExpense,\n  LabelIncome,\n  ModalForm,\n  Operation,\n  RadioFieldExpense,\n  RadioFieldIncome,\n  ToggleRb,\n  CloseIcon,\n  Plus,\n  SvgDate,\n  ErrorText\n} from './FormModal.styled';\n\nimport { close, minus } from 'assets/media/icons';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { Formik, ErrorMessage, Field } from 'formik';\nimport * as yup from 'yup';\nimport { useSelector } from 'react-redux';\n\nimport moment from 'moment';\nimport { SelectField } from 'components/SelectField/SelectField';\n\n\nconst TypeOperation = {\n  EXPENSE: 'EXPENSE',\n  INCOME: 'INCOME'\n}\n\nconst initialValues = {\n  transactionDate: moment().format('YYYY-MM-DD'),\n  type: TypeOperation.EXPENSE,\n  categoryId: '',\n  amount: '',\n  comment: '',\n};\n\nconst schema = yup.object().shape({\n  type: yup.string().required(),\n  amount: yup.number().required('Enter amount'),\n  transactionDate: yup\n    .date()\n    .required()\n    .default(() => new Date()),\n  categoryId: yup.string().required('Select category'),\n  comment: yup.string(),\n});\n\n\n\nconst FromError = ({ name }) => {\n  return (\n    <ErrorMessage\n      name={name}\n      render={message => <ErrorText>{message}</ErrorText>}\n    />\n  );\n};\n\nexport const FormModal = ({ closeModal, submitText, submitHandler, initial = initialValues }) => {\n  const categoriesName = useSelector(state => state.categories.items);\n  const optionFunc = useCallback((filter) => categoriesName\n    ?.filter(({ type }) => type === filter)\n    .map(({ name, id }) => ({ value: id, label: name, })),\n    [categoriesName]);\n\n\n  const handleSubmit = (values, { resetForm, ...props }) => {\n    values.amount = values.type === TypeOperation.EXPENSE ? -Math.abs(values.amount) : Math.abs(values.amount);\n    submitHandler(values);\n  };\n  return (\n    <Formik\n      initialValues={initial}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      {props => {\n        const handleChange = ({ target }) => {\n          props.setFieldValue(target.name, target.value);\n          if (target.value === TypeOperation.INCOME) {\n            props.setFieldValue('categoryId', optionFunc(target.value).map(x => x.value).find(x => x))\n          }\n          else {\n            props.setFieldValue('categoryId', initial.categoryId)\n          }\n        };\n\n        const setStartDate = (value) => {\n          const date = moment(value).format('YYYY-MM-DD');\n          props.setFieldValue('transactionDate', date)\n        }\n        return (\n          <ModalForm>\n            <Operation>\n              <RadioFieldIncome\n                id=\"income\"\n                type=\"radio\"\n                checked={props.values.type === TypeOperation.INCOME}\n                onChange={handleChange}\n                name=\"type\"\n                value={TypeOperation.INCOME}\n              />\n              <RadioFieldExpense\n                id=\"expense\"\n                type=\"radio\"\n                checked={props.values.type === TypeOperation.EXPENSE}\n                onChange={handleChange}\n                name=\"type\"\n                value={TypeOperation.EXPENSE}\n              />\n              <LabelIncome htmlFor=\"income\">Income </LabelIncome>\n              <ToggleRb>\n                <Plus>\n                  <CloseIcon\n                    src={props.values.type === TypeOperation.INCOME ? close : minus}\n                    width={20}\n                    height={20}\n                    title=\"Change\"\n                  />\n                </Plus>\n              </ToggleRb>\n              <LabelExpense htmlFor=\"expense\">Expense</LabelExpense>\n            </Operation>\n\n            {props.values.type === TypeOperation.EXPENSE && \n            <div>\n              <Field id=\"categoryId\" name=\"categoryId\" component={SelectField} options={optionFunc(props.values.type)} />\n              <FromError name=\"categoryId\" />\n            </div>\n            }\n\n\n\n            <AmountDate>\n              <label htmlFor=\"amount\"></label>\n              <AmountField id=\"amount\" type=\"number\" name=\"amount\" placeholder=\"0.00\" />\n              <FromError name=\"amount\" />\n              <DateContainer>\n                <DateField\n                  id=\"transactionDate\"\n                  type=\"date\"\n                  name=\"transactionDate\"\n                  selected={moment(props.values.transactionDate).toDate()}\n                  onChange={setStartDate}\n                  dateFormat=\"dd.MM.yyyy\"\n                />\n                <FromError name=\"transactionDate\" />\n                <IconDate htmlFor=\"transactionDate\">\n                  <SvgDate\n                    width=\"18\"\n                    height=\"20\"\n                    viewBox=\"0 0 18 20\"\n                    fill=\"none\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                  >\n                    <path\n                      d=\"M6 9H4V11H6V9ZM10 9H8V11H10V9ZM14 9H12V11H14V9ZM16 2H15V0H13V2H5V0H3V2H2C0.89 2 0.00999999 2.9 0.00999999 4L0 18C0 19.1 0.89 20 2 20H16C17.1 20 18 19.1 18 18V4C18 2.9 17.1 2 16 2ZM16 18H2V7H16V18Z\"\n                      fill=\"#4A56E2\"\n                    />\n                  </SvgDate>\n                </IconDate>\n              </DateContainer>\n            </AmountDate>\n            <label htmlFor=\"comment\"></label>\n            <div>\n              <CommentField type=\"text\" name=\"comment\" placeholder=\"Comment\" />\n            </div>\n            <Btn>\n              <ButtonAdd type=\"submit\">{submitText}</ButtonAdd>\n              <ButtonCancel type=\"button\" onClick={closeModal}>\n                CANCEL\n              </ButtonCancel>\n            </Btn>\n          </ModalForm>\n        );\n      }}\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\nimport { device } from 'stylesheet/breakpoints';\n\nexport const ModalBox = styled.div`\n  height: 100vh;\n  width: 100vw;\n  background-color: rgba(0, 0, 0, 0.5);\n  position: fixed;\n  top: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  text-align: center;\n  justify-content: center;\n  animation: blowUpModal 0.5s cubic-bezier(0.165, 0.84, 0.44, 1) forwards;\n`;\n\nexport const ModalContent = styled.div`\n  position: relative;\n  padding: 20px;\n  width: 540px;\n  height: 600px;\n  border-radius: 20px;\n  background-color: var(--white);\n  @media ${device.mobile} {\n    width: 320px;\n  }\n`;","import { createPortal } from 'react-dom';\nimport { useEffect } from 'react';\nimport {\n    ModalBox,\n    ModalContent,\n} from './Modal.styled';\nconst modalRoot = document.querySelector('#modal-root');\nexport const Modal = ({ closeModal, children }) => {\n\n    // закрытие модалки по ескейпу\n    useEffect(() => {\n        const handleKeyDown = e => {\n            if (e.code === 'Escape') {\n                closeModal();\n            }\n        };\n        window.addEventListener('keydown', handleKeyDown);\n\n        return () => {\n            window.removeEventListener('keydown', handleKeyDown);\n        };\n    }, [closeModal]);\n\n    // закрытие модалки по бекдропу\n    const handleBackdropClose = e => {\n        if (e.currentTarget === e.target) {\n            closeModal();\n        }\n    };\n\n    return createPortal(\n        <ModalBox onClick={handleBackdropClose}>\n            <ModalContent>\n                {children}\n            </ModalContent>\n        </ModalBox>,\n        modalRoot\n    );\n};","import { useDispatch } from 'react-redux';\nimport { ButtonClose, ModalHead } from './EditTransactionModal.styled';\nimport { editTransactionThunk } from 'redux/finance/finance-operations';\nimport { FormModal } from 'components/FormModal/FormModal';\nimport { Modal } from 'components/Modal/Modal';\n\nexport const EditTransactionModal = ({ closeModal, transactionData }) => {\n  const dispatch = useDispatch();\n\n  const handlerSubmit = values => {\n    dispatch(editTransactionThunk(values));\n    closeModal();\n  };\n\n  return (\n    <Modal>\n      <ModalHead>Edit transaction</ModalHead>\n\n      <FormModal\n        closeModal={closeModal}\n        submitText=\"UPDATE\"\n        initial={{\n          ...transactionData,\n          amount: Math.abs(transactionData.amount),\n        }}\n        submitHandler={handlerSubmit}\n      />\n\n      <ButtonClose onClick={closeModal}>\n        <svg\n          version=\"1.1\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"16\"\n          height=\"16\"\n          viewBox=\"0 0 32 32\"\n        >\n          <path\n            fill=\"none\"\n            strokeLinejoin=\"miter\"\n            strokeLinecap=\"butt\"\n            strokeMiterlimit=\"4\"\n            strokeWidth=\"1.7778\"\n            stroke=\"#000\"\n            d=\"M1.778 1.778l28.444 28.444\"\n          ></path>\n          <path\n            fill=\"none\"\n            strokeLinejoin=\"miter\"\n            strokeLinecap=\"butt\"\n            strokeMiterlimit=\"4\"\n            strokeWidth=\"1.7778\"\n            stroke=\"#000\"\n            d=\"M1.778 30.222l28.444-28.444\"\n          ></path>\n        </svg>\n      </ButtonClose>\n    </Modal>\n  );\n};\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { BsFillTrashFill, BsPencilSquare } from 'react-icons/bs';\nimport { Mobile } from 'components/Container/Mobile';\nimport { IsDesktopOrTablet } from 'components/Container/Tablet';\nimport {\n  StyledDelButton,\n  StyledSpan,\n  Section,\n  StyledTable,\n  StyledTd,\n  StyledTh,\n  ThRight,\n  THead,\n  Tbody,\n  TypeTd,\n  TSum,\n  BalanceTd,\n  List,\n  ListItem,\n  ListText,\n  ListSum,\n  ActionContainer,\n  TR,\n  ListItemBtn,\n} from './Table.styled';\n\nimport moment from 'moment';\nimport {\n  deleteTransactionThunk,\n  getAllTransactionsThunk,\n} from 'redux/finance/finance-operations';\nimport { useEffect } from 'react';\nimport { categoriesSelector, transactionsSelector } from 'redux/selectors';\n// import { sortByDate } from 'helpers/sorters';\n\nimport { EditTransactionModal } from 'components/EditTransactionModal/EditTransactionModal';\n\nexport default function Table() {\n  const [editTransactionId, setEditTransactionId] = useState('');\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  const openModal = itemId => {\n    setEditTransactionId(itemId);\n    setIsModalOpen(true);\n  };\n\n  const transactions = useSelector(transactionsSelector);\n  const sortedTransactions = [...transactions].reverse(); //.sort(sortByDate);\n\n  const categories = useSelector(categoriesSelector);\n\n  const searchCategoryName = id => {\n    const category = categories.find(item => id === item.id);\n    // console.log('category', category);\n    return category?.name;\n  };\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getAllTransactionsThunk());\n  }, [dispatch]);\n\n  const deleteTransaction = itemId => {\n    dispatch(deleteTransactionThunk(itemId));\n  };\n\n  return (\n    <Section>\n      <IsDesktopOrTablet>\n        <StyledTable>\n          <THead>\n            <tr>\n              <StyledTh>Date</StyledTh>\n              <StyledTh>Type</StyledTh>\n              <StyledTh>Category</StyledTh>\n              <StyledTh>Comment</StyledTh>\n              <ThRight>Sum</ThRight>\n              <ThRight>Balance</ThRight>\n            </tr>\n          </THead>\n          <Tbody>\n            {sortedTransactions.map(item => (\n              <TR key={item.id}>\n                <StyledTd>\n                  {moment(item.transactionDate).format('DD.MM.YY')}\n                </StyledTd>\n                <TypeTd>{item.type === 'INCOME' ? '+' : '-'}</TypeTd>\n                <StyledTd>{searchCategoryName(item.categoryId)}</StyledTd>\n                <StyledTd>{item.comment}</StyledTd>\n                <TSum income={item.type === 'INCOME'}>\n                  {item.amount.toFixed(2)}\n                </TSum>\n                <BalanceTd>\n                  <StyledSpan>{item.balanceAfter.toFixed(2)} </StyledSpan>\n                  <ActionContainer>\n                    <StyledDelButton onClick={() => openModal(item.id)}>\n                      <BsPencilSquare size={30} color=\"#a6a6a6\" />\n                    </StyledDelButton>\n                    <StyledDelButton\n                      type=\"button\"\n                      onClick={() => deleteTransaction(item.id)}\n                    >\n                      <BsFillTrashFill size={30} color=\"#a6a6a6\" />\n                    </StyledDelButton>\n                  </ActionContainer>\n                </BalanceTd>\n              </TR>\n            ))}\n          </Tbody>\n        </StyledTable>\n      </IsDesktopOrTablet>\n      <Mobile>\n        {sortedTransactions.map(item => (\n          <List key={item.id} income={item.type === 'INCOME'}>\n            <ListItem>\n              Date\n              <ListText>\n                {moment(item.transactionDate).format('DD.MM.YY')}\n              </ListText>\n            </ListItem>\n            <ListItem>\n              Type <ListText>{item.type === 'INCOME' ? '+' : '-'}</ListText>\n            </ListItem>\n            <ListItem>\n              Category{' '}\n              <ListText>{searchCategoryName(item.categoryId)}</ListText>\n            </ListItem>\n            <ListItem>\n              Comment <ListText>{item.comment}</ListText>\n            </ListItem>\n            <ListItem>\n              Sum{' '}\n              <ListSum income={item.type === 'INCOME'}>\n                {item.amount.toFixed(2)}\n              </ListSum>\n            </ListItem>\n            <ListItem>\n              Balance <ListText>{item.balanceAfter.toFixed(2)}</ListText>\n            </ListItem>\n            <ListItemBtn>\n              <StyledDelButton onClick={() => openModal(item.id)}>\n                <BsPencilSquare size={30} color=\"#a6a6a6\" />\n              </StyledDelButton>\n              <StyledDelButton\n                type=\"button\"\n                onClick={() => deleteTransaction(item.id)}\n              >\n                <BsFillTrashFill size={30} color=\"#a6a6a6\" />\n              </StyledDelButton>\n            </ListItemBtn>\n          </List>\n        ))}\n      </Mobile>\n\n      {isModalOpen && (\n        <EditTransactionModal\n          closeModal={closeModal}\n          transactionData={transactions.find(\n            item => item.id === editTransactionId\n          )}\n        />\n      )}\n    </Section>\n  );\n}\n","import styled from 'styled-components';\nimport { device } from 'stylesheet/breakpoints';\n\n// const colorActiveLable = 'green';\n\n\n\n\n\nexport const ModalHead = styled.h1`\n  margin-top: 20px;\n  margin-bottom: 40px;\n  font-family: 'Poppins Regular';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 30px;\n  line-height: 1.5;\n\n  color: var(--black);\n  @media ${device.mobile} {\n    margin-top: 0;\n    margin-bottom: 20px;\n  }\n`;\n\n// FORM RADIOBUTTON\n\nexport const ButtonClose = styled.button`\n  position: absolute;\n  top: 0;\n  right: 0;\n  cursor: pointer;\n  background-color: var(--white);\n  border: none;\n  margin: 20px;\n  @media ${device.mobile} {\n    display: none;\n  }\n`;\n","import {\n  ButtonClose,\n  ModalHead,\n} from './ModalAddTransaction.styled';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { useDispatch } from 'react-redux';\nimport { FormModal } from 'components/FormModal/FormModal';\nimport { Modal } from 'components/Modal/Modal';\nimport { addTransactionThunk } from 'redux/finance/finance-operations';\n\nexport const ModalAddTransaction = ({ closeModal }) => {\n  const dispatch = useDispatch();\n\n  const handlerSubmit = (values) => {\n     dispatch(addTransactionThunk(values));\n     closeModal();\n  }\n  return <Modal>\n    <ModalHead>Add transaction</ModalHead>\n\n    <FormModal closeModal={closeModal} submitText=\"ADD\" submitHandler={handlerSubmit} />\n\n    <ButtonClose onClick={closeModal}>\n      <svg\n        version=\"1.1\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"16\"\n        height=\"16\"\n        viewBox=\"0 0 32 32\"\n      >\n        <path\n          fill=\"none\"\n          strokeLinejoin=\"miter\"\n          strokeLinecap=\"butt\"\n          strokeMiterlimit=\"4\"\n          strokeWidth=\"1.7778\"\n          stroke=\"#000\"\n          d=\"M1.778 1.778l28.444 28.444\"\n        ></path>\n        <path\n          fill=\"none\"\n          strokeLinejoin=\"miter\"\n          strokeLinecap=\"butt\"\n          strokeMiterlimit=\"4\"\n          strokeWidth=\"1.7778\"\n          stroke=\"#000\"\n          d=\"M1.778 30.222l28.444-28.444\"\n        ></path>\n      </svg>\n    </ButtonClose>\n  </Modal>;\n};\n","import styled from '@emotion/styled';\nimport SVG from 'react-inlinesvg';\nimport { device } from 'stylesheet/breakpoints';\n\nexport const Button = styled.button`\n  position: fixed;\n  right: 20px;\n  bottom: 20px;\n  border-radius: 50%;\n  width: 44px;\n  height: 44px;\n  background-color: #24cca7;\n  box-shadow: 0px 6px 15px rgba(36, 204, 167, 0.5);\n  border: none;\n  cursor: pointer;\n\n  @media ${device.tabDesk} {\n    right: 40px;\n    bottom: 40px;\n  }\n`;\nexport const SpanBtn = styled.span`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const CloseIcon = styled(SVG)`\n  width: 20px;\n  height: 20px;\n  fill: var(--white);\n`;\n","import { ModalAddTransaction } from 'components/ModalAddTransaction/ModalAddTransaction';\nimport { useState } from 'react';\n\nimport { Button, CloseIcon, SpanBtn } from './ButtonAddTransaction.styled';\nimport { close } from 'assets/media/icons';\n\nexport const ButtonAddTransactions = () => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const toggleModal = () => {\n    setIsModalOpen(isModalOpen => !isModalOpen);\n  };\n  return (\n    <>\n      <Button type=\"button\" onClick={toggleModal}>\n        <SpanBtn>\n          <CloseIcon src={close} width={20} height={20} title=\"Close\" />\n        </SpanBtn>\n      </Button>\n      {isModalOpen && <ModalAddTransaction closeModal={toggleModal}\n       />}\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const BoxTab = styled.div`\n  position: relative;\n`;\n","import Table from 'components/Table/Table';\nimport { ButtonAddTransactions } from 'components/ButtonAddTransaction/ButtonAddTransaction';\nimport { Balance } from 'components/Balance/Balance';\nimport { Mobile } from 'components/Container/Mobile';\nimport { BoxTab } from './HomeTab.styled';\n\nconst HomeTab = () => {\n  return (\n    <BoxTab>\n      <Mobile>\n        <Balance />\n      </Mobile>\n      <Table />\n      <ButtonAddTransactions />\n    </BoxTab>\n  );\n};\n\nexport default HomeTab;\n","export const transactionsSelector = (state)  =>  state.finance.transactions;  \nexport const categoriesSelector = (state)  => state.categories.items;\nexport const getBalanceByTransactionsSelector = (state)  =>  state.finance.transactions[state.finance.transactions.length - 1]?.balanceAfter;\n"],"names":["Box","styled","device","Title","Amount","Balance","userBalance","useSelector","getUserBalance","afterTransactions","getBalanceByTransactionsSelector","useState","balance","setBalance","useEffect","toFixed","Section","StyledTable","THead","StyledTh","ThRight","Tbody","StyledTd","TypeTd","TSum","props","income","BalanceTd","List","ListItem","ListText","ListSum","ActionContainer","StyledDelButton","StyledSpan","TR","ListItemBtn","ModalHead","ButtonClose","ErrorText","ModalForm","Form","Operation","LabelIncome","LabelExpense","ToggleRb","Plus","RadioFieldIncome","Field","RadioFieldExpense","CloseIcon","SVG","Btn","ButtonAdd","ButtonCancel","DateContainer","IconDate","SvgDate","AmountDate","AmountField","DateField","DatePicker","CommentField","SelectFieldBox","Select","SelectField","options","field","form","name","value","find","option","onChange","setFieldValue","placeholder","styles","control","baseStyles","state","outline","border","borderTop","borderLeft","borderRight","TypeOperation","initialValues","transactionDate","moment","format","type","categoryId","amount","comment","schema","yup","shape","required","default","Date","FromError","render","message","FormModal","closeModal","submitText","submitHandler","initial","categoriesName","categories","items","optionFunc","useCallback","filter","map","id","label","validationSchema","onSubmit","values","resetForm","Math","abs","handleChange","target","x","checked","htmlFor","src","close","minus","width","height","title","component","selected","toDate","date","dateFormat","viewBox","fill","xmlns","d","onClick","ModalBox","ModalContent","modalRoot","document","querySelector","Modal","children","handleKeyDown","e","code","window","addEventListener","removeEventListener","createPortal","currentTarget","EditTransactionModal","transactionData","dispatch","useDispatch","editTransactionThunk","version","strokeLinejoin","strokeLinecap","strokeMiterlimit","strokeWidth","stroke","Table","editTransactionId","setEditTransactionId","isModalOpen","setIsModalOpen","openModal","itemId","transactions","transactionsSelector","sortedTransactions","reverse","categoriesSelector","searchCategoryName","category","item","getAllTransactionsThunk","deleteTransaction","deleteTransactionThunk","balanceAfter","size","color","Mobile","ModalAddTransaction","addTransactionThunk","Button","SpanBtn","ButtonAddTransactions","toggleModal","BoxTab","finance","length"],"sourceRoot":""}