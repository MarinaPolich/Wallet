{"version":3,"file":"static/js/799.f58619e2.chunk.js","mappings":"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","sources":["components/Balance/Balance.styled.js","components/Balance/Balance.jsx","components/Table/Table.styled.js","components/EditTransactionModal/EditTransactionModal.styled.js","components/EditTransactionModal/EditTransactionModal.jsx","components/Table/Table.jsx","components/HomeTab/HomeTab.jsx","redux/selectors.js"],"sourcesContent":["import styled from 'styled-components';\nimport { device } from 'stylesheet/breakpoints';\n\nexport const Box = styled.div`\n  width: 280px;\n  padding: 8px 32px;\n  border-radius: 30px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 32px;\n\n  background-color: var(--white);\n\n  @media ${device.tablet} {\n    width: 336px;\n  }\n\n  @media ${device.tabDesk} {\n    padding-left: 40px;\n    padding-right: 40px;\n    margin: 0;\n  }\n\n  @media ${device.desktop} {\n    width: 395px;\n  }\n`;\n\nexport const Title = styled.h2`\n  font-family: 'Circe';\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 1.3;\n  text-transform: uppercase;\n\n  margin-bottom: 11px;\n\n  color: var(--gray-3);\n`;\n\nexport const Amount = styled.p`\n  font-family: 'Poppins-Regular';\n  font-weight: 400;\n  font-size: 30px;\n  line-height: 1.5;\n  align-items: center;\n\n  color: var(--black);\n`;\n","import { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { getUser } from 'redux/auth/auth-selector';\nimport { transactionsSelector } from 'redux/selectors';\nimport { Box, Title, Amount } from './Balance.styled';\n\nexport const Balance = () => {\n  const user = useSelector(getUser);\n  const transactions = useSelector(transactionsSelector);\n  const [balance, setBalance] = useState(user.balance);\n  const afterTransactions = transactions[transactions.length - 1]?.balanceAfter;\n\n  useEffect(() => {\n    if (afterTransactions) {\n      setBalance(afterTransactions);\n    }\n  }, [afterTransactions]);\n\n  return (\n    <Box>\n      <Title>Your balance</Title>\n      <Amount>&#8372; {balance.toFixed(2)}</Amount>\n    </Box>\n  );\n};\n","import styled from 'styled-components';\nimport { device } from 'stylesheet/breakpoints';\n\nexport const Section = styled.section`\n  @media ${device.tablet} {\n    max-height: calc(100vh - 340px);\n    overflow-y: auto;\n  }\n  @media ${device.desktop} {\n    padding-top: 46px;\n    padding-left: 69px;\n    max-height: calc(100vh - 130px);\n    overflow-y: auto;\n  }\n`;\n\nexport const StyledTable = styled.table`\n  width: 688px; // 704\n  border-spacing: 0;\n\n  @media ${device.desktop} {\n    width: 715px;\n  }\n`;\n\nexport const THead = styled.thead`\n  font-family: 'Circe';\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 1.5;\n\n  background-color: var(--white);\n`;\n\nexport const StyledTh = styled.th`\n  padding-top: 16px;\n  padding-bottom: 16px;\n  padding-left: 20px;\n\n  text-align: left;\n\n  &:first-child {\n    border-top-left-radius: 30px;\n    border-bottom-left-radius: 30px;\n  }\n`;\n\nexport const ThRight = styled.th`\n  padding-top: 16px;\n  padding-bottom: 16px;\n  padding-right: 20px;\n\n  text-align: right;\n\n  &:last-child {\n    border-top-right-radius: 30px;\n    border-bottom-right-radius: 30px;\n  }\n`;\n\nexport const Tbody = styled.tbody`\n  font-family: 'Circe';\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 1.5;\n`;\n\nexport const StyledTd = styled.td`\n  padding-top: 16px;\n  padding-bottom: 16px;\n  padding-left: 20px;\n  border-bottom: 1px solid #dcdcdf;\n  box-shadow: 0px 1px 0px rgba(255, 255, 255, 0.6);\n\n  /* text-align: right; */\n`;\n\nexport const TypeTd = styled.td`\n  padding-top: 16px;\n  padding-bottom: 16px;\n  border-bottom: 1px solid #dcdcdf;\n  box-shadow: 0px 1px 0px rgba(255, 255, 255, 0.6);\n\n  text-align: center;\n`;\n\nexport const TSum = styled.td`\n  padding-top: 16px;\n  padding-right: 20px;\n  padding-bottom: 16px;\n  border-bottom: 1px solid #dcdcdf;\n  box-shadow: 0px 1px 0px rgba(255, 255, 255, 0.6);\n\n  text-align: right;\n\n  color: ${props =>\n    props.income ? 'var(--btn-bg-color)' : 'var(--error-color)'};\n`;\n\nexport const BalanceTd = styled.td`\n  padding-top: 16px;\n  padding-right: 20px;\n  padding-bottom: 16px;\n  border-bottom: 1px solid #dcdcdf;\n  box-shadow: 0px 1px 0px rgba(255, 255, 255, 0.6);\n\n  text-align: right;\n`;\n\nexport const StyledDelButton = styled.button`\n  border: none;\n  display: inline-flex;\n  align-items: center;\n`;\n\nexport const StyledSpan = styled.span`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n`;\n\nexport const List = styled.ul`\n  width: 280px;\n  background-color: var(--white);\n  border-radius: 10px;\n  border-left: 5px solid\n    ${props => (props.income ? 'var(--btn-bg-color)' : 'var(--error-color)')};\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 8px;\n\n  list-style: none;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  padding-top: 12px;\n  padding-left: 20px;\n  padding-bottom: 8px;\n  padding-right: 20px;\n\n  font-family: 'Circe';\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 1.5;\n\n  &:not(:last-child) {\n    border-bottom: 1px solid #dcdcdf;\n    /* transform: matrix(0, 1, 1, 0, 0, 0); */\n  }\n`;\n\nexport const ListText = styled.span`\n  font-family: 'Circe';\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 1.5;\n`;\n\nexport const ListSum = styled.span`\n  color: ${props =>\n    props.income ? 'var(--btn-bg-color)' : 'var(--error-color)'};\n`;\n","import styled from 'styled-components';\nimport { Form, Field } from 'formik';\nimport DatePicker from 'react-datepicker';\nimport SVG from 'react-inlinesvg';\n\n// const colorActiveLable = 'green';\n\nexport const Modal = styled.div`\n  height: 100vh;\n  width: 100vw;\n  background-color: rgba(0, 0, 0, 0.5);\n  position: fixed;\n  top: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  text-align: center;\n  justify-content: center;\n  animation: blowUpModal 0.5s cubic-bezier(0.165, 0.84, 0.44, 1) forwards;\n  /* transform: scale(0); */\n\n  /* &.active {\n    transform: scale(1);\n  } */\n`;\n\nexport const ModalContent = styled.div`\n  position: relative;\n  padding: 20px;\n  width: 540px;\n  height: 603px;\n  border-radius: 20px;\n  background-color: var(--white);\n`;\n\nexport const ModalHead = styled.h1`\n  margin-top: 20px;\n  margin-bottom: 40px;\n  font-family: 'Poppins Regular';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 30px;\n  line-height: 1.5;\n\n  color: var(--black);\n`;\n\n// FORM RADIOBUTTON\n\nexport const ModalForm = styled(Form)`\n  display: block;\n`;\n\nexport const Operation = styled.div`\n  display: flex;\n  justify-content: center;\n  text-align: center;\n  align-items: center;\n  font-family: 'CirceBold', sans-serif;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 1.5;\n`;\n\nexport const LabelIncome = styled.label`\n  margin-right: 20px;\n  position: relative;\n  cursor: pointer;\n  color: var(--gray-5);\n  transition: 500ms;\n  text-align: right;\n\n  &:hover,\n  :active {\n    color: var(--btn-bg-color);\n  }\n`;\n\nexport const LabelExpense = styled.label`\n  color: var(--gray-5);\n  margin-left: 20px;\n  text-align: right;\n  position: relative;\n  cursor: pointer;\n  text-align: left;\n\n  &:hover,\n  :active {\n    color: var(--error-color);\n  }\n`;\n\n// border: 1px solid #e0e0e0;\n//   width: 80px;\n//   height: 40px;\n//   border-radius: 30px;\n\nexport const ToggleRb = styled.div`\n  position: relative;\n  height: 40px;\n  width: 80px;\n  background-color: var(--white);\n  border: 1px solid var(--gray-5);\n  border-radius: 30px;\n  transition: all 500ms;\n`;\n\nexport const Plus = styled.div`\n  position: absolute;\n  width: 44px;\n  height: 44px;\n  background-color: var(--btn-bg-color);\n  box-shadow: 0px 6px 15px rgba(36, 204, 167, 0.5);\n  top: -3px;\n  left: 0;\n  border-radius: 50%;\n  transition: all 500ms;\n  z-index: 4;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const RadioFieldIncome = styled(Field)`\n  display: none;\n\n  &:checked ~ ${LabelIncome} {\n    color: var(--btn-bg-color);\n  }\n`;\n\nexport const RadioFieldExpense = styled(Field)`\n  display: none;\n\n  &:checked {\n    ~ ${LabelExpense} {\n      color: var(--error-color);\n    }\n    ~ ${ToggleRb} > ${Plus} {\n      left: 40px;\n      background-color: var(--error-color);\n      box-shadow: 0px 6px 15px rgba(255, 101, 150, 0.5);\n    }\n  }\n`;\n\nexport const CloseIcon = styled(SVG)`\n  left: 20%;\n  width: 20px;\n  height: 20px;\n  fill: var(--white);\n`;\n\n// Toggle Changes\n\n// export const Marker = styled.div`\n//   position: relative;\n//   background-color: #e0e0e0;\n//   width: 16px;\n//   height: 16px;\n//   border-radius: 50%;\n//   z-index: 2;\n//   pointer-events: none;\n//   transform: translateX(1px);\n//   transition: transform 250ms linear;\n// `;\n\n// export const RadioButton = styled.div`\n//   display: flex;\n//   justify-content: space-around;\n//   text-align: center;\n//   align-items: center;\n//   border-radius: 30px;\n//   width: 80px;\n//   height: 40px;\n//   border: 1px solid #e0e0e0;\n// `;\n\n// BUTTON\n\nexport const ButtonClose = styled.button`\n  position: absolute;\n  top: 0;\n  right: 0;\n  cursor: pointer;\n  background-color: var(--white);\n  border: none;\n  margin: 20px;\n`;\n\nexport const Btn = styled.div`\n  display: block;\n  /* font-family: 'Circe', sans-serif;\n  font-style: normal;\n  font-weight: 400;\n  font-size: 18px;\n  line-height: 1.5;\n  text-align: center;\n  letter-spacing: 0.3em;\n  text-transform: uppercase; */\n`;\n\nexport const ButtonAdd = styled.button`\n  width: 300px;\n  height: 50px;\n  background-color: var(--btn-bg-color);\n  color: var(--white);\n  border: none;\n  border-radius: 20px;\n  margin-bottom: 20px;\n  cursor: pointer;\n  transition: 1000ms;\n\n  &:hover {\n    background-color: var(--white);\n    color: var(--btn-bg-color);\n    transition: 1000ms;\n    border: 1px solid var(--btn-bg-color);\n  }\n`;\n\nexport const ButtonCancel = styled.button`\n  width: 300px;\n  height: 50px;\n  background-color: var(--white);\n  border: 1px solid var(--active-bg-color);\n  border-radius: 20px;\n  color: var(--active-bg-color);\n  cursor: pointer;\n  transition: 1000ms;\n  &:hover {\n    background-color: var(--active-bg-color);\n    color: var(--white);\n    transition: 1000ms;\n  }\n`;\n\nexport const DateContainer = styled.div`\n  position: relative;\n`;\n\nexport const IconDate = styled.label`\n  position: absolute;\n  top: 60%;\n  left: 80%;\n  cursor: pointer;\n`;\n\nexport const SvgDate = styled.svg`\n  transition: 500ms;\n  transform: scale(1);\n  :hover {\n    box-shadow: 0px 0px 23px -3px rgba(0, 0, 0, 0.75);\n    transition: 500ms;\n    transform: scale(1.1);\n  }\n`;\n\nexport const AmountDate = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n  text-align: center;\n  padding-right: 25px;\n`;\n// Field\n\nexport const SelectField = styled(Field)`\n  width: 400px;\n  outline: none;\n  padding: 8px;\n  margin-top: 40px;\n  border: 1px solid var(--gray-5);\n  border-top: none;\n  border-left: none;\n  border-right: none;\n`;\n\nexport const AmountField = styled(Field)`\n  padding: 8px;\n  margin-top: 40px;\n  border: 1px solid var(--gray-5);\n  border-top: none;\n  border-left: none;\n  border-right: none;\n  outline: none;\n  &::placeholder {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    text-align: center;\n    padding-bottom: 8px;\n  }\n`;\n\nexport const DateField = styled(DatePicker)`\n  outline: none;\n  padding: 8px;\n  padding-left: 20px;\n  margin-top: 40px;\n  border: 1px solid var(--gray-5);\n  border-top: none;\n  border-left: none;\n  border-right: none;\n`;\n\nexport const CommentField = styled(Field)`\n  outline: none;\n  padding: 8px;\n  margin-top: 40px;\n  margin-bottom: 40px;\n  border: 1px solid var(--gray-5);\n  border-top: none;\n  border-left: none;\n  border-right: none;\n  width: 400px;\n\n  font-weight: 400;\n  font-size: 18px;\n  line-height: 27px;\n  &::placeholder {\n    color: var(--gray-4);\n  }\n`;\n","import { createPortal } from 'react-dom';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  AmountDate,\n  AmountField,\n  Btn,\n  ButtonAdd,\n  ButtonCancel,\n  ButtonClose,\n  CommentField,\n  DateContainer,\n  DateField,\n  IconDate,\n  LabelExpense,\n  LabelIncome,\n  Modal,\n  ModalContent,\n  ModalForm,\n  ModalHead,\n  Operation,\n  RadioFieldExpense,\n  RadioFieldIncome,\n  SelectField,\n  ToggleRb,\n  CloseIcon,\n  Plus,\n  SvgDate,\n} from './EditTransactionModal.styled';\nimport { close, minus } from 'assets/media/icons';\n\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { Formik, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport styled from 'styled-components';\nimport { editTransactionThunk } from 'redux/finance/finance-operations';\nimport moment from 'moment';\nimport { categoriesSelector } from 'redux/selectors';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst schema = yup.object().shape({\n  operation: yup.string().required(),\n  sum: yup.number().required('Enter amount'),\n  date: yup\n    .date()\n    .required()\n    .default(() => new Date()),\n  transaction: yup.string().required('Select transaction type!'),\n  comment: yup.string(),\n});\n\nconst ErrorText = styled.p`\n  color: red;\n`;\n\nconst FromError = ({ name }) => {\n  return (\n    <ErrorMessage\n      name={name}\n      render={message => <ErrorText>{message}</ErrorText>}\n    />\n  );\n};\n\nexport const EditTransactionModal = ({ closeModal, transactionData }) => {\n  const categories = useSelector(categoriesSelector);\n\n  const [startDate, setStartDate] = useState(new Date());\n  const initialValues = {\n    operation: transactionData.type,\n    transaction: transactionData.categoryId,\n    sum: transactionData.amount,\n    date: transactionData.transactionDate,\n    comment: transactionData.comment,\n  };\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        closeModal();\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [closeModal]);\n\n  // закрытие модалки по бекдропу\n  const handleBackdropClose = e => {\n    if (e.currentTarget === e.target) {\n      closeModal();\n    }\n  };\n  // FORM\n\n  const handleChangeDate = e => {\n    setStartDate(e);\n  };\n\n  const handleSubmit = (values, { resetForm }) => {\n    const date = moment(startDate).format('YYYY-MM-DD');\n\n    dispatch(editTransactionThunk({ id: transactionData.id, ...values, date }));\n    closeModal();\n  };\n\n  return createPortal(\n    <Modal onClick={handleBackdropClose}>\n      <ModalContent>\n        <ModalHead>Edit transaction</ModalHead>\n        <Formik\n          initialValues={initialValues}\n          validationSchema={schema}\n          onSubmit={handleSubmit}\n        >\n          {props => {\n            return (\n              <ModalForm>\n                <Operation>\n                  <RadioFieldIncome\n                    id=\"income\"\n                    type=\"radio\"\n                    checked={props.values.operation === 'INCOME'}\n                    name=\"operation\"\n                    value=\"INCOME\"\n                  />\n                  <RadioFieldExpense\n                    id=\"expense\"\n                    type=\"radio\"\n                    checked={props.values.operation === 'EXPENSE'}\n                    name=\"operation\"\n                    value=\"EXPENSE\"\n                  />\n                  <LabelIncome htmlFor=\"income\">Income </LabelIncome>\n                  <ToggleRb>\n                    <Plus>\n                      <CloseIcon\n                        src={\n                          props.values.operation === 'INCOME' ? close : minus\n                        }\n                        width={20}\n                        height={20}\n                        title=\"Change\"\n                      />\n                    </Plus>\n                  </ToggleRb>\n                  <LabelExpense htmlFor=\"expense\">Expense</LabelExpense>\n                </Operation>\n\n                {props.values.operation === 'EXPENSE' && (\n                  <div>\n                    <SelectField as=\"select\" name=\"transaction\">\n                      {categories.map(item => (\n                        <option value={item.id}>{item.name}</option>\n                      ))}\n                    </SelectField>\n                    <FromError name=\"transaction\" />\n                  </div>\n                )}\n\n                <AmountDate>\n                  <label htmlFor=\"sum\"></label>\n                  <AmountField type=\"number\" name=\"sum\" placeholder=\"0.00\" />\n                  <FromError name=\"sum\" />\n                  <DateContainer>\n                    <DateField\n                      id=\"date\"\n                      type=\"date\"\n                      name=\"date\"\n                      selected={startDate}\n                      onChange={handleChangeDate}\n                      dateFormat=\"dd.MM.yyyy\"\n                    />\n                    <FromError name=\"date\" />\n                    <IconDate htmlFor=\"date\">\n                      <SvgDate\n                        width=\"18\"\n                        height=\"20\"\n                        viewBox=\"0 0 18 20\"\n                        fill=\"none\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                      >\n                        <path\n                          d=\"M6 9H4V11H6V9ZM10 9H8V11H10V9ZM14 9H12V11H14V9ZM16 2H15V0H13V2H5V0H3V2H2C0.89 2 0.00999999 2.9 0.00999999 4L0 18C0 19.1 0.89 20 2 20H16C17.1 20 18 19.1 18 18V4C18 2.9 17.1 2 16 2ZM16 18H2V7H16V18Z\"\n                          fill=\"#4A56E2\"\n                        />\n                      </SvgDate>\n                    </IconDate>\n                  </DateContainer>\n                </AmountDate>\n                <label htmlFor=\"comment\"></label>\n                <div>\n                  <CommentField\n                    type=\"text\"\n                    name=\"comment\"\n                    placeholder=\"Comment\"\n                  />\n                </div>\n                <Btn>\n                  <ButtonAdd type=\"submit\">Change</ButtonAdd>\n                  <ButtonCancel type=\"button\" onClick={closeModal}>\n                    CANCEL\n                  </ButtonCancel>\n                </Btn>\n              </ModalForm>\n            );\n          }}\n        </Formik>\n        <ButtonClose onClick={closeModal}>\n          <svg\n            version=\"1.1\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"16\"\n            height=\"16\"\n            viewBox=\"0 0 32 32\"\n          >\n            <path\n              fill=\"none\"\n              strokeLinejoin=\"miter\"\n              strokeLinecap=\"butt\"\n              strokeMiterlimit=\"4\"\n              strokeWidth=\"1.7778\"\n              stroke=\"#000\"\n              d=\"M1.778 1.778l28.444 28.444\"\n            ></path>\n            <path\n              fill=\"none\"\n              strokeLinejoin=\"miter\"\n              strokeLinecap=\"butt\"\n              strokeMiterlimit=\"4\"\n              strokeWidth=\"1.7778\"\n              stroke=\"#000\"\n              d=\"M1.778 30.222l28.444-28.444\"\n            ></path>\n          </svg>\n        </ButtonClose>\n      </ModalContent>\n    </Modal>,\n    modalRoot\n  );\n};\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { BsFillTrashFill, BsPencilSquare } from 'react-icons/bs';\nimport { Mobile } from 'components/Container/Mobile';\nimport { IsDesktopOrTablet } from 'components/Container/Tablet';\n\nimport {\n  StyledDelButton,\n  StyledSpan,\n  Section,\n  StyledTable,\n  StyledTd,\n  StyledTh,\n  ThRight,\n  THead,\n  Tbody,\n  TypeTd,\n  TSum,\n  BalanceTd,\n  List,\n  ListItem,\n  ListText,\n  ListSum,\n} from './Table.styled';\n\nimport moment from 'moment';\nimport {\n  deleteTransactionThunk,\n  getAllTransactionsThunk,\n} from 'redux/finance/finance-operations';\nimport { useEffect } from 'react';\nimport { categoriesSelector, transactionsSelector } from 'redux/selectors';\nimport { sortByDate } from 'helpers/sorters';\nimport { EditTransactionModal } from 'components/EditTransactionModal/EditTransactionModal';\n\nexport default function Table() {\n  const [editTransactionId, setEditTransactionId] = useState('');\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  const openModal = itemId => {\n    setEditTransactionId(itemId);\n    setIsModalOpen(true);\n  };\n\n  const transactions = useSelector(transactionsSelector);\n  const sortedTransactions = [...transactions].sort(sortByDate);\n\n  const categories = useSelector(categoriesSelector);\n\n  const searchCategoryName = id => {\n    const category = categories.find(item => id === item.id);\n    console.log('category', category);\n    return category?.name;\n  };\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getAllTransactionsThunk());\n  }, [dispatch]);\n\n  const deleteTransaction = itemId => {\n    dispatch(deleteTransactionThunk(itemId));\n  };\n\n  return (\n    <Section>\n      <IsDesktopOrTablet>\n        <StyledTable>\n          <THead>\n            <tr>\n              <StyledTh>Date</StyledTh>\n              <StyledTh>Type</StyledTh>\n              <StyledTh>Category</StyledTh>\n              <StyledTh>Comment</StyledTh>\n              <ThRight>Sum</ThRight>\n              <ThRight>Balance</ThRight>\n            </tr>\n          </THead>\n          <Tbody>\n            {sortedTransactions.map(item => (\n              <tr key={item.id}>\n                <StyledTd>\n                  {moment(item.transactionDate).format('DD.MM.YY')}\n                </StyledTd>\n                <TypeTd>{item.type === 'INCOME' ? '+' : '-'}</TypeTd>\n                <StyledTd>{searchCategoryName(item.categoryId)}</StyledTd>\n                <StyledTd>{item.comment}</StyledTd>\n                <TSum income={item.type === 'INCOME'}>\n                  {item.amount.toFixed(2)}\n                </TSum>\n                <BalanceTd>\n                  <StyledSpan>\n                    {item.balanceAfter.toFixed(2)}{' '}\n                    <StyledDelButton\n                      type=\"button\"\n                      onClick={() => deleteTransaction(item.id)}\n                    >\n                      <BsFillTrashFill color=\"#FF6596\" />\n                    </StyledDelButton>\n                    <StyledDelButton onClick={() => openModal(item.id)}>\n                      <BsPencilSquare color=\"#24CCA7\" />\n                    </StyledDelButton>\n                  </StyledSpan>\n                </BalanceTd>\n              </tr>\n            ))}\n          </Tbody>\n        </StyledTable>\n      </IsDesktopOrTablet>\n      <Mobile>\n        {sortedTransactions.map(item => (\n          <List key={item.id}>\n            <ListItem>\n              Date\n              <ListText>\n                {moment(item.transactionDate).format('DD.MM.YY')}\n              </ListText>\n            </ListItem>\n            <ListItem>\n              Type <ListText>{item.type === 'INCOME' ? '+' : '-'}</ListText>\n            </ListItem>\n            <ListItem>\n              Category{' '}\n              <ListText>{searchCategoryName(item.categoryId)}</ListText>\n            </ListItem>\n            <ListItem>\n              Comment <ListText>{item.comment}</ListText>\n            </ListItem>\n            <ListItem income={item.type === 'INCOME'}>\n              Sum <ListSum>{item.amount.toFixed(2)}</ListSum>\n            </ListItem>\n            <ListItem>\n              Balance <ListText>{item.balanceAfter.toFixed(2)}</ListText>\n            </ListItem>\n          </List>\n        ))}\n      </Mobile>\n\n      {isModalOpen && (\n        <EditTransactionModal\n          closeModal={closeModal}\n          transactionData={transactions.find(\n            item => item.id === editTransactionId\n          )}\n        />\n      )}\n    </Section>\n  );\n}\n","import Table from 'components/Table/Table';\nimport { Balance } from 'components/Balance/Balance';\nimport { Mobile } from 'components/Container/Mobile';\n\nconst HomeTab = () => {\n  return (\n    <>\n      <Mobile>\n        <Balance />\n      </Mobile>\n      <Table />\n    </>\n  );\n};\n\nexport default HomeTab;\n","\n\n\nexport const transactionsSelector = (state)  =>  state.finance.transactions;\n   \n  \n\nexport const categoriesSelector = (state)  => state.categories.items;"],"names":["Box","styled","device","Title","Amount","Balance","user","useSelector","getUser","transactions","transactionsSelector","useState","balance","setBalance","afterTransactions","length","balanceAfter","useEffect","toFixed","Section","StyledTable","THead","StyledTh","ThRight","Tbody","StyledTd","TypeTd","TSum","props","income","BalanceTd","StyledDelButton","StyledSpan","List","ListItem","ListText","ListSum","Modal","ModalContent","ModalHead","ModalForm","Form","Operation","LabelIncome","LabelExpense","ToggleRb","Plus","RadioFieldIncome","Field","RadioFieldExpense","CloseIcon","SVG","ButtonClose","Btn","ButtonAdd","ButtonCancel","DateContainer","IconDate","SvgDate","AmountDate","SelectField","AmountField","DateField","DatePicker","CommentField","modalRoot","document","querySelector","schema","yup","shape","operation","required","sum","date","default","Date","transaction","comment","ErrorText","FromError","name","render","message","EditTransactionModal","closeModal","transactionData","categories","categoriesSelector","startDate","setStartDate","initialValues","type","categoryId","amount","transactionDate","dispatch","useDispatch","handleKeyDown","e","code","window","addEventListener","removeEventListener","handleChangeDate","createPortal","onClick","currentTarget","target","validationSchema","onSubmit","values","resetForm","moment","format","editTransactionThunk","id","checked","value","htmlFor","src","close","minus","width","height","title","as","map","item","placeholder","selected","onChange","dateFormat","viewBox","fill","xmlns","d","version","strokeLinejoin","strokeLinecap","strokeMiterlimit","strokeWidth","stroke","Table","editTransactionId","setEditTransactionId","isModalOpen","setIsModalOpen","sortedTransactions","sort","sortByDate","searchCategoryName","category","find","console","log","getAllTransactionsThunk","itemId","deleteTransactionThunk","color","Mobile","state","finance","items"],"sourceRoot":""}