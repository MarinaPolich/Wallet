{"version":3,"file":"static/js/509.7959802d.chunk.js","mappings":"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","sources":["components/Balance/Balance.styled.js","components/Balance/Balance.jsx","components/Header/Header.styled.js","components/ModalLogout/ModalLogout.styled.js","components/ModalLogout/ModalLogout.jsx","components/Header/Header.jsx","components/Navigation/Navigation.styled.js","components/Navigation/Navigation.jsx","components/ModalAddTransaction/ModalAddTransaction.styled.js","redux/transaction/operations.js","components/FormModal/FormModal.jsx","components/ModalAddTransaction/ModalAddTransaction.jsx","components/ButtonAddTransaction/ButtonAddTransaction.styled.js","components/ButtonAddTransaction/ButtonAddTransaction.jsx","pages/Dashboard/Dashboard.styled.js","pages/Dashboard/Dashboard.jsx","redux/selectors.js"],"sourcesContent":["import styled from 'styled-components';\nimport { device } from 'stylesheet/breakpoints';\n\nexport const Box = styled.div`\n  width: 280px;\n  padding: 8px 32px;\n  border-radius: 30px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 32px;\n\n  background-color: var(--white);\n\n  @media ${device.tablet} {\n    width: 336px;\n  }\n\n  @media ${device.tabDesk} {\n    padding-left: 40px;\n    padding-right: 40px;\n    margin: 0;\n  }\n\n  @media ${device.desktop} {\n    width: 395px;\n  }\n`;\n\nexport const Title = styled.h2`\n  font-family: 'Circe';\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 1.3;\n  text-transform: uppercase;\n\n  margin-bottom: 11px;\n\n  color: var(--gray-3);\n`;\n\nexport const Amount = styled.p`\n  font-family: 'Poppins-Regular';\n  font-weight: 400;\n  font-size: 30px;\n  line-height: 1.5;\n  align-items: center;\n\n  color: var(--black);\n`;\n","import { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { getUser } from 'redux/auth/auth-selector';\nimport { transactionsSelector } from 'redux/selectors';\nimport { Box, Title, Amount } from './Balance.styled';\n\nexport const Balance = () => {\n  const user = useSelector(getUser);\n  const transactions = useSelector(transactionsSelector);\n  const [balance, setBalance] = useState(user.balance);\n  const afterTransactions = transactions[transactions.length - 1]?.balanceAfter;\n\n  useEffect(() => {\n    if (afterTransactions) {\n      setBalance(afterTransactions);\n    }\n  }, [afterTransactions]);\n\n  return (\n    <Box>\n      <Title>Your balance</Title>\n      <Amount>&#8372; {balance.toFixed(2)}</Amount>\n    </Box>\n  );\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\nimport { device } from 'stylesheet/breakpoints';\nimport { desktop, tablet } from 'constants/responsive';\n\nexport const Box = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n  margin: 0 auto;\n  background-color: var(--white);\n`;\n\nexport const HeaderBox = styled.header`\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  padding: 15px 20px;\n\n  @media ${device.tablet} {\n    width: ${tablet}px;\n    padding: 20px 32px;\n  }\n\n  @media ${device.desktop} {\n    width: ${desktop}px;\n    padding: 20px 16px;\n  }\n`;\n\nexport const LinkLogo = styled(NavLink)`\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n  cursor: pointer;\n`;\n\nexport const LogoIcon = styled(SVG)`\n  width: 30px;\n  height: 30px;\n  margin-right: 16px;\n\n  @media ${device.tabDesk} {\n    width: 40px;\n    height: 40px;\n    margin-right: 20px;\n  }\n`;\n\nexport const LogoTitle = styled.h1`\n  color: var(--black);\n  font-family: 'Poppins Bold';\n  font-weight: 700;\n  font-size: 30px;\n  line-height: 1.5;\n`;\n\nexport const BoxOut = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n  align-items: center;\n  color: var(--gray-4);\n  font-size: 18px;\n  line-height: 1.5;\n`;\n\nexport const NameUser = styled.span`\n  padding: 0 0 0 8px;\n  position: relative;\n\n  @media ${device.tabDesk} {\n    padding-right: 12px;\n    &::after {\n      content: '';\n      position: absolute;\n      right: 0px;\n      width: 1px;\n      height: 30px;\n      background-color: var(--gray-4);\n    }\n  }\n`;\n\nexport const ButtonExit = styled.button`\n  display: flex;\n  flex-wrap: nowrap;\n  align-items: unset;\n  background-color: transparent;\n  border: none;\n  color: var(--gray-4);\n  cursor: pointer;\n\n  @media ${device.tabDesk} {\n    padding-left: 12px;\n  }\n`;\n\nexport const ExitIcon = styled(SVG)`\n  width: 18px;\n  height: 20px;\n  fill: var(--gray-4);\n\n  @media ${device.tabDesk} {\n    margin-right: 8px;\n  }\n`;\n","import styled from 'styled-components';\nimport { device } from 'stylesheet/breakpoints';\n\nexport const ExitModal = styled.div`\n  height: 100vh;\n  width: 100vw;\n  background-color: rgba(0, 0, 0, 0.5);\n  position: fixed;\n  top: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  text-align: center;\n  justify-content: center;\n  animation: blowUpModal 0.5s cubic-bezier(0.165, 0.84, 0.44, 1) forwards;\n`;\n\nexport const ExitModalContent = styled.div`\n  position: relative;\n  padding: 20px;\n  width: 500px;\n  height: 230px;\n  border-radius: 10px;\n  background-color: var(--white);\n  @media ${device.mobile} {\n    height: 300px;\n  }\n`;\n\nexport const ExitTitle = styled.h1`\n  font-size: 26px;\n  font-family: 'CirceBold', sans-serif;\n  font-weight: 700;\n  line-height: 1.5;\n  margin-bottom: 30px;\n  color: var(--black);\n  margin-top: 10px;\n  @media ${device.mobile} {\n    font-size: 22px;\n    display: block;\n    margin-right: auto;\n    margin-left: auto;\n  }\n`;\n\nexport const BtnYes = styled.button`\n  font-family: 'CirceBold', sans-serif;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 1.5;\n  background-color: var(--btn-bg-color);\n  border: none;\n  color: var(--white);\n  padding: 10px 50px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  font-size: 16px;\n  margin-right: 100px;\n  cursor: pointer;\n  border-radius: 10px;\n  border: 1px solid var(--btn-bg-color);\n  &:hover {\n    background-color: var(--white);\n    color: var(--btn-bg-color);\n    transition: 500ms;\n    border: 1px solid var(--btn-bg-color);\n  }\n  @media ${device.mobile} {\n    display: block;\n    margin-right: auto;\n    margin-left: auto;\n    margin-bottom: 30px;\n  }\n`;\n\nexport const BtnNo = styled.button`\n  font-family: 'CirceBold', sans-serif;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 1.5;\n  background-color: #f08080;\n  border: none;\n  color: var(--white);\n  padding: 10px 50px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  font-size: 16px;\n  cursor: pointer;\n  border-radius: 10px;\n  border: 1px solid #f08080;\n  &:hover {\n    background-color: var(--white);\n    color: #f08080;\n    transition: 500ms;\n    border: 1px solid #f08080;\n  }\n  @media ${device.mobile} {\n    display: block;\n    margin-right: auto;\n    margin-left: auto;\n  }\n`;\n","import { createPortal } from 'react-dom';\nimport { logOut } from 'redux/auth/auth-operations';\nimport { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport {\n  BtnNo,\n  BtnYes,\n  ExitModal,\n  ExitModalContent,\n  ExitTitle,\n} from './ModalLogout.styled';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport const ModalLogout = ({ closeModal }) => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        closeModal();\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [closeModal]);\n\n  // закрытие модалки по бекдропу\n  const handleBackdropClose = e => {\n    if (e.currentTarget === e.target) {\n      closeModal();\n    }\n  };\n\n  return createPortal(\n    <ExitModal onClick={handleBackdropClose}>\n      <ExitModalContent>\n        <ExitTitle>\n          Unsaved data will be lost. Do you really want out?\n        </ExitTitle>\n        <BtnYes\n          type=\"button\"\n          onClick={() => {\n            dispatch(logOut());\n            closeModal();\n          }}\n        >\n          Yes\n        </BtnYes>\n        <BtnNo type=\"button\" onClick={closeModal}>\n          {' '}\n          No\n        </BtnNo>\n      </ExitModalContent>\n    </ExitModal>,\n    modalRoot\n  );\n};\n","import {\n  Box,\n  BoxOut,\n  ButtonExit,\n  ExitIcon,\n  HeaderBox,\n  LinkLogo,\n  LogoIcon,\n  LogoTitle,\n  NameUser,\n} from './Header.styled';\nimport SVG from 'react-inlinesvg';\nimport { exit, logo, logoText } from 'assets/media/icons';\nimport { Mobile } from 'components/Container/Mobile';\nimport { Tablet } from 'components/Container/Tablet';\nimport { Desktop } from 'components/Container/Desktop';\nimport { useSelector } from 'react-redux';\nimport { getUser } from 'redux/auth/auth-selector';\nimport { useState } from 'react';\nimport { ModalLogout } from '../ModalLogout/ModalLogout';\n\nexport const Header = () => {\n  const [out, setLogOut] = useState(false);\n  const name = useSelector(getUser);\n\n  const toggleModal = () => {\n    setLogOut(out => !out);\n  };\n\n  return (\n    <Box>\n      <HeaderBox>\n        <LinkLogo>\n          <LogoIcon\n            src={logo}\n            className=\"logo-icon\"\n            width={30}\n            height={30}\n            title=\"Logo\"\n          />\n          <Mobile>\n            <SVG src={logoText} width={74} height={17} title=\"Logo-title\" />\n          </Mobile>\n          <Tablet>\n            <LogoTitle>Wallet</LogoTitle>\n          </Tablet>\n          <Desktop>\n            <LogoTitle>Wallet</LogoTitle>\n          </Desktop>\n        </LinkLogo>\n        <BoxOut>\n          <NameUser>{name.username}</NameUser>\n          <ButtonExit type=\"button\" onClick={toggleModal}>\n            <ExitIcon src={exit} width={18} height={18} title=\"Exit\" />\n            <Tablet>\n              <span>Exit</span>\n            </Tablet>\n            <Desktop>\n              <span>Exit</span>\n            </Desktop>\n          </ButtonExit>\n        </BoxOut>\n        {out && <ModalLogout closeModal={toggleModal} />}\n      </HeaderBox>\n    </Box>\n  );\n};\n","import styled from 'styled-components';\nimport SVG from 'react-inlinesvg';\nimport { NavLink } from 'react-router-dom';\nimport { device } from 'stylesheet/breakpoints';\n\nexport const Box = styled.div`\n  display: flex;\n  padding: 12px 0;\n  margin-bottom: 28px;\n justify-content: center;\n\n  @media ${device.tabDesk} {\n    padding: 0;\n    margin-left: 0;\n    margin-right: 0;\n    display: flex;\n    flex-direction: column;\n    padding: 0;\n  }\n`;\n\nexport const StyledLink = styled(NavLink)`\n  text-decoration: none;\n  color: var(--black);\n\n  :not(:last-child) {\n    @media ${device.mobile} {\n      margin-right: 30px;\n      margin-bottom: 0;\n    }\n    margin-bottom: 12px;\n  }\n\n  @media ${device.tabDesk} {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n  }\n`;\n\nexport const Text = styled.span`\n  @media ${device.mobile} {\n    display: none;\n  }\n\n  font-family: 'Poppins-Regular';\n  font-size: 18px;\n  line-height: 1.5;\n\n  ${StyledLink}.active & {\n    font-family: 'Poppins-Bold';\n    font-weight: 700;\n  }\n`;\n\nexport const Icon = styled(SVG)`\n  padding: 3px;\n\n  fill: var(--disable-bg-color);\n\n  ${StyledLink}.active & {\n    fill: var(--active-bg-color);\n  }\n\n  @media ${device.tabDesk} {\n    margin-right: 20px;\n  }\n`;\n\nexport const CurrencyIcon = styled(SVG)`\n  padding: 3px;\n  fill: var(--disable-bg-color);\n\n  ${StyledLink}.active & {\n    fill: var(--active-bg-color);\n  }\n`;\n","import { Mobile } from 'components/Container/Mobile';\nimport { IsDesktopOrTablet } from 'components/Container/Tablet';\nimport { home, homeS, statistic, statS, currency } from 'assets/media/icons';\nimport { Box, StyledLink, Text, Icon, CurrencyIcon } from './Navigation.styled';\n\nexport const Navigation = () => {\n  return (\n    <Box>\n      <StyledLink to=\"/home\">\n        <Mobile>\n          <Icon src={home} width={44} height={44} title=\"home\" />\n        </Mobile>\n        <IsDesktopOrTablet>\n          <Icon src={homeS} width={24} height={24} title=\"home\" />\n        </IsDesktopOrTablet>\n        <Text>Home</Text>\n      </StyledLink>\n      <StyledLink to=\"/diagram\">\n        <Mobile>\n          <Icon src={statistic} width={44} height={44} title=\"home\" />\n        </Mobile>\n        <IsDesktopOrTablet>\n          <Icon src={statS} width={24} height={24} title=\"statistic\" />\n        </IsDesktopOrTablet>\n        <Text>Statistics</Text>\n      </StyledLink>\n      <Mobile>\n        <StyledLink to=\"/currency\">\n          <CurrencyIcon\n            src={currency}\n            width={44}\n            height={44}\n            title=\"currency\"\n          />\n        </StyledLink>\n      </Mobile>\n    </Box>\n  );\n};\n","import styled from 'styled-components';\nimport { Form, Field } from 'formik';\nimport DatePicker from 'react-datepicker';\nimport SVG from 'react-inlinesvg';\nimport Select from 'react-select';\nimport { device } from 'stylesheet/breakpoints';\n\n// const colorActiveLable = 'green';\n\nexport const Modal = styled.div`\n  height: 100vh;\n  width: 100vw;\n  background-color: rgba(0, 0, 0, 0.5);\n  position: fixed;\n  top: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  text-align: center;\n  justify-content: center;\n  animation: blowUpModal 0.5s cubic-bezier(0.165, 0.84, 0.44, 1) forwards;\n`;\n\nexport const ModalContent = styled.div`\n  position: relative;\n  padding: 20px;\n  width: 540px;\n  height: 600px;\n  border-radius: 20px;\n  background-color: var(--white);\n  @media ${device.mobile} {\n    width: 320px;\n  }\n`;\n\nexport const ModalHead = styled.h1`\n  margin-top: 20px;\n  margin-bottom: 40px;\n  font-family: 'Poppins Regular';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 30px;\n  line-height: 1.5;\n\n  color: var(--black);\n  @media ${device.mobile} {\n    margin-top: 0;\n    margin-bottom: 20px;\n  }\n`;\n\n// FORM RADIOBUTTON\n\nexport const ModalForm = styled(Form)`\n  display: block;\n  @media ${device.mobile} {\n    width: 280px;\n  }\n`;\n\nexport const Operation = styled.div`\n  display: flex;\n  justify-content: center;\n  text-align: center;\n  align-items: center;\n  font-family: 'CirceBold', sans-serif;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 1.5;\n`;\n\nexport const LabelIncome = styled.label`\n  margin-right: 20px;\n  position: relative;\n  cursor: pointer;\n  color: var(--gray-5);\n  transition: 500ms;\n  text-align: right;\n\n  &:hover,\n  :active {\n    color: var(--btn-bg-color);\n  }\n`;\n\nexport const LabelExpense = styled.label`\n  color: var(--gray-5);\n  margin-left: 20px;\n  text-align: right;\n  position: relative;\n  cursor: pointer;\n  text-align: left;\n\n  &:hover,\n  :active {\n    color: var(--error-color);\n  }\n`;\n\n// border: 1px solid #e0e0e0;\n//   width: 80px;\n//   height: 40px;\n//   border-radius: 30px;\n\nexport const ToggleRb = styled.div`\n  position: relative;\n  height: 40px;\n  width: 80px;\n  background-color: var(--white);\n  border: 1px solid var(--gray-5);\n  border-radius: 30px;\n  transition: all 500ms;\n`;\n\nexport const Plus = styled.div`\n  position: absolute;\n  width: 44px;\n  height: 44px;\n  background-color: var(--btn-bg-color);\n  box-shadow: 0px 6px 15px rgba(36, 204, 167, 0.5);\n  top: -3px;\n  left: 0;\n  border-radius: 50%;\n  transition: all 500ms;\n  z-index: 4;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const RadioFieldIncome = styled(Field)`\n  display: none;\n\n  &:checked ~ ${LabelIncome} {\n    color: var(--btn-bg-color);\n  }\n`;\n\nexport const RadioFieldExpense = styled(Field)`\n  display: none;\n\n  &:checked {\n    ~ ${LabelExpense} {\n      color: var(--error-color);\n    }\n    ~ ${ToggleRb} > ${Plus} {\n      left: 40px;\n      background-color: var(--error-color);\n      box-shadow: 0px 6px 15px rgba(255, 101, 150, 0.5);\n    }\n  }\n`;\n\nexport const CloseIcon = styled(SVG)`\n  left: 20%;\n  width: 20px;\n  height: 20px;\n  fill: var(--white);\n`;\n\n// Toggle Changes\n\n// export const Marker = styled.div`\n//   position: relative;\n//   background-color: #e0e0e0;\n//   width: 16px;\n//   height: 16px;\n//   border-radius: 50%;\n//   z-index: 2;\n//   pointer-events: none;\n//   transform: translateX(1px);\n//   transition: transform 250ms linear;\n// `;\n\n// export const RadioButton = styled.div`\n//   display: flex;\n//   justify-content: space-around;\n//   text-align: center;\n//   align-items: center;\n//   border-radius: 30px;\n//   width: 80px;\n//   height: 40px;\n//   border: 1px solid #e0e0e0;\n// `;\n\n// BUTTON\n\nexport const ButtonClose = styled.button`\n  position: absolute;\n  top: 0;\n  right: 0;\n  cursor: pointer;\n  background-color: var(--white);\n  border: none;\n  margin: 20px;\n  @media ${device.mobile} {\n    display: none;\n  }\n`;\n\nexport const Btn = styled.div`\n  display: block;\n  /* font-family: 'Circe', sans-serif;\n  font-style: normal;\n  font-weight: 400;\n  font-size: 18px;\n  line-height: 1.5;\n  text-align: center;\n  letter-spacing: 0.3em;\n  text-transform: uppercase; */\n`;\n\nexport const ButtonAdd = styled.button`\n  width: 300px;\n  height: 50px;\n  background-color: var(--btn-bg-color);\n  color: var(--white);\n  border: none;\n  border-radius: 20px;\n  margin-bottom: 20px;\n  cursor: pointer;\n  transition: 1000ms;\n\n  &:hover {\n    background-color: var(--white);\n    color: var(--btn-bg-color);\n    transition: 1000ms;\n    border: 1px solid var(--btn-bg-color);\n  }\n  @media ${device.mobile} {\n    width: 280px;\n  }\n`;\n\nexport const ButtonCancel = styled.button`\n  width: 300px;\n  height: 50px;\n  background-color: var(--white);\n  border: 1px solid var(--active-bg-color);\n  border-radius: 20px;\n  color: var(--active-bg-color);\n  cursor: pointer;\n  transition: 1000ms;\n  &:hover {\n    background-color: var(--active-bg-color);\n    color: var(--white);\n    transition: 1000ms;\n  }\n  @media ${device.mobile} {\n    width: 280px;\n  }\n`;\n\nexport const DateContainer = styled.div`\n  position: relative;\n`;\n\nexport const IconDate = styled.label`\n  position: absolute;\n  top: 60%;\n  left: 80%;\n  cursor: pointer;\n  @media ${device.mobile} {\n    left: 95%;\n    top: 20%;\n  }\n`;\n\nexport const SvgDate = styled.svg`\n  transition: 500ms;\n  transform: scale(1);\n  :hover {\n    box-shadow: 0px 0px 23px -3px rgba(0, 0, 0, 0.75);\n    transition: 500ms;\n    transform: scale(1.1);\n  }\n`;\n\nexport const AmountDate = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  @media ${device.mobile} {\n    display: block;\n  }\n`;\n// Field\n\nexport const SelectField = styled(Select)`\n  display: block;\n  outline: none;\n  margin-top: 40px;\n  margin-left: 50px;\n  margin-right: 50px;\n  @media ${device.mobile} {\n    width: 280px;\n    margin-left: 0;\n    margin-right: 0;\n  }\n`;\n\nexport const AmountField = styled(Field)`\n  position: relative;\n  padding: 8px;\n  margin-top: 40px;\n  text-align: center;\n  border: 1px solid var(--gray-5);\n  border-top: none;\n  border-left: none;\n  border-right: none;\n  outline: none;\n  &::placeholder {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    text-align: center;\n    padding-bottom: 8px;\n  }\n  @media ${device.mobile} {\n    width: 280px;\n    margin-bottom: 30px;\n  }\n`;\n\nexport const DateField = styled(DatePicker)`\n  outline: none;\n  padding: 8px;\n  margin-left: 35px;\n  margin-top: 40px;\n  border: 1px solid var(--gray-5);\n  border-top: none;\n  border-left: none;\n  border-right: none;\n  @media ${device.mobile} {\n    width: 280px;\n    margin-top: 0;\n  }\n`;\n\nexport const CommentField = styled(Field)`\n  outline: none;\n  padding: 8px;\n  margin-top: 40px;\n  margin-bottom: 40px;\n  border: 1px solid var(--gray-5);\n  border-top: none;\n  border-left: none;\n  border-right: none;\n  width: 400px;\n\n  font-weight: 400;\n  font-size: 18px;\n  line-height: 27px;\n  &::placeholder {\n    color: var(--gray-4);\n  }\n  @media ${device.mobile} {\n    width: 280px;\n    margin-top: 30px;\n    margin-bottom: 30px;\n  }\n`;\n","import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\nexport const categories = createAsyncThunk(\n  'transaction/category',\n  async (_, thunkAPI) => {\n    try {\n      const res = await axios.get('/api/transaction-categories');\n      return res.data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\nexport const transaction = createAsyncThunk(\n  'transaction/transactions',\n  async (_, thunkAPI) => {\n    try {\n      const res = await axios.get('/api/transactions');\n      return res.data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\nexport const addTransaction = createAsyncThunk(\n  'transaction/add',\n  async (transaction, thunkAPI) => {\n    try {\n      const res = await axios.post('/api/transactions', transaction);\n      return res.data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\n// export const logIn = createAsyncThunk(\n//   'auth/login',\n//   async (credentials, thunkAPI) => {\n//     try {\n//       const res = await axios.post('/api/auth/sign-in', credentials);\n//       setAuthHeader(res.data.token);\n\n//       return res.data;\n//     } catch (error) {\n//       return thunkAPI.rejectWithValue(error.message);\n//     }\n//   }\n// );\n\n// export const logOut = createAsyncThunk(\n//   'auth/logout',\n//   async (_, thunkAPI) => {\n//   try {\n//     await axios.post('/api/auth/sign-out');\n//     clearAuthHeader();\n//   } catch (error) {\n//     return thunkAPI.rejectWithValue(error.message);\n//   }\n// });\n\n// export const refreshUser = createAsyncThunk(\n//   'auth/refresh',\n//   async (_, thunkAPI) => {\n//     const state = thunkAPI.getState();\n//     const token = state.auth.token;\n\n//     if (token === null) {\n//       return thunkAPI.rejectWithValue('Unable to fetch user');\n//     }\n\n//     try {\n//       setAuthHeader(token);\n//       const res = await axios.get('/api/users/current');\n//       return res.data;\n//     } catch (error) {\n//       return thunkAPI.rejectWithValue(error.message);\n//     }\n//   }\n// );\n","import { useEffect, useState } from 'react';\nimport {\n  AmountDate,\n  AmountField,\n  Btn,\n  ButtonAdd,\n  ButtonCancel,\n  CommentField,\n  DateContainer,\n  DateField,\n  IconDate,\n  LabelExpense,\n  LabelIncome,\n  ModalForm,\n  Operation,\n  RadioFieldExpense,\n  RadioFieldIncome,\n  ToggleRb,\n  CloseIcon,\n  Plus,\n  SvgDate,\n  SelectField,\n} from '../ModalAddTransaction/ModalAddTransaction.styled';\nimport { close, minus } from 'assets/media/icons';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { Formik, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addTransaction } from 'redux/transaction/operations';\nimport { getAllTransactionsThunk } from 'redux/finance/finance-operations';\nimport moment from 'moment';\n\nconst initialValues = {\n  transactionDate: new Date(),\n  type: 'EXPENSE',\n  categoryId: '',\n  amount: '',\n  comment: '',\n};\n\nconst schema = yup.object().shape({\n  type: yup.string().required(),\n  amount: yup.number().required('Enter amount'),\n  transactionDate: yup\n    .date()\n    .required()\n    .default(() => new Date()),\n  categoryId: yup.object(),\n  comment: yup.string(),\n});\n\nconst ErrorText = styled.p`\n  color: red;\n`;\n\nconst FromError = ({ name }) => {\n  return (\n    <ErrorMessage\n      name={name}\n      render={message => <ErrorText>{message}</ErrorText>}\n    />\n  );\n};\n\nexport const FormModal = ({ closeModal }) => {\n  const [startDate, setStartDate] = useState(new Date());\n  const [select, setSelect] = useState('');\n  const categoriesName = useSelector(state => state.categories.items);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getAllTransactionsThunk());\n  }, [dispatch]);\n\n  const handleChangeDate = e => {\n    setStartDate(e);\n    console.log('object :>> ', e);\n    const day = e.toISOString(10).slice(0, 10);\n    console.log(day);\n  };\n\n  const handleChange = e => {\n    //console.log(e.target.value);\n  };\n\n  const handleSubmit = (values, { resetForm, ...props }) => {\n    const date = moment(startDate).format('YYYY-MM-DD');\n    values.transactionDate = date;\n\n    // values.transactionDate = values.transactionDate.toISOString().slice(0, 10);\n\n    values.categoryId =\n      values.type === 'EXPENSE'\n        ? select\n        : '063f1132-ba5d-42b4-951d-44011ca46262';\n    values.amount =\n      values.type === 'EXPENSE' ? '-' + values.amount : '' + values.amount;\n    console.log(values);\n    dispatch(addTransaction(values));\n    closeModal();\n    resetForm();\n  };\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      {props => {\n        // console.log(props.values);\n        return (\n          <ModalForm>\n            <Operation onChange={handleChange}>\n              <RadioFieldIncome\n                id=\"income\"\n                type=\"radio\"\n                checked={props.values.type === 'INCOME'}\n                name=\"type\"\n                value=\"INCOME\"\n              />\n              <RadioFieldExpense\n                id=\"expense\"\n                type=\"radio\"\n                checked={props.values.type === 'EXPENSE'}\n                name=\"type\"\n                value=\"EXPENSE\"\n              />\n              <LabelIncome htmlFor=\"income\">Income </LabelIncome>\n              <ToggleRb>\n                <Plus>\n                  <CloseIcon\n                    src={props.values.type === 'INCOME' ? close : minus}\n                    width={20}\n                    height={20}\n                    title=\"Change\"\n                  />\n                </Plus>\n              </ToggleRb>\n              <LabelExpense htmlFor=\"expense\">Expense</LabelExpense>\n            </Operation>\n\n            {props.values.type === 'EXPENSE' && (\n              <div>\n                <SelectField\n                  name=\"categoryId\"\n                  onChange={option => {\n                    setSelect(option.value);\n                  }}\n                  options={categoriesName?.map(({ name, id }) => ({\n                    value: id,\n                    label: name,\n                  }))}\n                  placeholder={'Select a category'}\n                  styles={{\n                    control: (baseStyles, state) => ({\n                      ...baseStyles,\n                      outline: 'none',\n                      border: '1px solid var(--gray-5)',\n                      borderTop: 'none',\n                      borderLeft: 'none',\n                      borderRight: 'none',\n                    }),\n                  }}\n                />\n                <FromError name=\"categoryId\" />\n              </div>\n            )}\n\n            <AmountDate>\n              <label htmlFor=\"amount\"></label>\n              <AmountField type=\"number\" name=\"amount\" placeholder=\"0.00\" />\n              <FromError name=\"amount\" />\n              <DateContainer>\n                <DateField\n                  id=\"transactionDate\"\n                  type=\"date\"\n                  name=\"transactionDate\"\n                  selected={startDate}\n                  onChange={handleChangeDate}\n                  dateFormat=\"dd.MM.yyyy\"\n                />\n                <FromError name=\"transactionDate\" />\n                <IconDate htmlFor=\"transactionDate\">\n                  <SvgDate\n                    width=\"18\"\n                    height=\"20\"\n                    viewBox=\"0 0 18 20\"\n                    fill=\"none\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                  >\n                    <path\n                      d=\"M6 9H4V11H6V9ZM10 9H8V11H10V9ZM14 9H12V11H14V9ZM16 2H15V0H13V2H5V0H3V2H2C0.89 2 0.00999999 2.9 0.00999999 4L0 18C0 19.1 0.89 20 2 20H16C17.1 20 18 19.1 18 18V4C18 2.9 17.1 2 16 2ZM16 18H2V7H16V18Z\"\n                      fill=\"#4A56E2\"\n                    />\n                  </SvgDate>\n                </IconDate>\n              </DateContainer>\n            </AmountDate>\n            <label htmlFor=\"comment\"></label>\n            <div>\n              <CommentField type=\"text\" name=\"comment\" placeholder=\"Comment\" />\n            </div>\n            <Btn>\n              <ButtonAdd type=\"submit\">ADD</ButtonAdd>\n              <ButtonCancel type=\"button\" onClick={closeModal}>\n                CANCEL\n              </ButtonCancel>\n            </Btn>\n          </ModalForm>\n        );\n      }}\n    </Formik>\n  );\n};\n","import { createPortal } from 'react-dom';\nimport { useEffect } from 'react';\nimport {\n  ButtonClose,\n  Modal,\n  ModalContent,\n  ModalHead,\n} from './ModalAddTransaction.styled';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { FormModal } from 'components/FormModal/FormModal';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport const ModalAddTransaction = ({ closeModal }) => {\n  // const [transType, setTransType] = useState('EXPENSE');\n  // console.log(categoriesName.items);\n\n  // закрытие модалки по ескейпу\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        closeModal();\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [closeModal]);\n\n  // закрытие модалки по бекдропу\n  const handleBackdropClose = e => {\n    if (e.currentTarget === e.target) {\n      closeModal();\n    }\n  };\n  // FORM\n\n  return createPortal(\n    <Modal onClick={handleBackdropClose}>\n      <ModalContent>\n        <ModalHead>Add transaction</ModalHead>\n\n        <FormModal closeModal={closeModal} />\n\n        <ButtonClose onClick={closeModal}>\n          <svg\n            version=\"1.1\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"16\"\n            height=\"16\"\n            viewBox=\"0 0 32 32\"\n          >\n            <path\n              fill=\"none\"\n              strokeLinejoin=\"miter\"\n              strokeLinecap=\"butt\"\n              strokeMiterlimit=\"4\"\n              strokeWidth=\"1.7778\"\n              stroke=\"#000\"\n              d=\"M1.778 1.778l28.444 28.444\"\n            ></path>\n            <path\n              fill=\"none\"\n              strokeLinejoin=\"miter\"\n              strokeLinecap=\"butt\"\n              strokeMiterlimit=\"4\"\n              strokeWidth=\"1.7778\"\n              stroke=\"#000\"\n              d=\"M1.778 30.222l28.444-28.444\"\n            ></path>\n          </svg>\n        </ButtonClose>\n      </ModalContent>\n    </Modal>,\n    modalRoot\n  );\n};\n","import styled from '@emotion/styled';\nimport SVG from 'react-inlinesvg';\nimport { device } from 'stylesheet/breakpoints';\n\nexport const Button = styled.button`\n  position: absolute;\n  right: 20px;\n  bottom: 20px;\n  border-radius: 50%;\n  width: 44px;\n  height: 44px;\n  background-color: #24cca7;\n  box-shadow: 0px 6px 15px rgba(36, 204, 167, 0.5);\n  border: none;\n  cursor: pointer;\n\n  @media ${device.tabDesk} {\n    right: 40px;\n    bottom: 40px;\n  }\n`;\nexport const SpanBtn = styled.span`\n  /* position: absolute;\n  top: 22%;\n  left: 25%;\n  width: 20px;\n  height: 20px;\n  padding: 0;\n  margin: 0;\n  color: #ffffff;\n  font-size: 40px;\n  font-weight: 100; \n  text-align: center; */\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const CloseIcon = styled(SVG)`\n  width: 20px;\n  height: 20px;\n  fill: var(--white);\n`;\n","import { ModalAddTransaction } from 'components/ModalAddTransaction/ModalAddTransaction';\nimport { useState } from 'react';\n\nimport { Button, CloseIcon, SpanBtn } from './ButtonAddTransaction.styled';\nimport { close } from 'assets/media/icons';\n\nexport const ButtonAddTransactions = () => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const toggleModal = () => {\n    setIsModalOpen(isModalOpen => !isModalOpen);\n  };\n  return (\n    <>\n      <Button type=\"button\" onClick={toggleModal}>\n        <SpanBtn>\n          <CloseIcon src={close} width={20} height={20} title=\"Close\" />\n        </SpanBtn>\n      </Button>\n      {isModalOpen && <ModalAddTransaction closeModal={toggleModal}\n       />}\n    </>\n  );\n};\n","import { desktop, tablet } from 'constants/responsive';\nimport styled from 'styled-components';\nimport { device } from 'stylesheet/breakpoints';\n\nexport const Container = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100vh;\n  margin: 0 auto;\n  overflow: hidden;\n  background-color: rgba(255, 255, 255, 0.4);\n  backdrop-filter: blur(25px);\n`;\n\nexport const Box = styled.div`\n  width: 100%;\n  margin: 0 auto;\n  padding: 12px 20px;\n\n  @media ${device.tablet} {\n    width: ${tablet}px;\n    padding: 40px 32px;\n  }\n\n  @media ${device.desktop} {\n    width: ${desktop}px;\n    display: flex;\n    padding: 40px 40px 40px 0;\n  }\n`;\n\nexport const AppBarBox = styled.div`\n  margin-bottom: 32px;\n\n  @media ${device.tablet} {\n    display: flex;\n    margin-bottom: 20px;\n  }\n\n  @media ${device.desktop} {\n    height: 100vh;\n    flex-direction: column;\n    padding-left: 16px;\n    padding-right: 69px;\n    border-right: 1px solid #e7e5f2;\n    box-shadow: -1px 0px 0px rgba(0, 0, 0, 0.05),\n      1px 0px 0px rgba(255, 255, 255, 0.6);\n    margin-bottom: 0;\n  }\n`;\n\nexport const NavBox = styled.div`\n  @media ${device.tablet} {\n    margin-right: 32px;\n  }\n\n  @media ${device.desktop} {\n    margin-right: 0;\n    margin-bottom: 32px;\n  }\n`;\n","import { Suspense } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { Balance } from 'components/Balance/Balance';\nimport { Currency } from 'components/Currency/Currency';\nimport { Header } from 'components/Header/Header';\nimport { Loader } from 'components/Loader/Loader';\nimport { Navigation } from 'components/Navigation/Navigation';\nimport { ButtonAddTransactions } from 'components/ButtonAddTransaction/ButtonAddTransaction';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllCategoriesThunk } from 'redux/categories/categories-operations';\nimport { IsDesktopOrTablet } from 'components/Container/Tablet';\nimport { Box, AppBarBox, NavBox } from './Dashboard.styled';\nimport { Container } from './Dashboard.styled';\nimport { getToken } from 'redux/auth/auth-selector';\nimport Login from '../Login';\nconst Dashboard = () => {\n  const dispatch = useDispatch();\n  const token = useSelector(getToken);\n  useEffect(() => {\n    dispatch(getAllCategoriesThunk());\n  }, [dispatch]);\n\n  return token ? (\n    <Container>\n      <Header name=\"Name\" />\n      <Box>\n        <AppBarBox>\n          <NavBox>\n            <Navigation />\n            <IsDesktopOrTablet>\n              <Balance />\n            </IsDesktopOrTablet>\n          </NavBox>\n          <IsDesktopOrTablet>\n            <Currency />\n          </IsDesktopOrTablet>\n        </AppBarBox>\n        <div>\n          <Suspense fallback={<Loader />}>\n            <Outlet />\n          </Suspense>\n        </div>\n        <ButtonAddTransactions />\n      </Box>\n    </Container>\n  ) : (\n    <Login />\n  );\n};\n\nexport default Dashboard;\n","\n\n\nexport const transactionsSelector = (state)  =>  state.finance.transactions;\n   \n  \n\nexport const categoriesSelector = (state)  => state.categories.items;"],"names":["Box","styled","device","Title","Amount","Balance","user","useSelector","getUser","transactions","transactionsSelector","useState","balance","setBalance","afterTransactions","length","balanceAfter","useEffect","toFixed","HeaderBox","tablet","desktop","LinkLogo","NavLink","LogoIcon","SVG","LogoTitle","BoxOut","NameUser","ButtonExit","ExitIcon","ExitModal","ExitModalContent","ExitTitle","BtnYes","BtnNo","modalRoot","document","querySelector","ModalLogout","closeModal","dispatch","useDispatch","handleKeyDown","e","code","window","addEventListener","removeEventListener","createPortal","onClick","currentTarget","target","type","logOut","Header","out","setLogOut","name","toggleModal","src","logo","className","width","height","title","Mobile","logoText","Tablet","Desktop","username","exit","StyledLink","Text","Icon","CurrencyIcon","Navigation","to","home","homeS","statistic","statS","currency","Modal","ModalContent","ModalHead","ModalForm","Form","Operation","LabelIncome","LabelExpense","ToggleRb","Plus","RadioFieldIncome","Field","RadioFieldExpense","CloseIcon","ButtonClose","Btn","ButtonAdd","ButtonCancel","DateContainer","IconDate","SvgDate","AmountDate","SelectField","Select","AmountField","DateField","DatePicker","CommentField","addTransaction","createAsyncThunk","_","thunkAPI","axios","res","data","rejectWithValue","message","transaction","initialValues","transactionDate","Date","categoryId","amount","comment","schema","yup","shape","required","default","ErrorText","FromError","render","FormModal","startDate","setStartDate","select","setSelect","categoriesName","state","categories","items","getAllTransactionsThunk","handleChangeDate","console","log","day","toISOString","slice","handleChange","validationSchema","onSubmit","values","resetForm","date","moment","format","props","onChange","id","checked","value","htmlFor","close","minus","option","options","map","label","placeholder","styles","control","baseStyles","outline","border","borderTop","borderLeft","borderRight","selected","dateFormat","viewBox","fill","xmlns","d","ModalAddTransaction","version","strokeLinejoin","strokeLinecap","strokeMiterlimit","strokeWidth","stroke","Button","SpanBtn","ButtonAddTransactions","isModalOpen","setIsModalOpen","Container","AppBarBox","NavBox","token","getToken","getAllCategoriesThunk","Currency","Suspense","fallback","Loader","Login","finance","categoriesSelector"],"sourceRoot":""}