{"version":3,"file":"static/js/799.84026764.chunk.js","mappings":"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","sources":["components/Balance/Balance.styled.js","components/Balance/Balance.jsx","components/FormModal/FormModal.jsx","components/Table/Table.styled.js","components/EditTransactionModal/EditTransactionModal.styled.js","components/EditTransactionModal/EditTransactionModal.jsx","components/Table/Table.jsx","components/HomeTab/HomeTab.jsx","components/Modal/Modal.styled.js","components/Modal/Modal.jsx","components/ModalAddTransaction/ModalAddTransaction.styled.js","redux/selectors.js"],"sourcesContent":["import styled from 'styled-components';\nimport { device } from 'stylesheet/breakpoints';\n\nexport const Box = styled.div`\n  width: 280px;\n  padding: 8px 32px;\n  border-radius: 30px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 32px;\n\n  background-color: var(--white);\n\n  @media ${device.tablet} {\n    width: 336px;\n  }\n\n  @media ${device.tabDesk} {\n    padding-left: 40px;\n    padding-right: 40px;\n    margin: 0;\n  }\n\n  @media ${device.desktop} {\n    width: 395px;\n  }\n`;\n\nexport const Title = styled.h2`\n  font-family: 'Circe';\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 1.3;\n  text-transform: uppercase;\n\n  margin-bottom: 11px;\n\n  color: var(--gray-3);\n`;\n\nexport const Amount = styled.p`\n  font-family: 'Poppins-Regular';\n  font-weight: 400;\n  font-size: 30px;\n  line-height: 1.5;\n  align-items: center;\n\n  color: var(--black);\n`;\n","import { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { getUser } from 'redux/auth/auth-selector';\nimport { transactionsSelector } from 'redux/selectors';\nimport { Box, Title, Amount } from './Balance.styled';\n\nexport const Balance = () => {\n  const user = useSelector(getUser);\n  const transactions = useSelector(transactionsSelector);\n  const [balance, setBalance] = useState(user.balance);\n  const afterTransactions = transactions[transactions.length - 1]?.balanceAfter;\n\n  useEffect(() => {\n    if (afterTransactions) {\n      setBalance(afterTransactions);\n    }\n  }, [afterTransactions]);\n\n  return (\n    <Box>\n      <Title>Your balance</Title>\n      <Amount>&#8372; {balance.toFixed(2)}</Amount>\n    </Box>\n  );\n};\n","import { useState } from 'react';\nimport {\n  AmountDate,\n  AmountField,\n  Btn,\n  ButtonAdd,\n  ButtonCancel,\n  CommentField,\n  DateContainer,\n  DateField,\n  IconDate,\n  LabelExpense,\n  LabelIncome,\n  ModalForm,\n  Operation,\n  RadioFieldExpense,\n  RadioFieldIncome,\n  ToggleRb,\n  CloseIcon,\n  Plus,\n  SvgDate,\n  SelectField,\n} from '../ModalAddTransaction/ModalAddTransaction.styled';\nimport { close, minus } from 'assets/media/icons';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { Formik, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport styled from 'styled-components';\nimport { useSelector } from 'react-redux';\n\nimport moment from 'moment';\n\nconst initialValues = {\n  transactionDate: new Date(),\n  type: 'EXPENSE',\n  categoryId: '',\n  amount: '',\n  comment: '',\n};\n\nconst schema = yup.object().shape({\n  type: yup.string().required(),\n  amount: yup.number().required('Enter amount'),\n  transactionDate: yup\n    .date()\n    .required()\n    .default(() => new Date()),\n  categoryId: yup.object(),\n  comment: yup.string(),\n});\n\nconst ErrorText = styled.p`\n  color: red;\n`;\n\nconst FromError = ({ name }) => {\n  return (\n    <ErrorMessage\n      name={name}\n      render={message => <ErrorText>{message}</ErrorText>}\n    />\n  );\n};\n\nexport const FormModal = ({ closeModal, submitHandler, initial = initialValues }) => {\n  console.log('initial',initial)\n  const [startDate, setStartDate] = useState(initial.transactionDate);\n  const [select, setSelect] = useState('');\n  const categoriesName = useSelector(state => state.categories.items);\n\n\n  const handleSubmit = (values, { resetForm, ...props }) => {\n    const date = moment(startDate).format('YYYY-MM-DD');\n    values.transactionDate = date;\n\n    // values.transactionDate = values.transactionDate.toISOString().slice(0, 10);\n\n    values.categoryId =\n      values.type === 'EXPENSE'\n        ? select\n        : '063f1132-ba5d-42b4-951d-44011ca46262';\n    values.amount =\n      values.type === 'EXPENSE' ? '-' + values.amount : '' + values.amount;\n    console.log(values);\n    submitHandler(values);\n    // dispatch(addTransaction(values));\n    // closeModal();\n    //resetForm();\n  };\n  return (\n    <Formik\n      initialValues={initial}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      {props => {\n        // console.log(props.values);\n        return (\n          <ModalForm>\n            <Operation>\n              <RadioFieldIncome\n                id=\"income\"\n                type=\"radio\"\n                checked={props.values.type === 'INCOME'}\n                name=\"type\"\n                value=\"INCOME\"\n              />\n              <RadioFieldExpense\n                id=\"expense\"\n                type=\"radio\"\n                checked={props.values.type === 'EXPENSE'}\n                name=\"type\"\n                value=\"EXPENSE\"\n              />\n              <LabelIncome htmlFor=\"income\">Income </LabelIncome>\n              <ToggleRb>\n                <Plus>\n                  <CloseIcon\n                    src={props.values.type === 'INCOME' ? close : minus}\n                    width={20}\n                    height={20}\n                    title=\"Change\"\n                  />\n                </Plus>\n              </ToggleRb>\n              <LabelExpense htmlFor=\"expense\">Expense</LabelExpense>\n            </Operation>\n\n            {props.values.type === 'EXPENSE' && (\n              <div>\n                <SelectField\n                  name=\"categoryId\"\n                  onChange={option => {\n                    setSelect(option.value);\n                  }}\n                  options={categoriesName?.map(({ name, id }) => ({\n                    value: id,\n                    label: name,\n                  }))}\n                  placeholder={'Select a category'}\n                  styles={{\n                    control: (baseStyles, state) => ({\n                      ...baseStyles,\n                      outline: 'none',\n                      border: '1px solid var(--gray-5)',\n                      borderTop: 'none',\n                      borderLeft: 'none',\n                      borderRight: 'none',\n                    }),\n                  }}\n                />\n                <FromError name=\"categoryId\" />\n              </div>\n            )}\n\n            <AmountDate>\n              <label htmlFor=\"amount\"></label>\n              <AmountField type=\"number\" name=\"amount\" placeholder=\"0.00\" />\n              <FromError name=\"amount\" />\n              <DateContainer>\n                <DateField\n                  id=\"transactionDate\"\n                  type=\"date\"\n                  name=\"transactionDate\"\n                  selected={startDate}\n                  onChange={setStartDate}\n                  dateFormat=\"dd.MM.yyyy\"\n                />\n                <FromError name=\"transactionDate\" />\n                <IconDate htmlFor=\"transactionDate\">\n                  <SvgDate\n                    width=\"18\"\n                    height=\"20\"\n                    viewBox=\"0 0 18 20\"\n                    fill=\"none\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                  >\n                    <path\n                      d=\"M6 9H4V11H6V9ZM10 9H8V11H10V9ZM14 9H12V11H14V9ZM16 2H15V0H13V2H5V0H3V2H2C0.89 2 0.00999999 2.9 0.00999999 4L0 18C0 19.1 0.89 20 2 20H16C17.1 20 18 19.1 18 18V4C18 2.9 17.1 2 16 2ZM16 18H2V7H16V18Z\"\n                      fill=\"#4A56E2\"\n                    />\n                  </SvgDate>\n                </IconDate>\n              </DateContainer>\n            </AmountDate>\n            <label htmlFor=\"comment\"></label>\n            <div>\n              <CommentField type=\"text\" name=\"comment\" placeholder=\"Comment\" />\n            </div>\n            <Btn>\n              <ButtonAdd type=\"submit\">ADD</ButtonAdd>\n              <ButtonCancel type=\"button\" onClick={closeModal}>\n                CANCEL\n              </ButtonCancel>\n            </Btn>\n          </ModalForm>\n        );\n      }}\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\nimport { device } from 'stylesheet/breakpoints';\n\nexport const Section = styled.section`\n  @media ${device.tablet} {\n    max-height: calc(100vh - 340px);\n    overflow-y: auto;\n  }\n  @media ${device.desktop} {\n    padding-top: 46px;\n    padding-left: 69px;\n    max-height: calc(100vh - 130px);\n    overflow-y: auto;\n  }\n`;\n\nexport const StyledTable = styled.table`\n  width: 688px; // 704\n  border-spacing: 0;\n\n  @media ${device.desktop} {\n    width: 715px;\n  }\n`;\n\nexport const THead = styled.thead`\n  font-family: 'Circe';\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 1.5;\n\n  background-color: var(--white);\n`;\n\nexport const StyledTh = styled.th`\n  padding-top: 16px;\n  padding-bottom: 16px;\n  padding-left: 20px;\n\n  text-align: left;\n\n  &:first-child {\n    border-top-left-radius: 30px;\n    border-bottom-left-radius: 30px;\n  }\n`;\n\nexport const ThRight = styled.th`\n  padding-top: 16px;\n  padding-bottom: 16px;\n  padding-right: 20px;\n\n  text-align: right;\n\n  &:last-child {\n    border-top-right-radius: 30px;\n    border-bottom-right-radius: 30px;\n  }\n`;\n\nexport const Tbody = styled.tbody`\n  font-family: 'Circe';\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 1.5;\n`;\n\nexport const StyledTd = styled.td`\n  padding-top: 16px;\n  padding-bottom: 16px;\n  padding-left: 20px;\n  border-bottom: 1px solid #dcdcdf;\n  box-shadow: 0px 1px 0px rgba(255, 255, 255, 0.6);\n\n  /* text-align: right; */\n`;\n\nexport const TypeTd = styled.td`\n  padding-top: 16px;\n  padding-bottom: 16px;\n  border-bottom: 1px solid #dcdcdf;\n  box-shadow: 0px 1px 0px rgba(255, 255, 255, 0.6);\n\n  text-align: center;\n`;\n\nexport const TSum = styled.td`\n  padding-top: 16px;\n  padding-right: 20px;\n  padding-bottom: 16px;\n  border-bottom: 1px solid #dcdcdf;\n  box-shadow: 0px 1px 0px rgba(255, 255, 255, 0.6);\n\n  text-align: right;\n\n  color: ${props =>\n    props.income ? 'var(--btn-bg-color)' : 'var(--error-color)'};\n`;\n\nexport const BalanceTd = styled.td`\n  padding-top: 16px;\n  padding-right: 20px;\n  padding-bottom: 16px;\n  border-bottom: 1px solid #dcdcdf;\n  box-shadow: 0px 1px 0px rgba(255, 255, 255, 0.6);\n\n  text-align: right;\n`;\n\nexport const StyledDelButton = styled.button`\n  border: none;\n  display: inline-flex;\n  align-items: center;\n`;\n\nexport const StyledSpan = styled.span`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n`;\n\nexport const List = styled.ul`\n  width: 280px;\n  background-color: var(--white);\n  border-radius: 10px;\n  border-left: 5px solid\n    ${props => (props.income ? 'var(--btn-bg-color)' : 'var(--error-color)')};\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 8px;\n\n  list-style: none;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  padding-top: 12px;\n  padding-left: 20px;\n  padding-bottom: 8px;\n  padding-right: 20px;\n\n  font-family: 'Circe';\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 1.5;\n\n  &:not(:last-child) {\n    border-bottom: 1px solid #dcdcdf;\n    /* transform: matrix(0, 1, 1, 0, 0, 0); */\n  }\n`;\n\nexport const ListText = styled.span`\n  font-family: 'Circe';\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 1.5;\n`;\n\nexport const ListSum = styled.span`\n  color: ${props =>\n    props.income ? 'var(--btn-bg-color)' : 'var(--error-color)'};\n`;\n","import styled from 'styled-components';\n\n// const colorActiveLable = 'green';\n\nexport const ModalHead = styled.h1`\n  margin-top: 20px;\n  margin-bottom: 40px;\n  font-family: 'Poppins Regular';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 30px;\n  line-height: 1.5;\n\n  color: var(--black);\n`;\n\n\nexport const ButtonClose = styled.button`\n  position: absolute;\n  top: 0;\n  right: 0;\n  cursor: pointer;\n  background-color: var(--white);\n  border: none;\n  margin: 20px;\n`;\n","import { useDispatch } from 'react-redux';\nimport {\n  ButtonClose,\n  ModalHead,\n} from './EditTransactionModal.styled';\nimport { editTransactionThunk } from 'redux/finance/finance-operations';\nimport { FormModal } from 'components/FormModal/FormModal';\nimport { Modal } from 'components/Modal/Modal';\nimport moment from 'moment';\n\n\nexport const EditTransactionModal = ({ closeModal, transactionData }) => {\n  const dispatch = useDispatch();\n  //transactionData.transactionDate = moment(transactionData.transactionDate).toDate();\n  console.log(' moment(transactionData.transactionDate).toDate()', moment(transactionData.transactionDate).toDate())\n\n  const handlerSubmit = (values) => {\n    dispatch(editTransactionThunk(values));\n    closeModal();\n  }\n\n  return <Modal>\n    <ModalHead>Edit transaction</ModalHead>\n\n    <FormModal closeModal={closeModal} initial={{...transactionData,transactionDate: moment(transactionData.transactionDate).toDate()}} submitHandler={handlerSubmit} />\n\n    <ButtonClose onClick={closeModal}>\n      <svg\n        version=\"1.1\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"16\"\n        height=\"16\"\n        viewBox=\"0 0 32 32\"\n      >\n        <path\n          fill=\"none\"\n          strokeLinejoin=\"miter\"\n          strokeLinecap=\"butt\"\n          strokeMiterlimit=\"4\"\n          strokeWidth=\"1.7778\"\n          stroke=\"#000\"\n          d=\"M1.778 1.778l28.444 28.444\"\n        ></path>\n        <path\n          fill=\"none\"\n          strokeLinejoin=\"miter\"\n          strokeLinecap=\"butt\"\n          strokeMiterlimit=\"4\"\n          strokeWidth=\"1.7778\"\n          stroke=\"#000\"\n          d=\"M1.778 30.222l28.444-28.444\"\n        ></path>\n      </svg>\n    </ButtonClose>\n  </Modal>;\n};\n\n\n// const handleSubmit = (values, { resetForm }) => {\n//   const date = moment(startDate).format('YYYY-MM-DD');\n\n//   dispatch(editTransactionThunk({ id: transactionData.id, ...values, date }));\n//   closeModal();\n// };\n\n// const initialValues = {\n//   operation: transactionData.type,\n//   transaction: transactionData.categoryId,\n//   sum: transactionData.amount,\n//   date: transactionData.transactionDate,\n//   comment: transactionData.comment,\n// };\n\n// const schema = yup.object().shape({\n//   operation: yup.string().required(),\n//   sum: yup.number().required('Enter amount'),\n//   date: yup\n//     .date()\n//     .required()\n//     .default(() => new Date()),\n//   transaction: yup.string().required('Select transaction type!'),\n//   comment: yup.string(),\n// });","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { BsFillTrashFill, BsPencilSquare } from 'react-icons/bs';\nimport { Mobile } from 'components/Container/Mobile';\nimport { IsDesktopOrTablet } from 'components/Container/Tablet';\n\nimport {\n  StyledDelButton,\n  StyledSpan,\n  Section,\n  StyledTable,\n  StyledTd,\n  StyledTh,\n  ThRight,\n  THead,\n  Tbody,\n  TypeTd,\n  TSum,\n  BalanceTd,\n  List,\n  ListItem,\n  ListText,\n  ListSum,\n} from './Table.styled';\n\nimport moment from 'moment';\nimport {\n  deleteTransactionThunk,\n  getAllTransactionsThunk,\n} from 'redux/finance/finance-operations';\nimport { useEffect } from 'react';\nimport { categoriesSelector, transactionsSelector } from 'redux/selectors';\nimport { sortByDate } from 'helpers/sorters';\nimport { EditTransactionModal } from 'components/EditTransactionModal/EditTransactionModal';\n\nexport default function Table() {\n  const [editTransactionId, setEditTransactionId] = useState('');\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  const openModal = itemId => {\n    setEditTransactionId(itemId);\n    setIsModalOpen(true);\n  };\n\n  const transactions = useSelector(transactionsSelector);\n  const sortedTransactions = [...transactions].sort(sortByDate);\n\n  const categories = useSelector(categoriesSelector);\n\n  const searchCategoryName = id => {\n    const category = categories.find(item => id === item.id);\n    console.log('category', category);\n    return category?.name;\n  };\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getAllTransactionsThunk());\n  }, [dispatch]);\n\n  const deleteTransaction = itemId => {\n    dispatch(deleteTransactionThunk(itemId));\n  };\n\n  return (\n    <Section>\n      <IsDesktopOrTablet>\n        <StyledTable>\n          <THead>\n            <tr>\n              <StyledTh>Date</StyledTh>\n              <StyledTh>Type</StyledTh>\n              <StyledTh>Category</StyledTh>\n              <StyledTh>Comment</StyledTh>\n              <ThRight>Sum</ThRight>\n              <ThRight>Balance</ThRight>\n            </tr>\n          </THead>\n          <Tbody>\n            {sortedTransactions.map(item => (\n              <tr key={item.id}>\n                <StyledTd>\n                  {moment(item.transactionDate).format('DD.MM.YY')}\n                </StyledTd>\n                <TypeTd>{item.type === 'INCOME' ? '+' : '-'}</TypeTd>\n                <StyledTd>{searchCategoryName(item.categoryId)}</StyledTd>\n                <StyledTd>{item.comment}</StyledTd>\n                <TSum income={item.type === 'INCOME'}>\n                  {item.amount.toFixed(2)}\n                </TSum>\n                <BalanceTd>\n                  <StyledSpan>\n                    {item.balanceAfter.toFixed(2)}{' '}\n                    <StyledDelButton\n                      type=\"button\"\n                      onClick={() => deleteTransaction(item.id)}\n                    >\n                      <BsFillTrashFill color=\"#FF6596\" />\n                    </StyledDelButton>\n                    <StyledDelButton onClick={() => openModal(item.id)}>\n                      <BsPencilSquare color=\"#24CCA7\" />\n                    </StyledDelButton>\n                  </StyledSpan>\n                </BalanceTd>\n              </tr>\n            ))}\n          </Tbody>\n        </StyledTable>\n      </IsDesktopOrTablet>\n      <Mobile>\n        {sortedTransactions.map(item => (\n          <List key={item.id}>\n            <ListItem>\n              Date\n              <ListText>\n                {moment(item.transactionDate).format('DD.MM.YY')}\n              </ListText>\n            </ListItem>\n            <ListItem>\n              Type <ListText>{item.type === 'INCOME' ? '+' : '-'}</ListText>\n            </ListItem>\n            <ListItem>\n              Category{' '}\n              <ListText>{searchCategoryName(item.categoryId)}</ListText>\n            </ListItem>\n            <ListItem>\n              Comment <ListText>{item.comment}</ListText>\n            </ListItem>\n            <ListItem income={item.type === 'INCOME'}>\n              Sum <ListSum>{item.amount.toFixed(2)}</ListSum>\n            </ListItem>\n            <ListItem>\n              Balance <ListText>{item.balanceAfter.toFixed(2)}</ListText>\n            </ListItem>\n          </List>\n        ))}\n      </Mobile>\n\n      {isModalOpen && (\n        <EditTransactionModal\n          closeModal={closeModal}\n          transactionData={transactions.find(\n            item => item.id === editTransactionId\n          )}\n        />\n      )}\n    </Section>\n  );\n}\n","import Table from 'components/Table/Table';\nimport { Balance } from 'components/Balance/Balance';\nimport { Mobile } from 'components/Container/Mobile';\n\nconst HomeTab = () => {\n  return (\n    <>\n      <Mobile>\n        <Balance />\n      </Mobile>\n      <Table />\n    </>\n  );\n};\n\nexport default HomeTab;\n","import styled from 'styled-components';\nimport { device } from 'stylesheet/breakpoints';\n\nexport const ModalBox = styled.div`\n  height: 100vh;\n  width: 100vw;\n  background-color: rgba(0, 0, 0, 0.5);\n  position: fixed;\n  top: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  text-align: center;\n  justify-content: center;\n  animation: blowUpModal 0.5s cubic-bezier(0.165, 0.84, 0.44, 1) forwards;\n`;\n\nexport const ModalContent = styled.div`\n  position: relative;\n  padding: 20px;\n  width: 540px;\n  height: 600px;\n  border-radius: 20px;\n  background-color: var(--white);\n  @media ${device.mobile} {\n    width: 320px;\n  }\n`;","import { createPortal } from 'react-dom';\nimport { useEffect } from 'react';\nimport {\n    ModalBox,\n    ModalContent,\n} from './Modal.styled';\nconst modalRoot = document.querySelector('#modal-root');\nexport const Modal = ({ closeModal, children }) => {\n\n    // закрытие модалки по ескейпу\n    useEffect(() => {\n        const handleKeyDown = e => {\n            if (e.code === 'Escape') {\n                closeModal();\n            }\n        };\n        window.addEventListener('keydown', handleKeyDown);\n\n        return () => {\n            window.removeEventListener('keydown', handleKeyDown);\n        };\n    }, [closeModal]);\n\n    // закрытие модалки по бекдропу\n    const handleBackdropClose = e => {\n        if (e.currentTarget === e.target) {\n            closeModal();\n        }\n    };\n\n    return createPortal(\n        <ModalBox onClick={handleBackdropClose}>\n            <ModalContent>\n                {children}\n            </ModalContent>\n        </ModalBox>,\n        modalRoot\n    );\n};","import styled from 'styled-components';\nimport { Form, Field } from 'formik';\nimport DatePicker from 'react-datepicker';\nimport SVG from 'react-inlinesvg';\nimport Select from 'react-select';\nimport { device } from 'stylesheet/breakpoints';\n\n// const colorActiveLable = 'green';\n\n\n\n\n\nexport const ModalHead = styled.h1`\n  margin-top: 20px;\n  margin-bottom: 40px;\n  font-family: 'Poppins Regular';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 30px;\n  line-height: 1.5;\n\n  color: var(--black);\n  @media ${device.mobile} {\n    margin-top: 0;\n    margin-bottom: 20px;\n  }\n`;\n\n// FORM RADIOBUTTON\n\nexport const ModalForm = styled(Form)`\n  display: block;\n  @media ${device.mobile} {\n    width: 280px;\n  }\n`;\n\nexport const Operation = styled.div`\n  display: flex;\n  justify-content: center;\n  text-align: center;\n  align-items: center;\n  font-family: 'CirceBold', sans-serif;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 1.5;\n`;\n\nexport const LabelIncome = styled.label`\n  margin-right: 20px;\n  position: relative;\n  cursor: pointer;\n  color: var(--gray-5);\n  transition: 500ms;\n  text-align: right;\n\n  &:hover,\n  :active {\n    color: var(--btn-bg-color);\n  }\n`;\n\nexport const LabelExpense = styled.label`\n  color: var(--gray-5);\n  margin-left: 20px;\n  text-align: right;\n  position: relative;\n  cursor: pointer;\n  text-align: left;\n\n  &:hover,\n  :active {\n    color: var(--error-color);\n  }\n`;\n\n// border: 1px solid #e0e0e0;\n//   width: 80px;\n//   height: 40px;\n//   border-radius: 30px;\n\nexport const ToggleRb = styled.div`\n  position: relative;\n  height: 40px;\n  width: 80px;\n  background-color: var(--white);\n  border: 1px solid var(--gray-5);\n  border-radius: 30px;\n  transition: all 500ms;\n`;\n\nexport const Plus = styled.div`\n  position: absolute;\n  width: 44px;\n  height: 44px;\n  background-color: var(--btn-bg-color);\n  box-shadow: 0px 6px 15px rgba(36, 204, 167, 0.5);\n  top: -3px;\n  left: 0;\n  border-radius: 50%;\n  transition: all 500ms;\n  z-index: 4;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const RadioFieldIncome = styled(Field)`\n  display: none;\n\n  &:checked ~ ${LabelIncome} {\n    color: var(--btn-bg-color);\n  }\n`;\n\nexport const RadioFieldExpense = styled(Field)`\n  display: none;\n\n  &:checked {\n    ~ ${LabelExpense} {\n      color: var(--error-color);\n    }\n    ~ ${ToggleRb} > ${Plus} {\n      left: 40px;\n      background-color: var(--error-color);\n      box-shadow: 0px 6px 15px rgba(255, 101, 150, 0.5);\n    }\n  }\n`;\n\nexport const CloseIcon = styled(SVG)`\n  left: 20%;\n  width: 20px;\n  height: 20px;\n  fill: var(--white);\n`;\n\n// Toggle Changes\n\n// export const Marker = styled.div`\n//   position: relative;\n//   background-color: #e0e0e0;\n//   width: 16px;\n//   height: 16px;\n//   border-radius: 50%;\n//   z-index: 2;\n//   pointer-events: none;\n//   transform: translateX(1px);\n//   transition: transform 250ms linear;\n// `;\n\n// export const RadioButton = styled.div`\n//   display: flex;\n//   justify-content: space-around;\n//   text-align: center;\n//   align-items: center;\n//   border-radius: 30px;\n//   width: 80px;\n//   height: 40px;\n//   border: 1px solid #e0e0e0;\n// `;\n\n// BUTTON\n\nexport const ButtonClose = styled.button`\n  position: absolute;\n  top: 0;\n  right: 0;\n  cursor: pointer;\n  background-color: var(--white);\n  border: none;\n  margin: 20px;\n  @media ${device.mobile} {\n    display: none;\n  }\n`;\n\nexport const Btn = styled.div`\n  display: block;\n  /* font-family: 'Circe', sans-serif;\n  font-style: normal;\n  font-weight: 400;\n  font-size: 18px;\n  line-height: 1.5;\n  text-align: center;\n  letter-spacing: 0.3em;\n  text-transform: uppercase; */\n`;\n\nexport const ButtonAdd = styled.button`\n  width: 300px;\n  height: 50px;\n  background-color: var(--btn-bg-color);\n  color: var(--white);\n  border: none;\n  border-radius: 20px;\n  margin-bottom: 20px;\n  cursor: pointer;\n  transition: 1000ms;\n\n  &:hover {\n    background-color: var(--white);\n    color: var(--btn-bg-color);\n    transition: 1000ms;\n    border: 1px solid var(--btn-bg-color);\n  }\n  @media ${device.mobile} {\n    width: 280px;\n  }\n`;\n\nexport const ButtonCancel = styled.button`\n  width: 300px;\n  height: 50px;\n  background-color: var(--white);\n  border: 1px solid var(--active-bg-color);\n  border-radius: 20px;\n  color: var(--active-bg-color);\n  cursor: pointer;\n  transition: 1000ms;\n  &:hover {\n    background-color: var(--active-bg-color);\n    color: var(--white);\n    transition: 1000ms;\n  }\n  @media ${device.mobile} {\n    width: 280px;\n  }\n`;\n\nexport const DateContainer = styled.div`\n  position: relative;\n`;\n\nexport const IconDate = styled.label`\n  position: absolute;\n  top: 60%;\n  left: 80%;\n  cursor: pointer;\n  @media ${device.mobile} {\n    left: 95%;\n    top: 20%;\n  }\n`;\n\nexport const SvgDate = styled.svg`\n  transition: 500ms;\n  transform: scale(1);\n  :hover {\n    box-shadow: 0px 0px 23px -3px rgba(0, 0, 0, 0.75);\n    transition: 500ms;\n    transform: scale(1.1);\n  }\n`;\n\nexport const AmountDate = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  @media ${device.mobile} {\n    display: block;\n  }\n`;\n// Field\n\nexport const SelectField = styled(Select)`\n  display: block;\n  outline: none;\n  margin-top: 40px;\n  margin-left: 50px;\n  margin-right: 50px;\n  @media ${device.mobile} {\n    width: 280px;\n    margin-left: 0;\n    margin-right: 0;\n  }\n`;\n\nexport const AmountField = styled(Field)`\n  position: relative;\n  padding: 8px;\n  margin-top: 40px;\n  text-align: center;\n  border: 1px solid var(--gray-5);\n  border-top: none;\n  border-left: none;\n  border-right: none;\n  outline: none;\n  &::placeholder {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    text-align: center;\n    padding-bottom: 8px;\n  }\n  @media ${device.mobile} {\n    width: 280px;\n    margin-bottom: 30px;\n  }\n`;\n\nexport const DateField = styled(DatePicker)`\n  outline: none;\n  padding: 8px;\n  margin-left: 35px;\n  margin-top: 40px;\n  border: 1px solid var(--gray-5);\n  border-top: none;\n  border-left: none;\n  border-right: none;\n  @media ${device.mobile} {\n    width: 280px;\n    margin-top: 0;\n  }\n`;\n\nexport const CommentField = styled(Field)`\n  outline: none;\n  padding: 8px;\n  margin-top: 40px;\n  margin-bottom: 40px;\n  border: 1px solid var(--gray-5);\n  border-top: none;\n  border-left: none;\n  border-right: none;\n  width: 400px;\n\n  font-weight: 400;\n  font-size: 18px;\n  line-height: 27px;\n  &::placeholder {\n    color: var(--gray-4);\n  }\n  @media ${device.mobile} {\n    width: 280px;\n    margin-top: 30px;\n    margin-bottom: 30px;\n  }\n`;\n","\n\n\nexport const transactionsSelector = (state)  =>  state.finance.transactions;\n   \n  \n\nexport const categoriesSelector = (state)  => state.categories.items;"],"names":["Box","styled","device","Title","Amount","Balance","user","useSelector","getUser","transactions","transactionsSelector","useState","balance","setBalance","afterTransactions","length","balanceAfter","useEffect","toFixed","initialValues","transactionDate","Date","type","categoryId","amount","comment","schema","yup","shape","required","default","ErrorText","FromError","name","render","message","FormModal","closeModal","submitHandler","initial","console","log","startDate","setStartDate","select","setSelect","categoriesName","state","categories","items","validationSchema","onSubmit","values","resetForm","date","moment","format","props","id","checked","value","htmlFor","src","close","minus","width","height","title","onChange","option","options","map","label","placeholder","styles","control","baseStyles","outline","border","borderTop","borderLeft","borderRight","selected","dateFormat","viewBox","fill","xmlns","d","onClick","Section","StyledTable","THead","StyledTh","ThRight","Tbody","StyledTd","TypeTd","TSum","income","BalanceTd","StyledDelButton","StyledSpan","List","ListItem","ListText","ListSum","ModalHead","ButtonClose","EditTransactionModal","transactionData","dispatch","useDispatch","toDate","Modal","editTransactionThunk","version","strokeLinejoin","strokeLinecap","strokeMiterlimit","strokeWidth","stroke","Table","editTransactionId","setEditTransactionId","isModalOpen","setIsModalOpen","sortedTransactions","sort","sortByDate","categoriesSelector","searchCategoryName","category","find","item","getAllTransactionsThunk","itemId","deleteTransactionThunk","color","Mobile","ModalBox","ModalContent","modalRoot","document","querySelector","children","handleKeyDown","e","code","window","addEventListener","removeEventListener","createPortal","currentTarget","target","ModalForm","Form","Operation","LabelIncome","LabelExpense","ToggleRb","Plus","RadioFieldIncome","Field","RadioFieldExpense","CloseIcon","SVG","Btn","ButtonAdd","ButtonCancel","DateContainer","IconDate","SvgDate","AmountDate","SelectField","Select","AmountField","DateField","DatePicker","CommentField","finance"],"sourceRoot":""}