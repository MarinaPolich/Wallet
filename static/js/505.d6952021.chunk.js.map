{"version":3,"file":"static/js/505.d6952021.chunk.js","mappings":"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","sources":["components/Balance/Balance.styled.js","components/Balance/Balance.jsx","components/Container/Mobile.jsx","components/Header/Header.styled.js","components/ModalLogout/ModalLogout.styled.js","components/ModalLogout/ModalLogout.jsx","components/Header/Header.jsx","components/Navigation/Navigation.styled.js","components/Navigation/Navigation.jsx","components/ModalAddTransaction/ModalAddTransaction.styled.js","redux/transaction/operations.js","components/ModalAddTransaction/ModalAddTransaction.jsx","components/ButtonAddTransaction/ButtonAddTransaction.styled.js","components/ButtonAddTransaction/ButtonAddTransaction.jsx","pages/Dashboard/Dashboard.styled.js","pages/Dashboard/Dashboard.jsx","redux/selectors.js"],"sourcesContent":["import styled from 'styled-components';\nimport { device } from 'stylesheet/breakpoints';\n\nexport const Box = styled.div`\n  width: 280px;\n  padding: 8px 32px;\n  border-radius: 30px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 32px;\n\n  background-color: var(--white);\n\n  @media ${device.tablet} {\n    width: 336px;\n  }\n\n  @media ${device.tabDesk} {\n    padding-left: 40px;\n    padding-right: 40px;\n    margin: 0;\n  }\n\n  @media ${device.desktop} {\n    width: 395px;\n  }\n`;\n\nexport const Title = styled.h2`\n  font-family: 'Circe';\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 1.3;\n  text-transform: uppercase;\n\n  margin-bottom: 11px;\n\n  color: var(--gray-3);\n`;\n\nexport const Amount = styled.p`\n  font-family: 'Poppins-Regular';\n  font-weight: 400;\n  font-size: 30px;\n  line-height: 1.5;\n  align-items: center;\n\n  color: var(--black);\n`;\n","import { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { getUser } from 'redux/auth/auth-selector';\nimport { transactionsSelector } from 'redux/selectors';\nimport { Box, Title, Amount } from './Balance.styled';\n\nexport const Balance = () => {\n  const user = useSelector(getUser);\n  const transactions = useSelector(transactionsSelector);\n  const [balance, setBalance] = useState(user.balance);\n  const afterTransactions = transactions[transactions.length - 1]?.balanceAfter;\n\n  useEffect(() => {\n    if (afterTransactions) {\n      setBalance(afterTransactions);\n    }\n  }, [afterTransactions]);\n\n  return (\n    <Box>\n      <Title>Your balance</Title>\n      <Amount>&#8372; {balance.toFixed(2)}</Amount>\n    </Box>\n  );\n};\n","import { useMobile } from 'hooks/useMobile';\n\nexport const Mobile = ({ children }) => (useMobile() ? children : null);\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\nimport { device } from 'stylesheet/breakpoints';\nimport { desktop, tablet } from 'constants/responsive';\n\nexport const Box = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n  margin: 0 auto;\n  background-color: var(--white);\n`;\n\nexport const HeaderBox = styled.header`\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  padding: 15px 20px;\n\n  @media ${device.tablet} {\n    width: ${tablet}px;\n    padding: 20px 32px;\n  }\n\n  @media ${device.desktop} {\n    width: ${desktop}px;\n    padding: 20px 16px;\n  }\n`;\n\nexport const LinkLogo = styled(NavLink)`\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n  cursor: pointer;\n`;\n\nexport const LogoIcon = styled(SVG)`\n  width: 30px;\n  height: 30px;\n  margin-right: 16px;\n\n  @media ${device.tabDesk} {\n    width: 40px;\n    height: 40px;\n    margin-right: 20px;\n  }\n`;\n\nexport const LogoTitle = styled.h1`\n  color: var(--black);\n  font-family: 'Poppins Bold';\n  font-weight: 700;\n  font-size: 30px;\n  line-height: 1.5;\n`;\n\nexport const BoxOut = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n  align-items: center;\n  color: var(--gray-4);\n  font-size: 18px;\n  line-height: 1.5;\n`;\n\nexport const NameUser = styled.span`\n  padding: 0 0 0 8px;\n  position: relative;\n\n  @media ${device.tabDesk} {\n    padding-right: 12px;\n    &::after {\n      content: '';\n      position: absolute;\n      right: 0px;\n      width: 1px;\n      height: 30px;\n      background-color: var(--gray-4);\n    }\n  }\n`;\n\nexport const ButtonExit = styled.button`\n  display: flex;\n  flex-wrap: nowrap;\n  align-items: unset;\n  background-color: transparent;\n  border: none;\n  color: var(--gray-4);\n  cursor: pointer;\n\n  @media ${device.tabDesk} {\n    padding-left: 12px;\n  }\n`;\n\nexport const ExitIcon = styled(SVG)`\n  width: 18px;\n  height: 20px;\n  fill: var(--gray-4);\n\n  @media ${device.tabDesk} {\n    margin-right: 8px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const ExitModal = styled.div`\n  height: 100vh;\n  width: 100vw;\n  background-color: rgba(0, 0, 0, 0.5);\n  position: fixed;\n  top: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  text-align: center;\n  justify-content: center;\n  animation: blowUpModal 0.5s cubic-bezier(0.165, 0.84, 0.44, 1) forwards;\n`;\n\nexport const ExitModalContent = styled.div`\n  position: relative;\n  padding: 20px;\n  width: 500px;\n  height: 230px;\n  border-radius: 10px;\n  background-color: var(--white);\n`;\n\nexport const ExitTitle = styled.h1`\n  font-size: 26px;\n  font-family: 'CirceBold', sans-serif;\n  font-weight: 700;\n  line-height: 1.5;\n  margin-bottom: 30px;\n  color: #4a56e2;\n  margin-top: 10px;\n`;\n\nexport const BtnYes = styled.button`\n  font-family: 'CirceBold', sans-serif;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 1.5;\n  background-color: var(--btn-bg-color);\n  border: none;\n  color: var(--white);\n  padding: 10px 50px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  font-size: 16px;\n  margin-right: 100px;\n  cursor: pointer;\n  border-radius: 10px;\n  border: 1px solid var(--btn-bg-color);\n  &:hover {\n    background-color: var(--white);\n    color: var(--btn-bg-color);\n    transition: 1000ms;\n    border: 1px solid var(--btn-bg-color);\n  }\n`;\n\nexport const BtnNo = styled.button`\n  font-family: 'CirceBold', sans-serif;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 1.5;\n  background-color: #f08080;\n  border: none;\n  color: var(--white);\n  padding: 10px 50px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  font-size: 16px;\n  cursor: pointer;\n  border-radius: 10px;\n  border: 1px solid #f08080;\n  &:hover {\n    background-color: var(--white);\n    color: #f08080;\n    transition: 1000ms;\n    border: 1px solid red;\n  }\n`;\n","import { createPortal } from 'react-dom';\nimport { logOut } from 'redux/auth/auth-operations';\nimport { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport {\n  BtnNo,\n  BtnYes,\n  ExitModal,\n  ExitModalContent,\n  ExitTitle,\n} from './ModalLogout.styled';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport const ModalLogout = ({ closeModal }) => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        closeModal();\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [closeModal]);\n\n  // закрытие модалки по бекдропу\n  const handleBackdropClose = e => {\n    if (e.currentTarget === e.target) {\n      closeModal();\n    }\n  };\n\n  return createPortal(\n    <ExitModal onClick={handleBackdropClose}>\n      <ExitModalContent>\n        <ExitTitle>\n          Unsaved data will be lost. Do you really want out?\n        </ExitTitle>\n        <BtnYes\n          type=\"button\"\n          onClick={() => {\n            dispatch(logOut());\n            closeModal();\n          }}\n        >\n          Yes\n        </BtnYes>\n        <BtnNo type=\"button\" onClick={closeModal}>\n          {' '}\n          No\n        </BtnNo>\n      </ExitModalContent>\n    </ExitModal>,\n    modalRoot\n  );\n};\n","import {\n  Box,\n  BoxOut,\n  ButtonExit,\n  ExitIcon,\n  HeaderBox,\n  LinkLogo,\n  LogoIcon,\n  LogoTitle,\n  NameUser,\n} from './Header.styled';\nimport SVG from 'react-inlinesvg';\nimport { exit, logo, logoText } from 'assets/media/icons';\nimport { Mobile } from 'components/Container/Mobile';\nimport { Tablet } from 'components/Container/Tablet';\nimport { Desktop } from 'components/Container/Desktop';\nimport { useSelector } from 'react-redux';\nimport { getUser } from 'redux/auth/auth-selector';\nimport { useState } from 'react';\nimport { ModalLogout } from '../ModalLogout/ModalLogout';\n\nexport const Header = () => {\n  const [out, setLogOut] = useState(false);\n  const name = useSelector(getUser);\n\n  const toggleModal = () => {\n    setLogOut(out => !out);\n  };\n\n  return (\n    <Box>\n      <HeaderBox>\n        <LinkLogo>\n          <LogoIcon\n            src={logo}\n            className=\"logo-icon\"\n            width={30}\n            height={30}\n            title=\"Logo\"\n          />\n          <Mobile>\n            <SVG src={logoText} width={74} height={17} title=\"Logo-title\" />\n          </Mobile>\n          <Tablet>\n            <LogoTitle>Wallet</LogoTitle>\n          </Tablet>\n          <Desktop>\n            <LogoTitle>Wallet</LogoTitle>\n          </Desktop>\n        </LinkLogo>\n        <BoxOut>\n          <NameUser>{name.username}</NameUser>\n          <ButtonExit type=\"button\" onClick={toggleModal}>\n            <ExitIcon src={exit} width={18} height={18} title=\"Exit\" />\n            <Tablet>\n              <span>Exit</span>\n            </Tablet>\n            <Desktop>\n              <span>Exit</span>\n            </Desktop>\n          </ButtonExit>\n        </BoxOut>\n        {out && <ModalLogout closeModal={toggleModal} />}\n      </HeaderBox>\n    </Box>\n  );\n};\n","import styled from 'styled-components';\nimport SVG from 'react-inlinesvg';\nimport { NavLink } from 'react-router-dom';\nimport { device } from 'stylesheet/breakpoints';\n\nexport const Box = styled.div`\n  padding: 12px 44px;\n  margin-bottom: 28px;\n\n  @media ${device.tabDesk} {\n    padding: 0;\n    margin-left: 0;\n    margin-right: 0;\n    display: flex;\n    flex-direction: column;\n    padding: 0;\n  }\n`;\n\nexport const StyledLink = styled(NavLink)`\n  text-decoration: none;\n  color: var(--black);\n\n  :not(:last-child) {\n    @media ${device.mobile} {\n      margin-right: 30px;\n      margin-bottom: 0;\n    }\n    margin-bottom: 12px;\n  }\n\n  @media ${device.tabDesk} {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n  }\n`;\n\nexport const Text = styled.span`\n  @media ${device.mobile} {\n    display: none;\n  }\n\n  font-family: 'Poppins-Regular';\n  font-size: 18px;\n  line-height: 1.5;\n\n  ${StyledLink}.active & {\n    font-family: 'Poppins-Bold';\n    font-weight: 700;\n  }\n`;\n\nexport const Icon = styled(SVG)`\n  padding: 3px;\n\n  fill: var(--disable-bg-color);\n\n  ${StyledLink}.active & {\n    fill: var(--active-bg-color);\n  }\n\n  @media ${device.tabDesk} {\n    margin-right: 20px;\n  }\n`;\n\nexport const CurrencyIcon = styled(SVG)`\n  padding: 3px;\n  fill: var(--disable-bg-color);\n\n  ${StyledLink}.active & {\n    fill: var(--active-bg-color);\n  }\n`;\n","import { Mobile } from 'components/Container/Mobile';\nimport { IsDesktopOrTablet } from 'components/Container/Tablet';\nimport { home, homeS, statistic, statS, currency } from 'assets/media/icons';\nimport { Box, StyledLink, Text, Icon, CurrencyIcon } from './Navigation.styled';\n\nexport const Navigation = () => {\n  return (\n    <Box>\n      <StyledLink to=\"/home\">\n        <Mobile>\n          <Icon src={home} width={44} height={44} title=\"home\" />\n        </Mobile>\n        <IsDesktopOrTablet>\n          <Icon src={homeS} width={24} height={24} title=\"home\" />\n        </IsDesktopOrTablet>\n        <Text>Home</Text>\n      </StyledLink>\n      <StyledLink to=\"/diagram\">\n        <Mobile>\n          <Icon src={statistic} width={44} height={44} title=\"home\" />\n        </Mobile>\n        <IsDesktopOrTablet>\n          <Icon src={statS} width={24} height={24} title=\"statistic\" />\n        </IsDesktopOrTablet>\n        <Text>Statistics</Text>\n      </StyledLink>\n      <Mobile>\n        <StyledLink to=\"/currency\">\n          <CurrencyIcon\n            src={currency}\n            width={44}\n            height={44}\n            title=\"currency\"\n          />\n        </StyledLink>\n      </Mobile>\n    </Box>\n  );\n};\n","import styled from 'styled-components';\nimport { Form, Field } from 'formik';\nimport DatePicker from 'react-datepicker';\nimport SVG from 'react-inlinesvg';\nimport Select from 'react-select';\n\n// const colorActiveLable = 'green';\n\nexport const Modal = styled.div`\n  height: 100vh;\n  width: 100vw;\n  background-color: rgba(0, 0, 0, 0.5);\n  position: fixed;\n  top: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  text-align: center;\n  justify-content: center;\n  animation: blowUpModal 0.5s cubic-bezier(0.165, 0.84, 0.44, 1) forwards;\n  /* transform: scale(0); */\n\n  /* &.active {\n    transform: scale(1);\n  } */\n`;\n\nexport const ModalContent = styled.div`\n  position: relative;\n  padding: 20px;\n  width: 540px;\n  height: 603px;\n  border-radius: 20px;\n  background-color: var(--white);\n`;\n\nexport const ModalHead = styled.h1`\n  margin-top: 20px;\n  margin-bottom: 40px;\n  font-family: 'Poppins Regular';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 30px;\n  line-height: 1.5;\n\n  color: var(--black);\n`;\n\n// FORM RADIOBUTTON\n\nexport const ModalForm = styled(Form)`\n  display: block;\n`;\n\nexport const Operation = styled.div`\n  display: flex;\n  justify-content: center;\n  text-align: center;\n  align-items: center;\n  font-family: 'CirceBold', sans-serif;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 1.5;\n`;\n\nexport const LabelIncome = styled.label`\n  margin-right: 20px;\n  position: relative;\n  cursor: pointer;\n  color: var(--gray-5);\n  transition: 500ms;\n  text-align: right;\n\n  &:hover,\n  :active {\n    color: var(--btn-bg-color);\n  }\n`;\n\nexport const LabelExpense = styled.label`\n  color: var(--gray-5);\n  margin-left: 20px;\n  text-align: right;\n  position: relative;\n  cursor: pointer;\n  text-align: left;\n\n  &:hover,\n  :active {\n    color: var(--error-color);\n  }\n`;\n\n// border: 1px solid #e0e0e0;\n//   width: 80px;\n//   height: 40px;\n//   border-radius: 30px;\n\nexport const ToggleRb = styled.div`\n  position: relative;\n  height: 40px;\n  width: 80px;\n  background-color: var(--white);\n  border: 1px solid var(--gray-5);\n  border-radius: 30px;\n  transition: all 500ms;\n`;\n\nexport const Plus = styled.div`\n  position: absolute;\n  width: 44px;\n  height: 44px;\n  background-color: var(--btn-bg-color);\n  box-shadow: 0px 6px 15px rgba(36, 204, 167, 0.5);\n  top: -3px;\n  left: 0;\n  border-radius: 50%;\n  transition: all 500ms;\n  z-index: 4;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const RadioFieldIncome = styled(Field)`\n  display: none;\n\n  &:checked ~ ${LabelIncome} {\n    color: var(--btn-bg-color);\n  }\n`;\n\nexport const RadioFieldExpense = styled(Field)`\n  display: none;\n\n  &:checked {\n    ~ ${LabelExpense} {\n      color: var(--error-color);\n    }\n    ~ ${ToggleRb} > ${Plus} {\n      left: 40px;\n      background-color: var(--error-color);\n      box-shadow: 0px 6px 15px rgba(255, 101, 150, 0.5);\n    }\n  }\n`;\n\nexport const CloseIcon = styled(SVG)`\n  left: 20%;\n  width: 20px;\n  height: 20px;\n  fill: var(--white);\n`;\n\n// Toggle Changes\n\n// export const Marker = styled.div`\n//   position: relative;\n//   background-color: #e0e0e0;\n//   width: 16px;\n//   height: 16px;\n//   border-radius: 50%;\n//   z-index: 2;\n//   pointer-events: none;\n//   transform: translateX(1px);\n//   transition: transform 250ms linear;\n// `;\n\n// export const RadioButton = styled.div`\n//   display: flex;\n//   justify-content: space-around;\n//   text-align: center;\n//   align-items: center;\n//   border-radius: 30px;\n//   width: 80px;\n//   height: 40px;\n//   border: 1px solid #e0e0e0;\n// `;\n\n// BUTTON\n\nexport const ButtonClose = styled.button`\n  position: absolute;\n  top: 0;\n  right: 0;\n  cursor: pointer;\n  background-color: var(--white);\n  border: none;\n  margin: 20px;\n`;\n\nexport const Btn = styled.div`\n  display: block;\n  /* font-family: 'Circe', sans-serif;\n  font-style: normal;\n  font-weight: 400;\n  font-size: 18px;\n  line-height: 1.5;\n  text-align: center;\n  letter-spacing: 0.3em;\n  text-transform: uppercase; */\n`;\n\nexport const ButtonAdd = styled.button`\n  width: 300px;\n  height: 50px;\n  background-color: var(--btn-bg-color);\n  color: var(--white);\n  border: none;\n  border-radius: 20px;\n  margin-bottom: 20px;\n  cursor: pointer;\n  transition: 1000ms;\n\n  &:hover {\n    background-color: var(--white);\n    color: var(--btn-bg-color);\n    transition: 1000ms;\n    border: 1px solid var(--btn-bg-color);\n  }\n`;\n\nexport const ButtonCancel = styled.button`\n  width: 300px;\n  height: 50px;\n  background-color: var(--white);\n  border: 1px solid var(--active-bg-color);\n  border-radius: 20px;\n  color: var(--active-bg-color);\n  cursor: pointer;\n  transition: 1000ms;\n  &:hover {\n    background-color: var(--active-bg-color);\n    color: var(--white);\n    transition: 1000ms;\n  }\n`;\n\nexport const DateContainer = styled.div`\n  position: relative;\n`;\n\nexport const IconDate = styled.label`\n  position: absolute;\n  top: 60%;\n  left: 80%;\n  cursor: pointer;\n`;\n\nexport const SvgDate = styled.svg`\n  transition: 500ms;\n  transform: scale(1);\n  :hover {\n    box-shadow: 0px 0px 23px -3px rgba(0, 0, 0, 0.75);\n    transition: 500ms;\n    transform: scale(1.1);\n  }\n`;\n\nexport const AmountDate = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n  text-align: center;\n  padding-right: 25px;\n`;\n// Field\n\nexport const SelectField = styled(Select)`\n  display: block;\n  outline: none;\n  margin-top: 40px;\n  margin-left: 50px;\n  margin-right: 50px;\n`;\n\nexport const AmountField = styled(Field)`\n  padding: 8px;\n  margin-top: 40px;\n  border: 1px solid var(--gray-5);\n  border-top: none;\n  border-left: none;\n  border-right: none;\n  outline: none;\n  &::placeholder {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    text-align: center;\n    padding-bottom: 8px;\n  }\n`;\n\nexport const DateField = styled(DatePicker)`\n  outline: none;\n  padding: 8px;\n  padding-left: 20px;\n  margin-top: 40px;\n  border: 1px solid var(--gray-5);\n  border-top: none;\n  border-left: none;\n  border-right: none;\n`;\n\nexport const CommentField = styled(Field)`\n  outline: none;\n  padding: 8px;\n  margin-top: 40px;\n  margin-bottom: 40px;\n  border: 1px solid var(--gray-5);\n  border-top: none;\n  border-left: none;\n  border-right: none;\n  width: 400px;\n\n  font-weight: 400;\n  font-size: 18px;\n  line-height: 27px;\n  &::placeholder {\n    color: var(--gray-4);\n  }\n`;\n","import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\n\nexport const categories = createAsyncThunk(\n  'transaction/category',\n  async (_, thunkAPI) => {\n    try {\n      const res = await axios.get('/api/transaction-categories');\n      return res.data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\nexport const transaction = createAsyncThunk(\n  'transaction/transactions',\n  async (_, thunkAPI) => {\n    try {\n      const res = await axios.get('/api/transactions');\n      return res.data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\nexport const addTransaction = createAsyncThunk(\n  'transaction/add',\n  async (transaction, thunkAPI) => {\n    try {\n      const res = await axios.post('/api/transactions', transaction);\n      return res.data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\n// export const logIn = createAsyncThunk(\n//   'auth/login',\n//   async (credentials, thunkAPI) => {\n//     try {\n//       const res = await axios.post('/api/auth/sign-in', credentials);\n//       setAuthHeader(res.data.token);\n\n//       return res.data;\n//     } catch (error) {\n//       return thunkAPI.rejectWithValue(error.message);\n//     }\n//   }\n// );\n\n// export const logOut = createAsyncThunk(\n//   'auth/logout',\n//   async (_, thunkAPI) => {\n//   try {\n//     await axios.post('/api/auth/sign-out');\n//     clearAuthHeader();\n//   } catch (error) {\n//     return thunkAPI.rejectWithValue(error.message);\n//   }\n// });\n\n// export const refreshUser = createAsyncThunk(\n//   'auth/refresh',\n//   async (_, thunkAPI) => {\n//     const state = thunkAPI.getState();\n//     const token = state.auth.token;\n\n//     if (token === null) {\n//       return thunkAPI.rejectWithValue('Unable to fetch user');\n//     }\n\n//     try {\n//       setAuthHeader(token);\n//       const res = await axios.get('/api/users/current');\n//       return res.data;\n//     } catch (error) {\n//       return thunkAPI.rejectWithValue(error.message);\n//     }\n//   }\n// );\n","import { createPortal } from 'react-dom';\nimport { useEffect, useState } from 'react';\nimport {\n  AmountDate,\n  AmountField,\n  Btn,\n  ButtonAdd,\n  ButtonCancel,\n  ButtonClose,\n  CommentField,\n  DateContainer,\n  DateField,\n  IconDate,\n  LabelExpense,\n  LabelIncome,\n  Modal,\n  ModalContent,\n  ModalForm,\n  ModalHead,\n  Operation,\n  RadioFieldExpense,\n  RadioFieldIncome,\n  ToggleRb,\n  CloseIcon,\n  Plus,\n  SvgDate,\n  SelectField,\n} from './ModalAddTransaction.styled';\nimport { close, minus } from 'assets/media/icons';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { Formik, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addTransaction } from 'redux/transaction/operations';\nimport { getAllTransactionsThunk } from 'redux/finance/finance-operations';\nimport moment from 'moment';\n\nconst modalRoot = document.querySelector('#modal-root');\nconst initialValues = {\n  transactionDate: new Date(),\n  type: 'EXPENSE',\n  categoryId: '',\n  amount: '',\n  comment: '',\n};\n\nconst schema = yup.object().shape({\n  type: yup.string().required(),\n  amount: yup.number().required('Enter amount'),\n  transactionDate: yup\n    .date()\n    .required()\n    .default(() => new Date()),\n  categoryId: yup.object(),\n  comment: yup.string(),\n});\n\nconst ErrorText = styled.p`\n  color: red;\n`;\n\nconst FromError = ({ name }) => {\n  return (\n    <ErrorMessage\n      name={name}\n      render={message => <ErrorText>{message}</ErrorText>}\n    />\n  );\n};\n\nexport const ModalAddTransaction = ({ closeModal }) => {\n  const [startDate, setStartDate] = useState(new Date());\n  const [select, setSelect] = useState('');\n  const dispatch = useDispatch();\n  const categoriesName = useSelector(state => state.categories.items);\n  // const [transType, setTransType] = useState('EXPENSE');\n  // console.log(categoriesName.items);\n  useEffect(() => {\n    dispatch(getAllTransactionsThunk());\n  }, [dispatch]);\n\n  // закрытие модалки по ескейпу\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        closeModal();\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [closeModal]);\n\n  // закрытие модалки по бекдропу\n  const handleBackdropClose = e => {\n    if (e.currentTarget === e.target) {\n      closeModal();\n    }\n  };\n  // FORM\n\n  const handleChangeDate = e => {\n    setStartDate(e);\n    console.log('object :>> ', e);\n    const day = e.toISOString(10).slice(0, 10);\n    console.log(day);\n  };\n\n  const handleChange = e => {\n    //console.log(e.target.value);\n  };\n\n  const handleSubmit = (values, { resetForm, ...props }) => {\n    const date = moment(startDate).format('YYYY-MM-DD');\n    values.transactionDate = date;\n\n    // values.transactionDate = values.transactionDate.toISOString().slice(0, 10);\n\n    values.categoryId = select;\n    values.amount =\n      values.type === 'EXPENSE' ? '-' + values.amount : '' + values.amount;\n    console.log(values.categoryId);\n    console.log(values);\n    dispatch(addTransaction(values));\n    resetForm();\n  };\n\n  // const handleSubmit = (values, { setFieldError, resetForm, ...props }) => {\n  //   values.transactionDate = values.transactionDate.toLocaleDateString();\n  //   if (values.type === 'EXPENSE' && values.categoryId === null) {\n  //     setFieldError('categoryId', 'categoryId is requyred');\n  //     return;\n  //   }\n  //   console.log(props);\n  //   resetForm();\n  // };\n\n  return createPortal(\n    <Modal onClick={handleBackdropClose}>\n      <ModalContent>\n        <ModalHead>Add transaction</ModalHead>\n        <Formik\n          initialValues={initialValues}\n          validationSchema={schema}\n          onSubmit={handleSubmit}\n        >\n          {props => {\n            // console.log(props.values);\n            return (\n              <ModalForm>\n                <Operation onChange={handleChange}>\n                  <RadioFieldIncome\n                    id=\"income\"\n                    type=\"radio\"\n                    checked={props.values.type === 'INCOME'}\n                    name=\"type\"\n                    value=\"INCOME\"\n                  />\n                  <RadioFieldExpense\n                    id=\"expense\"\n                    type=\"radio\"\n                    checked={props.values.type === 'EXPENSE'}\n                    name=\"type\"\n                    value=\"EXPENSE\"\n                  />\n                  <LabelIncome htmlFor=\"income\">Income </LabelIncome>\n                  <ToggleRb>\n                    <Plus>\n                      <CloseIcon\n                        src={props.values.type === 'INCOME' ? close : minus}\n                        width={20}\n                        height={20}\n                        title=\"Change\"\n                      />\n                    </Plus>\n                  </ToggleRb>\n                  <LabelExpense htmlFor=\"expense\">Expense</LabelExpense>\n                </Operation>\n\n                {props.values.type === 'EXPENSE' && (\n                  <div>\n                    <SelectField\n                      name=\"categoryId\"\n                      onChange={option => {\n                        setSelect(option.value);\n                      }}\n                      options={categoriesName?.map(({ name, id }) => ({\n                        value: id,\n                        label: name,\n                      }))}\n                      placeholder={'Select a category'}\n                      styles={{\n                        control: (baseStyles, state) => ({\n                          ...baseStyles,\n                          outline: 'none',\n                          border: '1px solid var(--gray-5)',\n                          borderTop: 'none',\n                          borderLeft: 'none',\n                          borderRight: 'none',\n                        }),\n                      }}\n                    />\n                    <FromError name=\"categoryId\" />\n                  </div>\n                )}\n\n                <AmountDate>\n                  <label htmlFor=\"amount\"></label>\n                  <AmountField type=\"number\" name=\"amount\" placeholder=\"0.00\" />\n                  <FromError name=\"amount\" />\n                  <DateContainer>\n                    <DateField\n                      id=\"transactionDate\"\n                      type=\"date\"\n                      name=\"transactionDate\"\n                      selected={startDate}\n                      onChange={handleChangeDate}\n                      dateFormat=\"dd.MM.yyyy\"\n                    />\n                    <FromError name=\"transactionDate\" />\n                    <IconDate htmlFor=\"transactionDate\">\n                      <SvgDate\n                        width=\"18\"\n                        height=\"20\"\n                        viewBox=\"0 0 18 20\"\n                        fill=\"none\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                      >\n                        <path\n                          d=\"M6 9H4V11H6V9ZM10 9H8V11H10V9ZM14 9H12V11H14V9ZM16 2H15V0H13V2H5V0H3V2H2C0.89 2 0.00999999 2.9 0.00999999 4L0 18C0 19.1 0.89 20 2 20H16C17.1 20 18 19.1 18 18V4C18 2.9 17.1 2 16 2ZM16 18H2V7H16V18Z\"\n                          fill=\"#4A56E2\"\n                        />\n                      </SvgDate>\n                    </IconDate>\n                  </DateContainer>\n                </AmountDate>\n                <label htmlFor=\"comment\"></label>\n                <div>\n                  <CommentField\n                    type=\"text\"\n                    name=\"comment\"\n                    placeholder=\"Comment\"\n                  />\n                </div>\n                <Btn>\n                  <ButtonAdd\n                    type=\"submit\"\n                    onClick={() => {\n                      addTransaction();\n                      setTimeout(() => {\n                        closeModal();\n                      }, 100);\n                    }}\n                  >\n                    ADD\n                  </ButtonAdd>\n                  <ButtonCancel type=\"button\" onClick={closeModal}>\n                    CANCEL\n                  </ButtonCancel>\n                </Btn>\n              </ModalForm>\n            );\n          }}\n        </Formik>\n        <ButtonClose onClick={closeModal}>\n          <svg\n            version=\"1.1\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"16\"\n            height=\"16\"\n            viewBox=\"0 0 32 32\"\n          >\n            <path\n              fill=\"none\"\n              strokeLinejoin=\"miter\"\n              strokeLinecap=\"butt\"\n              strokeMiterlimit=\"4\"\n              strokeWidth=\"1.7778\"\n              stroke=\"#000\"\n              d=\"M1.778 1.778l28.444 28.444\"\n            ></path>\n            <path\n              fill=\"none\"\n              strokeLinejoin=\"miter\"\n              strokeLinecap=\"butt\"\n              strokeMiterlimit=\"4\"\n              strokeWidth=\"1.7778\"\n              stroke=\"#000\"\n              d=\"M1.778 30.222l28.444-28.444\"\n            ></path>\n          </svg>\n        </ButtonClose>\n      </ModalContent>\n    </Modal>,\n    modalRoot\n  );\n};\n","import styled from '@emotion/styled';\nimport SVG from 'react-inlinesvg';\nimport { device } from 'stylesheet/breakpoints';\n\nexport const Button = styled.button`\n  position: absolute;\n  right: 20px;\n  bottom: 20px;\n  border-radius: 50%;\n  width: 44px;\n  height: 44px;\n  background-color: #24cca7;\n  box-shadow: 0px 6px 15px rgba(36, 204, 167, 0.5);\n  border: none;\n  cursor: pointer;\n\n  @media ${device.tabDesk} {\n    right: 40px;\n    bottom: 40px;\n  }\n`;\nexport const SpanBtn = styled.span`\n  /* position: absolute;\n  top: 22%;\n  left: 25%;\n  width: 20px;\n  height: 20px;\n  padding: 0;\n  margin: 0;\n  color: #ffffff;\n  font-size: 40px;\n  font-weight: 100; \n  text-align: center; */\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const CloseIcon = styled(SVG)`\n  width: 20px;\n  height: 20px;\n  fill: var(--white);\n`;\n","import { ModalAddTransaction } from 'components/ModalAddTransaction/ModalAddTransaction';\nimport { useState } from 'react';\n\nimport { Button, CloseIcon, SpanBtn } from './ButtonAddTransaction.styled';\nimport { close } from 'assets/media/icons';\n\nexport const ButtonAddTransactions = () => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const toggleModal = () => {\n    setIsModalOpen(isModalOpen => !isModalOpen);\n  };\n  return (\n    <>\n      <Button type=\"button\" onClick={toggleModal}>\n        <SpanBtn>\n          <CloseIcon src={close} width={20} height={20} title=\"Close\" />\n        </SpanBtn>\n      </Button>\n      {isModalOpen && <ModalAddTransaction closeModal={toggleModal}\n       />}\n    </>\n  );\n};\n","import { desktop, tablet } from 'constants/responsive';\nimport styled from 'styled-components';\nimport { device } from 'stylesheet/breakpoints';\n\nexport const Container = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100vh;\n  margin: 0 auto;\n  overflow: hidden;\n  background-color: rgba(255, 255, 255, 0.4);\n  backdrop-filter: blur(25px);\n`;\n\nexport const Box = styled.div`\n  width: 100%;\n  margin: 0 auto;\n  padding: 12px 20px;\n\n  @media ${device.tablet} {\n    width: ${tablet}px;\n    padding: 32px 40px 32px;\n  }\n\n  @media ${device.desktop} {\n    width: ${desktop}px;\n    display: flex;\n    padding: 40px 40px 40px 0;\n  }\n`;\n\nexport const AppBarBox = styled.div`\n  margin-bottom: 32px;\n\n  @media ${device.tablet} {\n    display: flex;\n    margin-bottom: 20px;\n  }\n\n  @media ${device.desktop} {\n    height: 100vh;\n    flex-direction: column;\n    padding-left: 16px;\n    padding-right: 69px;\n    border-right: 1px solid #e7e5f2;\n    box-shadow: -1px 0px 0px rgba(0, 0, 0, 0.05),\n      1px 0px 0px rgba(255, 255, 255, 0.6);\n    margin-bottom: 0;\n  }\n`;\n\nexport const NavBox = styled.div`\n  @media ${device.tablet} {\n    margin-right: 32px;\n  }\n\n  @media ${device.desktop} {\n    margin-right: 0;\n    margin-bottom: 32px;\n  }\n`;\n","import { Suspense } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { Balance } from 'components/Balance/Balance';\nimport { Currency } from 'components/Currency/Currency';\nimport { Header } from 'components/Header/Header';\nimport { Loader } from 'components/Loader/Loader';\nimport { Navigation } from 'components/Navigation/Navigation';\nimport { ButtonAddTransactions } from 'components/ButtonAddTransaction/ButtonAddTransaction';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllCategoriesThunk } from 'redux/categories/categories-operations';\nimport { IsDesktopOrTablet } from 'components/Container/Tablet';\nimport { Box, AppBarBox, NavBox } from './Dashboard.styled';\nimport { Container } from './Dashboard.styled';\nimport { getToken } from 'redux/auth/auth-selector';\nimport Login from '../Login';\nconst Dashboard = () => {\n  const dispatch = useDispatch();\n  const token = useSelector(getToken);\n  useEffect(() => {\n    dispatch(getAllCategoriesThunk());\n  }, [dispatch]);\n\n  return token ? (\n    <Container>\n      <Header name=\"Name\" />\n      <Box>\n        <AppBarBox>\n          <NavBox>\n            <Navigation />\n            <IsDesktopOrTablet>\n              <Balance />\n            </IsDesktopOrTablet>\n          </NavBox>\n          <IsDesktopOrTablet>\n            <Currency />\n          </IsDesktopOrTablet>\n        </AppBarBox>\n        <div>\n          <Suspense fallback={<Loader />}>\n            <Outlet />\n          </Suspense>\n        </div>\n        <ButtonAddTransactions />\n      </Box>\n    </Container>\n  ) : (\n    <Login />\n  );\n};\n\nexport default Dashboard;\n","\n\n\nexport const transactionsSelector = (state)  =>  state.finance.transactions;\n   \n  \n\nexport const categoriesSelector = (state)  => state.categories.items;"],"names":["Box","styled","device","Title","Amount","Balance","user","useSelector","getUser","transactions","transactionsSelector","useState","balance","setBalance","afterTransactions","length","balanceAfter","useEffect","toFixed","Mobile","children","useMobile","HeaderBox","tablet","desktop","LinkLogo","NavLink","LogoIcon","SVG","LogoTitle","BoxOut","NameUser","ButtonExit","ExitIcon","ExitModal","ExitModalContent","ExitTitle","BtnYes","BtnNo","modalRoot","document","querySelector","ModalLogout","closeModal","dispatch","useDispatch","handleKeyDown","e","code","window","addEventListener","removeEventListener","createPortal","onClick","currentTarget","target","type","logOut","Header","out","setLogOut","name","toggleModal","src","logo","className","width","height","title","logoText","Tablet","Desktop","username","exit","StyledLink","Text","Icon","CurrencyIcon","Navigation","to","home","homeS","statistic","statS","currency","Modal","ModalContent","ModalHead","ModalForm","Form","Operation","LabelIncome","LabelExpense","ToggleRb","Plus","RadioFieldIncome","Field","RadioFieldExpense","CloseIcon","ButtonClose","Btn","ButtonAdd","ButtonCancel","DateContainer","IconDate","SvgDate","AmountDate","SelectField","Select","AmountField","DateField","DatePicker","CommentField","addTransaction","createAsyncThunk","_","thunkAPI","axios","res","data","rejectWithValue","message","transaction","initialValues","transactionDate","Date","categoryId","amount","comment","schema","yup","shape","required","default","ErrorText","FromError","render","ModalAddTransaction","startDate","setStartDate","select","setSelect","categoriesName","state","categories","items","getAllTransactionsThunk","handleChangeDate","console","log","day","toISOString","slice","handleChange","validationSchema","onSubmit","values","resetForm","date","moment","format","props","onChange","id","checked","value","htmlFor","close","minus","option","options","map","label","placeholder","styles","control","baseStyles","outline","border","borderTop","borderLeft","borderRight","selected","dateFormat","viewBox","fill","xmlns","d","setTimeout","version","strokeLinejoin","strokeLinecap","strokeMiterlimit","strokeWidth","stroke","Button","SpanBtn","ButtonAddTransactions","isModalOpen","setIsModalOpen","Container","AppBarBox","NavBox","token","getToken","getAllCategoriesThunk","Currency","Suspense","fallback","Loader","Login","finance","categoriesSelector"],"sourceRoot":""}