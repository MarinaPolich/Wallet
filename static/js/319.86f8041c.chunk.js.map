{"version":3,"file":"static/js/319.86f8041c.chunk.js","mappings":"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","sources":["components/RegistrationForm/RegistrationForm.styled.js","components/RegistrationForm/RegistrationForm.jsx","pages/Registration.styled.js","pages/Registration.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\nimport { device } from 'stylesheet/breakpoints';\nexport const Container = styled.div`\n  background-color: white;\n  width: 320px;\n  heigth: 100vh;\n  padding: 107px 20px;\n  @media ${device.tablet} {\n    width: 533px;\n    border-radius: 20px;\n    padding: 40px 59px 62px 65px;\n  }\n`;\nexport const Title = styled.h2`\n  color: var(--black);\n  font-family: 'Poppins Bold';\n  font-weight: 700;\n  font-size: 30px;\n  line-height: 1.5;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 60px;\n`;\nexport const LogoSvg = styled(SVG)`\n  margin-right: 20px;\n`;\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\nexport const Label = styled.label`\n  margin-bottom: 32px;\n`;\nexport const Input = styled.input`\n  width: 280px;\n  border: none;\n  outline: 0;\n  border-bottom: 1px solid #e0e0e0;\n  font-family: 'Circe';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 18px;\n  line-height: 1.5;\n  color: #bdbdbd;\n  padding-left: 45px;\n  padding-bottom: 8px;\n  @media ${device.tablet} {\n    width: 410px;\n  }\n`;\nexport const TextError = styled.p`\n  font-family: 'Circe';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 18px;\n  line-height: 1.5;\n  color: #24cca7;\n  margin-top: 5px;\n`;\nexport const Svg = styled(SVG)`\n  position: absolute;\n`;\nexport const Button = styled.button`\n  font-family: 'Circe';\n  font-weight: 400;\n  font-size: 18px;\n  line-height: 1.5;\n  text-align: center;\n  letter-spacing: 0.1em;\n  text-transform: uppercase;\n\n  color: #ffffff;\n  width: 280px;\n  height: 50px;\n  margin-bottom: 20px;\n  background-color: #24cca7;\n  border: none;\n  border-radius: 20px;\n  @media ${device.tablet} {\n    width: 300px;\n  }\n`;\nexport const StyledLink = styled(Link)`\n  font-family: 'Circe';\n  font-weight: 400;\n  font-size: 18px;\n  line-height: 1.5;\n  letter-spacing: 0.1em;\n  text-transform: uppercase;\n  text-decoration: none;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  color: #4a56e2;\n  width: 280px;\n  height: 50px;\n  background-color: #ffffff;\n  border: 1px solid #4a56e2;\n  border-radius: 20px;\n  @media ${device.tablet} {\n    width: 300px;\n  }\n`;\n","import React from 'react';\nimport { Formik } from 'formik';\nimport { registration } from '../../redux/auth/auth-operations';\nimport { useDispatch } from 'react-redux';\nimport * as Yup from 'yup';\nimport {\n  Form,\n  Input,\n  Label,\n  Container,\n  Title,\n  Svg,\n  Button,\n  StyledLink,\n  LogoSvg,\n  TextError,\n} from './RegistrationForm.styled.js';\nimport { logo, email, lock, account } from 'assets/media/icons';\nexport const RegistrationForm = () => {\n  const dispatch = useDispatch();\n  const handelSubmit = ({ email, password, username }, { resetForm }) => {\n    dispatch(registration({ email, password, username }));\n    resetForm();\n  };\n  const RegistrationSchema = Yup.object().shape({\n    email: Yup.string().email().required('Enter email'),\n    password: Yup.string()\n      .min(6, 'Password is too short, at least 6!')\n      .max(12, 'Password is too long, at maximum 12!')\n      .required('Enter password'),\n    username: Yup.string()\n      .min(1, 'Too Short!')\n      .max(12, 'Too Long!')\n      .required('Enter name'),\n    confirm: Yup.string()\n      .required('Enter password')\n      .oneOf(\n        [Yup.ref('password'), null],\n        'Your passwords are different, try harder!'\n      ),\n  });\n  return (\n    <Formik\n      initialValues={{ email: '', password: '', confirm: '', username: '' }}\n      validationSchema={RegistrationSchema}\n      onSubmit={handelSubmit}\n    >\n      {({ handleSubmit, handleChange, values, errors, touched }) => (\n        <Container>\n          <Title>\n            <LogoSvg\n              src={logo}\n              className=\"logo-icon\"\n              width={30}\n              height={30}\n              title=\"Logo\"\n            />{' '}\n            Wallet\n          </Title>{' '}\n          <Form onSubmit={handleSubmit}>\n            {' '}\n            <Label>\n              <Svg src={email} width={30} height={28} title=\"Email\" />\n              <Input\n                type=\"email\"\n                name=\"email\"\n                value={values.email}\n                onChange={handleChange}\n                placeholder=\"E-mail\"\n              />{' '}\n              {errors.email && touched.email ? (\n                <TextError>{errors.email}</TextError>\n              ) : null}\n            </Label>\n            <Label>\n              <Svg src={lock} width={30} height={28} title=\"Lock\" />\n              <Input\n                type=\"password\"\n                name=\"password\"\n                value={values.password}\n                onChange={handleChange}\n                placeholder=\"Password\"\n              />\n              {errors.password && touched.password ? (\n                <TextError>{errors.password}</TextError>\n              ) : null}\n            </Label>\n            <Label>\n              <Svg src={lock} width={30} height={28} title=\"Lock\" />\n              <Input\n                type=\"password\"\n                name=\"confirm\"\n                value={values.confirm}\n                onChange={handleChange}\n                placeholder=\"Confirm password\"\n              />\n              {errors.confirm && touched.confirm ? (\n                <TextError>{errors.confirm}</TextError>\n              ) : null}\n            </Label>\n            <Label>\n              <Svg src={account} width={30} height={28} title=\"Account\" />\n              <Input\n                type=\"text\"\n                name=\"username\"\n                value={values.username}\n                onChange={handleChange}\n                placeholder=\"First name \"\n              />\n              {errors.username && touched.username ? (\n                <TextError>{errors.username}</TextError>\n              ) : null}\n            </Label>\n            <Button type=\"submit\">Register</Button>\n            <StyledLink to=\"/login\">Log In</StyledLink>\n          </Form>\n        </Container>\n      )}\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\nexport const Container = styled.div`\ndisplay: flex;\n    flex-direction: column;\n    align-items: center;`","import { RegistrationForm } from 'components/RegistrationForm/RegistrationForm';\nimport {Container} from './Registration.styled'\nconst Registration = () => {\n  return (\n    <Container>\n     <RegistrationForm />\n    </Container>\n  );\n};\n\nexport default Registration;\n"],"names":["Container","styled","device","Title","LogoSvg","SVG","Form","Label","Input","TextError","Svg","Button","StyledLink","Link","RegistrationForm","dispatch","useDispatch","RegistrationSchema","Yup","shape","email","required","password","min","max","username","confirm","oneOf","initialValues","validationSchema","onSubmit","resetForm","registration","handleSubmit","handleChange","values","errors","touched","src","logo","className","width","height","title","type","name","value","onChange","placeholder","lock","account","to"],"sourceRoot":""}